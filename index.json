[
{
	"uri": "http://cloud-docs.taewan.me/010.oci_intro/hands-on-101/000.oci_free_trial/",
	"title": "OCI Free Tier 등록",
	"tags": [],
	"description": "OCI(Oracle Cloud Infrastructure) Oracle Cloud를 사용하기 위해서는 OCI 계정이 필요합니다. 오라클이 무료로 제공하는 프로모션 프로그램인 OCI Free Tiral 계정을 만드는 과정을 소개합니다.",
	"content": " Oracle Cloud Free Tier는 OCI(Oracle Cloud Infrastructure)를 무료로 경험할 수 있도록 제공하는 프로그램입니다. Oracle Cloud Free Tier 계정을 신청하면 한 달 동안 사용할 수 있는 300달러 크래딧이 지급됩니다. 이 크래딧을 이용하여 OCI(Oracle Cloud Infrastructure)의 모든 서비스를 자유롭게 사용할 수 있습니다. 이 문서에서는 Oracle Cloud Free Tier에 대하여 소개하고 계정을 신청하는 절차에 대하여 알아보겠습니다.\n등록 사전 준비 Oracle Cloud Free Tier 계정을 신청하기 위해서는 다음과 같은 정보가 필요합니다.\n E-메일 (gmail, naver, daum 메일 가능) 전화 번호 신용 카드 번호  Oracle Cloud Free Tier 프로그램을 프로모션 사용자를 E-Mail, 전화번호, 신용 카드 번호 조합으로 사용자로 구분합니다. 계정을 등록할 때 입력한 개인 메일과 전화번호는 기존에 Oracle Cloud Free Tier(혹은 이전 Free Trial) 등록에 사용된 이력이 있는지 검증합니다. 따라서 이전에 사용 이력이 없는 메일과 전화 번호를 사용해야 합니다. 신용카드는 일정 횟수 중복 사용을 허용합니다. 그러나 가능한 기존에 사용하지 않는 새로운 카드 사용을 권장합니다. 새로 발급한 은행 직불카드(비자, 마스터)를 사용하는 것이 편리합니다.\n Oracle Cloud Free Tier 계정 등록에 사용되는 신용 카드 정보는 Oracle Cloud Free Tier 프로그램 사용 이력 파악과 일회 사용자 인증 용도로만 사용됩니다. 사용자 인증을 위하여 Oracle Cloud Free Tier 계정 등록에 사용된 카드에 1불을 결재합니다. 결재가 정상적으로 처리되면 정상적인 사용자로 분류하고, 앞서 발생한 결재를 바로 취소합니다.\nOracle Cloud Free Tier 등록에 사용된 신용 카드로 어떠한 과금도 발생하지 않습니다. Oracle Cloud Free Tier를 등록하고 Oracle Cloud Free Tier 계정에서 여러 서비스를 생성한 후, 클라우드 자원을 정지하거나 지우는 작업을 잊어버렸을 경우에 추가 비용이 발생/청구를 걱정하시는 분들이 많습니다. Oracle Cloud Free Tier 계정에서는 어떤 비용 청구도 발생하지 않습니다.\n OCI Free Tier 등록 절차 Oracle Cloud Free Tier 등록 페이지는 https://oracle.com   에서 찾을 수 있습니다. 다음 이미지와 같이 oracle.com 홈페이지에서 Oracle Cloud Free Tier 메뉴로 Free Tier 메인 페이지에 이동할 수 있습니다.\nOracle Cloud Free Tier 메인 페이지에서 \u0026ldquo;Start for free\u0026rdquo; 버튼을 클릭하면 계정 등록 페이지로 이동합니다.\n현재 사용하는 브라우저로 오라클 클라우드에 처음 접속할 경우에 쿠키 정보 수집과 관련한 사용자 동의 페이지가 출력될 수 있습니다. 쿠키 정보 수집을 동의하면 계정 등록 페이지로 이동합니다.\n이제 계정 등록 절차가 시작됩니다. 계정 등록에 사용할 E-mail 주소와 현재 위치 및 사용자 정보 사용에 대한 동의를 체크하고 \u0026ldquo;Next\u0026rdquo; 버튼을 클릭하여 다음으로 이동합니다. 아래 페이지에서 사용 가능한 E-mail인지 검증이 진행됩니다.\n다음 페이지에서 사용 목적, 홈 리전 위치, 등록자 이름, 주소, 소속 국가 및 전화번호 입력이 진행됩니다. 주소를 입력할 때, 다섯 자리 우편 번호를 사용하는 신주소 체계를 사용합니다. 전화번호를 입력할 경우에 첫 번째 번호는 생략해야 합니다. 예를 들어서 010-1234-1234일 경우에 국가 코드를 제외하고 10-1234-1234로 입력해야 합니다. \u0026ldquo;Next:Verify Mobile Number\u0026rdquo; 버튼을 클릭하면 주소 및 전화번호 확인 절차로 넘어갑니다.\n앞에서 입력한 주소 확인 팝업 창이 오픈됩니다. 잘 못 입력되었으면 \u0026ldquo;Edit\u0026ldquo;으로 수정하고 맞으면 \u0026ldquo;Use Original\u0026ldquo;를 클릭합니다.\n위 이미지에서 주소를 확인하면, 앞에서 입력한 전화번호로 다음과 같은 SMS 문자가 전송됩니다. SMS 문자에는 여섯 자리 인증 코드가 포함됩니다.\nSMS 포함된 인증 코드를 다음 팝업 창에 입력하고 \u0026ldquo;Verify Code\u0026rdquo; 버튼을 클릭합니다. 인승 번호가 맞으면 패스워드 설정 페이지로 이동합니다.\n다음과 같은 규칙으로 패스워드를 입력하고 \u0026ldquo;Next: Payment Information\u0026rdquo; 버튼을 클릭하고 신용카드 등록 페이지로 이동합니다.\n다음 이미지와 같이 \u0026ldquo;Add Credit Card Details\u0026rdquo; 버튼을 클릭하면 신용 카드 상세 정보 입력 폼이 출력됩니다.\n아래 이미지와 같은 신용 카드 정보를 입력합니다. 여기서 입력한 신용카드 정보는 사용자 인증 용도로만 이용됩니다. Free Tier 사용과 관련된 어떠한 결재도 발생하지 않습니다.\n신용 카드가 등록되면 다음과 같이 1달러 결재와 1달러 취소 트랜잭션이 실행됩니다. 이 결재와 취소 과정을 통해서 신용 카드 인증이 완료됩니다. Free Tier에 등록된 신용카드 정보는 사용자를 인증한 다음에는 어떤 결제에도 이용되지 않습니다.\n신용 카드 등록이 완료한 후, 다음 그림과 같이 오라클 클라우드 사용 동의 체크 박스를 체크하고 \u0026ldquo;Complete Sign-up\u0026rdquo; 버튼을 클릭하면 모든 사용자 등록 절차는 완료됩니다.\n사용자 등록 절차가 완료되면 다음 이미지와 같이 사용자 생성 중 페이지가 출력됩니다. 이 사용자 생성 페이지는 약 1분 정도 후에 오라클 클라우드 로그인 페이지로 자동 이동됩니다.\n앞에서 입력한 로그인 E-mail과 패스워드를 입력하고 \u0026ldquo;Sign-in\u0026rdquo; 버튼을 클릭하면 Oracle Cloud에 로그인합니다.\n사용자 정보를 확인하고 로그인이 완료되면, Oracle Cloud 메인 페이지에서 Free Trial과 Always Free가 활성화된 것을 확인할 수 있습니다.\n참고문서  새로운 Oracle Cloud 프로모션: \u0008Free Tier    Oracle Offers Always Free Autonomous Database and Cloud Infrastructure    What can I try with my Oracle Cloud Free Trial credits?     "
},
{
	"uri": "http://cloud-docs.taewan.me/000.index/",
	"title": "오라클 클라우드 사용자 가이드",
	"tags": [],
	"description": "&#39;oci-oracle.cloud&#39;는 OCI(Oracle Cloud Infrastructure) 신규 사용자를 위한 기술 문서 사이트입니다.",
	"content": " OCI(Oracle Cloud Infrastructure)는 오라클 클라우드 서비스의 공식 브랜드 명입니다. cloud-docs.taewan.me는 OCI 신규 사용자를 위한 기술 문서 사이트입니다. cloud-docs.taewan.me는 OCI 신규 사용자를 위하여 다음과 같은 내용으로 지속적으로 채워갈 계획입니다.\n   주제 설명     OCI 101/기본 개념 OCI 신규 입문자를 위한 OCI 기본 소개 및 개념 정리   OCI 101/핸드온 OCI 핸드온 랩 - 따라하기 형식 메뉴얼   서비스별 가이드 OCI 세부 서비스 별 가이드 문서   유용한 팁 OCI에 도움 되는 기술 문서    cloud-docs.taewan.me는 OCI Orcle Cloud 관련 문서를 신속하게 그리고 지속적으로 업데이트함을 목표로합니다. cloud-docs.taewan.me는 최신 정보를 유지함을 목표로하지만 시점에 따라서 내용이 현재와 다를수 있습니다. 문서를 확인하실 때 문서 생성일과 최종 문서 수정일을 꼭 확인해 주시기 바랍니다.\ngitter.im 커뮤니티 페이지 gitter.im에 cloud-docs.taewan.me채널을 운영 중입니다. 사이트 이용에 이슈가 있을때 글을 남겨주시면 적극 반영하겠습니다. gitter.im 커뮤니티 페이지의 URL은 다음과 같습니다.\n gitter에 개설된 OCI Oracle Cloud 커뮤니티 채널: https://gitter.im/oci-oracle-cloud/community     "
},
{
	"uri": "http://cloud-docs.taewan.me/",
	"title": "오라클 클라우드 사용자 가이드",
	"tags": [],
	"description": "&#39;oci-oracle.cloud&#39;는 OCI(Oracle Cloud Infrastructure) 신규 사용자를 위한 기술 문서 사이트입니다.",
	"content": " 오라클 클라우드 사용자 가이드 OCI(Oracle Cloud Infrastructure)는 오라클 클라우드 서비스의 공식 브랜드 명입니다. cloud-docs.taewan.me는 OCI 신규 사용자를 위한 기술 문서 사이트입니다. cloud-docs.taewan.me는 OCI 신규 사용자를 위하여 다음과 같은 내용으로 지속적으로 채워갈 계획입니다.\n   주제 설명     OCI 101/기본 개념 OCI 신규 입문자를 위한 OCI 기본 소개 및 개념 정리   OCI 101/핸드온 OCI 핸드온 랩 - 따라하기 형식 메뉴얼   서비스별 가이드 OCI 세부 서비스 별 가이드 문서   유용한 팁 OCI에 도움 되는 기술 문서    cloud-docs.taewan.me는 OCI Orcle Cloud 관련 문서를 신속하게 그리고 지속적으로 업데이트함을 목표로합니다. cloud-docs.taewan.me는 최신 정보를 유지함을 목표로하지만 시점에 따라서 내용이 현재와 다를수 있습니다. 문서를 확인하실 때 문서 생성일과 최종 문서 수정일을 꼭 확인해 주시기 바랍니다.\ngitter.im 커뮤니티 페이지 gitter.im에 cloud-docs.taewan.me채널을 운영 중입니다. 사이트 이용에 이슈가 있을때 글을 남겨주시면 적극 반영하겠습니다. gitter.im 커뮤니티 페이지의 URL은 다음과 같습니다.\n gitter에 개설된 OCI Oracle Cloud 커뮤니티 채널: https://gitter.im/oci-oracle-cloud/community     "
},
{
	"uri": "http://cloud-docs.taewan.me/980.oci-related-sites/oci-sites/",
	"title": "OCI 관련 사이트 모음",
	"tags": [],
	"description": "OCI 관련 사이트를 소개합니다.",
	"content": " 이번 문서에서는 오라클 클라우드를 주제로하는 국내와 주요 사이트와 블로그를 정리합니다.\n이번 문서는 다음과 같은 목차로 구성됩니다.\n 한글 OCI 웹사이트 Oracle 공식 사이트 해외 OCI 관련 사이트    한글 OCI 웹사이트    유형 사이트 명 키워드 설명/특징     커뮤니티 오라클 클라우드 사용자 그룹 (Oracle Cloud KR User Group)    User Group Facebook에서 운영하는 오라클 클라우드 사용자 그룹 커뮤니티 사이트입니다.   블로그 Taewan.kim 오라클 문서 모음    OCI, AI/ML, BigData Oracle Cloud와 빅데이터, AI/ML을 주제로 운영하는 블로그입니다.   메뉴얼사이트 TheKoguryo\u0026#39;s 기술 블로그    OCI Oracle Cloud Infrastructure 입문자를 위한 체계적인 문서를 제공합니다.   블로그 리눅스, 클라우드, IT 관련 기술 블로그    OCI 강태호님께서 운영하시는 블로그입니다. 리눅스와 클라우드 관련 포스팅이 되고 있습니다.   블로그 한국 오라클 Digital Prime 블로그    Oracle Cloud 한국 오라클 디지틀 프라임에서 운영하는 블로그입니다.   블로그 Oracle Cloud Infastructure 블로그    OCI, VCN, Multi-Cloud OCI를 중심으로 AWS, Azure과 통합 관련 문서가 잘 정리되어 있습니다.   블로그 Dan의 기술 블로그    OCI, DevOps, Cloud Native OCI를 중심으로 DevOps 문서를 제공합니다. Terraform, Kubernetes, Serverless 관련 문서를 다룹니다.   블로그 Mastering Oracle Cloud Project    OCI, Oracle Database Oracle Cloud Database를 중심으로 클라우드 인프라를 구성하는 다수의 문서를 제공합니다.   블로그 \u0026#39;Jay Kim\u0026#39; 블로그    OCI 오라클 소속 Jay Kim님이 운영하시느 블로그입니다.   블로그 MN LEE\u0026#39;s IT Blog    OCI 이미남님께서 운영하시는 기술 블로그입니다. OCI PaaS에 대한 유용한 문서를 제공합니다.    Oracle 공식 사이트    유형 사이트 명 키워드 설명/특징     메뉴얼사이트 공식 오라클 클라우드 문서 사이트    OCI, Oracle Database Oracle Cloud Database를 중심으로 클라우드 인프라를 구성하는 다수의 문서를 제공합니다.   개발자포탈 오라클 개발자 포탈    Oracle, OCI, Java, Cloud Native 최신의 OCI 문서를 제공하는 OCI 공식 문서 사이트입니다.   Blog 오라클 블로그: Oracle Cloud Infrastructure    OCI, CLOUD, IaaS Oracle Cloud Infrastructure 관련 최신 기술 문서를 제공합니다.   Blog 오라클 블로그: Cloud Native    OCI, Cloud Native Oracle Cloud에서 지원하는 Cloud Native 관련 최신 기술 문서를 제공합니다.   Blog 오라클 블로그: Developer 블로그    오라클이 운영하는 개발자를 위한 블로그입니다.    Blog 오라클 블로그: Oracle A-Team 블로그    OCI, DevOps, Autonomous, Integration 오라클 에이스 팀인 A-Team이 현장 경험을 공유하는 팀 블로그입니다.    해외 OCI 관련 사이트    유형 사이트 명 키워드 설명/특징     Blog Oracle Groundbreakers 기술 블로그    Oracle, OCI, DevOps Oracle Cloud 및 해당 기술에 관한 모든 Oracle 엔지니어, Groundbreaker, 파트너 및 개발자 커뮤니티의 기술 문서를 정리한 메타 블로그입니다.   Blog AMIS 기술 블로그    Oracle, OCI, Serverless 네덜란드 최고의 Oracle 기술 파트너인 AMIS사가 운영하는 기술 블로그입니다. 유익한 내용이 가득한 곳입니다.   Blog k21academy Blog    Oracle, Cloud 가장 활발한 기술 블로그입니다.   Blog Richard Garsthagen’s Oracle Cloud Blog - oc-blog    OCI OCI를 주제로 운영되는 기술 블로그입니다.   Blog fastcloudblog’s Oracle Cloud Blog - oc-blog    OCI 오라클 소속의 솔루션 아키텍트가 운영하는 블로그입니다.   Blog 오라클 에이스가 함께 운영하는 연합 블로그    OCI 28명의 오라클 에이스가 함께 운영하는 연합 블로그입니다.   Blog martinberger 블로그    OCI, Autonomous ADW 중심으로하는 블로그입니다.   Blog 클라우드 레시피 블로그    OCI, Serverless OCI를 중심으로 Kubernetes와 Serverless를 주제로하는 블로그입니다.   Blog Cloud Blogs    Oracle, OCI, Serverless 오라클에서 클라우드 아키텍트로 활동하고 있는 Madhusudhan Rao님의 블로그입니다.    "
},
{
	"uri": "http://cloud-docs.taewan.me/700.oci_tools/010.cloud_shell/cloud_shell_intro/",
	"title": "Cloud Shell 개요",
	"tags": [],
	"description": "OCI Cloud Shell을 소개합니다.",
	"content": " 브라우저 리눅스 터미널 Cloud Shell은 OCI Console(OCI 관리 웹 콘솔)에서 실행되는 브라우저 기반 가상 리눅스 터미널입니다. OCI Cloud Shell은 GCP의 Google Cloud Shell, Azure의 Cloud Shell 및 AWS의 Session Manager와 유사한 서비스입니다. OCI Cloud Shell를 이용하면 PuTTY를 사용하지 않고 OCI VM 인스턴스에 접속하거나 별도의 소프트웨어와 계정 설정 작업 없이 즉시 OCI CLI 등 OCI 지원 툴을 사용할 수 있습니다.\nCloud Shell 과금정책과 사용 권한 OCI Cloud Shell은 Free 서비스입니다. 서비스 비용이 발생하지 않습니다. OCI Cloud Shell은 현재 유료 Tenancy와 Free Trial(Always Free) 모두 이용 가능합니다. 추가로 OCI 사용자가 Cloud Shell을 사용하기 위해서는 OCI 사용자 그룹에 다음 Policy Statement가 설정돼야 합니다. OCI Cloud Shell 권한 부여 Policy Statement는 다음과 같습니다.\nallow group \u0026lt;GROUP-NAME\u0026gt; to use cloud-shell in tenancy  위 Policy Statment가 적용된 OCI 사용자 그룹의 OCI 사용자는 OCI Cloud Shell을 사용할 수 있습니다. 이 권한을 갖는 OCI 사용자가 OCI Console에 로그인하면, Console 오른쪽 위 메뉴에 Cloud Shell 아이콘이 나타납니다. 이 Cloud Shell 아이콘을 클릭하면 OCI Consle 아래쪽에 Cloud Shell이 열립니다.\nCloud Shell은 브라우저 기반 리눅스 접속 터미널입니다. Cloud Shell은 OCI가 OCI 사용자에게 제공하는 리눅스 VM에 접속합니다. Cloud Shell이 접속한 리눅스 VM은 현재 OCI Console이 사용하고 있는 Region을 터미널 세션 환경 변수로 설정합니다. OCI CLI와 같은 툴이 실행될 때, 이 환경 변수를 사용합니다. 그리고 별도 설정 없이 바로 OCI CLI를 실행할 수 있습니다.\nCloud Shell 창 크기는 브라우저 전체로 확대할 할 수 있습니다.\nCloud Shell 특징과 제약 OCI Cloud Shell의 주요 특징은 다음과 같습니다.\n 리눅스 배포판: Oracle Linux Server release 7.7 OCI Cloud Shell은 VM 형태로 제공1 CPU 타입 (#Core): AMD EPYC 7551 32-Core Processor (1 Core)로 추정2 OCI Tenancy(계정)의 사용자는 OCI Console(OCI 관리 콘솔)에 로그인 OCI CLI 및 Terraform, SQL*Plus와 같은 개발자 도구가 설치되어 있음 사용자 별로 5GB의 영구 저장소를 사용할 수 있고, 이 곳에 파일을 저장 가능. Cloud Shell에서 인터넷에 접속할 수 있음(Public IP를 가진 OCI Compute에 ssh)  2020년 3월 6일 현재 OCI Cloud Shell에는 다음과 같은 제약이 있습니다.\n 세션 최대 24시간으로 제한 OCI Cloud Shell을 20분간 사용하지 않으면 세션 종료 OCI Cloud Shell에 할당된 5GB 스토리지를 반년 동안 사용하지 않으면 메일 통지되고 60일 이내에 스토리지가 제거됨  최대 8개월간 사용되지 않으면 5GB 스토리지에 저장된 데이터는 유실될 수 있음  외부에서 Cloud Shell에 ssh 접속할 수 없음  참고자료  [OCI Official Docs]Cloud Shell      OCI Cloud Shell에서 cat /sys/class/dmi/id/product_name을 실행하면 Standard PC (i440FX + PIIX, 1996)이 출력됩니다. 이것은 KVM/QEMU의 VM임을 의미합니다. [return] 공식 자료에서 확인한 것은 아닙니다. 제가 사용하는 Cloud Shell에서 cat /proc/cpuinfo 명령으로 확인한 사항입니다. [return]   "
},
{
	"uri": "http://cloud-docs.taewan.me/700.oci_tools/010.cloud_shell/",
	"title": "OCI Cloud Shell",
	"tags": [],
	"description": "OCI Cloud Shell을 소개합니다.",
	"content": "OCI Cloud Shell은 OCI Console(OCI 웹 사이트)에서 웹 브라우저로 접근하는 가상 리눅스 VM 터미널입니다. OCI Cloud Shell이 접근하는 리눅스 VM에는 Oracle Cloud 사용자를 위한 다양한 OCI 툴이 설치되고 사용자 맞춤 설정까지 적용돼 있습니다. OCI Cloud Shell은 무상으로 제공되는 서비스입니다. Cloud Shell을 이용하면 OCI 관리 편의성을 크게 높일 수 있습니다.\nOCI Cloud Shlee은 다음과 같은 문서로 정리합니다.\n Cloud Shell 개요     Cloud Shell 둘러보기    \n "
},
{
	"uri": "http://cloud-docs.taewan.me/010.oci_intro/hands-on-101/030.oci_infra_basic/040.custom_image/010.custom_image/",
	"title": "Custom Image 생성",
	"tags": [],
	"description": "OCI Custom Image를 만드는 핸즈온입니다.",
	"content": " OCI는 배포된 Compute 인스턴스의 Boot Volume을 복사하여 템플릿으로 만들고, 이 템플릿을 이용하여 똑같은 형태의 Compute 인스턴스를 만드는 기능을 제공합니다. 구동중인 Compute 인스턴스의 Boot Volume을 재사용 가능한 템플릿으로 만든것을 Custom Image라고 합니다.\nHOL: Custom Image 이번 문서는 기존 Compute Instnace로 부터 OCI Custom Image를 만드는 과정을 소개합니다. 이번 Hands-on Lab은 다음과 같은 순서로 진행합니다.\n HOL: Custom Image  Custom Image 개요 선행 Hands-on Lab Hands-on Lab 실습 환경 Hands-on Lab 시나리오 Custom Image 만들기 Hands-on Lab 요약   \n Custom Image 개요 Compute 인스턴스를 생성할 때 Image를 지정합니다. Image는 Compute 인스턴스의 Boot Volume에 설치되는 운영체제와 설치 프로그램 템플릿입니다. Image는 Compute 인스턴스 환경을 재사용하는 단위입니다.\nOCI 사용자는 OCI가 제공하는 Image를 커스터마이징하여 자신만의 Image를 만들 수 있습니다. 배포된 Compute 인스턴스의 Boot Volume을 템플릿 Image로 만들고, 이 템플릿 Image를 이용하여 새로운 인스턴스를 만들 수 있습니다. 이렇게 만든 사용자 정의 Image를 Custom Image라고 합니다. Custom Image를 이용해서 기존 Compute 인스턴스 환경과 동일한 Compute 인스턴스를 제한없이 만들 수 있습니다.\n선행 Hands-on Lab 이번 Hands-on Lab을 진행하기 위해서는, 다음과 같은 Hands-on Lab이 선행되어야 합니다.\n OCI Free Tier 등록    OCI 사용자\u0026amp;보안 설정    VCN 생성(OCI Console:간편모드)    Compute Service(VM) 생성     Hands-on Lab 실습 환경 이 Hands-on Lab은 OCI 일반 사용자인 demo.admin 사용자로 OCI IAM 로그인하여 진행합니다. 이번 Hands-on Lab에서 사용할 OCI 사용자와 컴파트먼트는 다음과 같습니다.\n   OCI User 작업 Compartment     demo.admin root/sandbox/hol-prod    Hands-on Lab 시나리오 이번 Hands-on Lab은 앞에서 만든 demo-linux-vm을 Custom Image로 만들고, 생성된 Custom Image를 조회하는 절차를 다룹니다.\nCustom Image 만들기 demo-linux-vm 인스턴스를 Custom Image로 만들기 위해서 다음과 같은 메뉴 패스로 Compute 인스턴스 관리 페이지로 이동합니다.\n (OCI 콘솔 왼쪽 위 햄버그 버튼)  Compute  Instances Compute 인스턴스 관리 페이지에서 Compartment를 root/sandbox/hol-prod로 선택한 후, demo-linux-vm 링크를 클릭하여 demo-linux-vm 인스턴스 상세 페이지로 이동합니다.\ndemo-linux-vm 인스턴스 상세 페이지에서 다음과 같은 메뉴를 실행합니다.\nActions  Create Custom Image demo-linux-vm 인스턴스로 Custom Image를 만들기 위해서, Create Custom Image 등록 폼에 다음과 같이 설정합니다.\n   입력 항목 설정값     Create In Compartment root/sandbox/hol-prod   Name demo-custom-image    설정을 마치면 Create Custom Image 버튼을 클릭합니다.\ndemo-linux-vm 인스턴스로 Custom Image를 생성하면 해당 인스턴스는 서비스가 중단됩니다. 그리고 다음 이미지와 같이 Custom Image를 만듭니다. Custom Image가 만들어지면 대상 인스턴스인 demo-linux-vm는 자동으로 다시 시작됩니다. demo-linux-vm가 다시 시작되면 Instance 링크를 클릭하고 Compute 인스턴스 관리 페이지로 이동합니다.\nCompute 인스턴스 관리 페이지에서 왼편 메뉴에서 Custom Images 링크를 클릭하고 Custom Image 관리 페이지로 이동합니다.\nCustom Image 관리 페이지에서 Compartment를 root/sandbox/hol-prod로 선택한 후, demo-custom-image 링크를 클릭하여 demo-custom-image 상세 페이지로 이동합니다.\ndemo-custom-image 상세 페이지에서 Custom Image이 상제 정보를 확인할 수 있습니다. 상제 정보에서 Compatible Shapes를 통해서 지원하는 Shape을 확인할 수 있습니다.\nHands-on Lab 요약 demo-linux-vm 인스턴스 상세 페이지에서 Custom Image를 만들었습니다. 새로 만든 Custom Image 이름은 demo-custom-image입니다. 그리고 새로 만든 demo-custom-image의 상세 정보를 확인했습니다.\n다음 Hands-on Lab에서는 demo-custom-image로 새로운 인스턴스를 만들겠습니다.\n"
},
{
	"uri": "http://cloud-docs.taewan.me/010.oci_intro/hands-on-101/030.oci_infra_basic/050.load_balancer/010.basic_load_balancer/",
	"title": "Custom Image 생성",
	"tags": [],
	"description": "OCI Custom Image를 만드는 핸즈온입니다.",
	"content": " 프로비저닝된 Compute 인스턴스 상태를 템플릿으로 저장하고, 동일한 상태의 Compute 인스턴스를 여러 개 만들기 우 Boot Volume으로 부터 재사용 가능한 사용자 정의 Image를 만들 수 있습니다. 이렇게 만든 사용자 정이 Image를 OCI Custom Image라고 합니다.\nHOL: Custom Image 이번 문서는 기존 Compute Instnace로 부터 OCI Custom Image를 만드는 과정을 소개합니다. 이번 Hands-on Lab은 다음과 같은 순서로 진행합니다.\n HOL: Custom Image  Custom Image 개요 선행 Hands-on Lab Hands-on Lab 실습 환경 Hands-on Lab 시나리오 Custom Image 만들기 Hands-on Lab 요약   \n Custom Image 개요 Compute 인스턴스를 생성할 때 Image를 지정합니다. Image는 Compute 인스턴스의 Boot Volume에 설치되는 운영체제와 설치 프로그램 템플릿입니다. Image는 Compute 인스턴스 환경 재사용하는 단위입니다.\nOCI 사용자는 OCI가 제공하는 Image를 커스터마이징하여 자신만의 Image를 만들 수 있습니다. 프로비저닝된 Compute 인스턴스의 Boot Volume을 템플릿 Image로 만들고 새로운 인스턴스를 만드는 Image로 사용할 수 있습니다. 이렇게 만든 사용자 정의 Image를 Custom Image라고 합니다. Custom Image를 이용하여 기존 Compute Instance 환경을 재사용하여 새로운 Compute 인스턴스를 만들 수 있습니다.\n선행 Hands-on Lab 이번 Hands-on Lab을 진행하기 위해서는, 다음과 같은 Hands-on Lab이 선행되어야 합니다.\n OCI Free Tier 등록    OCI 사용자\u0026amp;보안 설정    VCN 생성(OCI Console:간편모드)    Compute Service(VM) 생성     Hands-on Lab 실습 환경 이 Hands-on Lab은 OCI 일반 사용자인 demo.admin 사용자로 OCI IAM 로그인하여 진행합니다. 이번 Hands-on Lab에서 사용할 OCI 사용자와 컴파트먼트는 다음과 같습니다.\n   OCI User Password 작업 Compartment     demo.admin Welcome123456! root/sandbox/demo-prod    Hands-on Lab 시나리오 이번 Hands-on Lab은 앞에서 만든 demo-linux-vm을 Custom Image로 만들고 이렇게 생성된 Custom Image를 조회하는 절차를 다룹니다.\nCustom Image 만들기 demo-linux-vm 인스턴스를 Custom Image로 만들기 위해서 다음과 같은 메뉴 패스로 Compute 인스턴스 관리 페이지로 이동합니다.\n (OCI 콘솔 왼쪽 위 햄버그 버튼)  Compute  Instances Compute 인스턴스 관리 페이지에서 Compartment를 root/sandbox/hol-prod로 선택한 후, demo-linux-vm 링크를 클릭하여 demo-linux-vm 인스턴스 상세 페이지로 이동합니다.\ndemo-linux-vm 인스턴스 상세 페이지에서 다음과 같은 메뉴를 실행합니다.\nActions  Create Custom Image demo-linux-vm 인스턴스로 Custom Image를 만들기 위해서, Create Custom Image 등록 폼에 다음과 같이 설정합니다.\n   입력 항목 설정값     Create In Compartment root/sandbox/hol-prod   Name demo-custom-image    설정을 마치면 Create Custom Image 버튼을 클릭합니다.\ndemo-linux-vm 인스턴스로 Custom Image를 생성하면 해당 인스턴스는 서비스가 중단됩니다. 그리고 다음 이미지와 같이 Custom Image를 만듭니다. Custom Image가 만들어지면 대상 인스턴스인 demo-linux-vm는 자동으로 다시 시작됩니다. demo-linux-vm가 다시 시작되면 Instance 링크를 클릭하고 Compute 인스턴스 관리 페이지로 이동합니다.\nCompute 인스턴스 관리 페이지에서 왼편 메뉴에서 Custom Images 링크를 클릭하고 Custom Image 관리 페이지로 이동합니다.\nCustom Image 관리 페이지에서 Compartment를 root/sandbox/hol-prod로 선택한 후, demo-custom-image 링크를 클릭하여 demo-custom-image 상세 페이지로 이동합니다.\ndemo-custom-image 상세 페이지에서 Custom Image이 상제 정보를 확인할 수 있습니다. 상제 정보에서 Compatible Shapes를 통해서 지원하는 Shape을 확인할 수 있습니다.\nHands-on Lab 요약 demo-linux-vm 인스턴스 상세 페이지에서 Custom Image를 만들었습니다. 새로 만든 Custom Image는 demo-custom-image입니다. 그리고 새로 만든 demo-custom-image의 상세 정보를 확인했습니다.\n다음 Hands-on Lab에서는 demo-custom-image로 새로운 인스턴스를 만들겠습니다.\n"
},
{
	"uri": "http://cloud-docs.taewan.me/300.data_and_ai/010.big_data/",
	"title": "Big Data Serivce",
	"tags": [],
	"description": "OCI Big Data 서비스를 소개합니다.",
	"content": "//todo\n"
},
{
	"uri": "http://cloud-docs.taewan.me/010.oci_intro/hands-on-101/030.oci_infra_basic/010.vcn/",
	"title": "VCN 생성(OCI Console:간편모드)",
	"tags": [],
	"description": "OCI Compute 서비스를 사용하면 여러 VCN(Virtual Cloud Network)을 구성하는 핸즈온입니다.",
	"content": " OCI Compute 서비스를 사용하면 여러 VCN(Virtual Cloud Network)을 만들 수 있습니다. OCI 자원을 생성/배포하기 위해서는 다른 자원을 생성하기 전에 VCN을 먼저 만들어야 합니니다. VCN은 다음과 같은 네트워크 컴포넌트로 만들어집니다.\n Subnet Route Table Security List Internet Gateway NAT Gateway Service Gateway Dynamic Routing Gateway Load Balancer Local/Remote Peering  HOL: OCI VCN 이번 Hands-on Lab에서는 OCI Console에서 제공하는 VCN(Virtual Cloud Network) 생성 간편 모드 기능을 사용하여 다음과 같은 VCN을 만들겠습니다.\n이번 Hands-on Lab은 다음과 같은 순서로 진행합니다.\n HOL: OCI VCN  VCN 개요 선행 Hands-on Lab Hands-on Lab 실습 환경 OCI VCN 프로비저닝: 간편모드   \n VCN 개요 VCN (Virtual Cloud Network)은 컴퓨팅 인스턴스가 실행되는 서브넷, 라우팅 테이블 및 게이트웨이를 포함는 기존 네트워크의 가상 버전입니다. OCI User는 VCN을 사용하여 네트워크 토폴로지를 클라우드애 구성할 수 있습니다. VCN을 만들 때, 다음과 작업이 진행됩니다.\n VCN에 할당할 Private IP 범위 설정: CIDR CIDR로 Subnet 파티션 분리 Internet Gateway 구성  선택적 구성 Public IP를 갖는 Compute Instance의 인터넷 접근 지원이 필요할 경우에 적용  NAT Gateway 구성  선택적 구성 Private IP만을 갖는 Compute Instance의 인터넷 접근 지원  Route Table 구성 및 Route Rule 적용 Security List 구성  Ingress 접근과 Egress 접근을 위한 관련 포트 허용 규칙   선행 Hands-on Lab 이번 Hands-on Lab을 진행하기 위해서는, 다음과 같은 Hands-on Lab이 선행되어야 합니다.\n OCI Free Tier 등록    OCI 사용자\u0026amp;보안 설정     Hands-on Lab 실습 환경 이 Hands-on Lab은 OCI 일반 사용자인 demo.admin 사용자로 OCI IAM 로그인하여 진행합니다.이번 Hands-on Lab에서 사용할 OCI 사용자와 컴파트먼트는 다음과 같습니다.\n   OCI User 작업 Compartment     demo.admin root/sandbox/hol-prod    OCI VCN 프로비저닝: 간편모드 OCI Console에 demo.admin 사용자로 OCI IAM 로그인합니다. 그리고 VCN을 생성하기 위해서 다음 메뉴 패스로 이동합니다.\n (OCI 콘솔 왼쪽 위 햄버그 버튼)  Networking  Virutla Cloud Network VCN 관리 페이지에서 Networking Quickstart 버튼을 클릭합니다. Networking Quickstart 버튼을 클릭하면 간편 모드로 VCN을 만드는 UI가 나타납니다.\n간편 모드로 2가지 형태의 VCN을 만들 수 있습니다. 간편 모드가 지원하는 2개 형태는 다음과 같은 특징을 갖습니다.\n   VCN 유형 특징     VCN with Internet Connectivity - 2개 서브넷 구성(public subnet, private subnet)- 주요 구성: Internet Gateway, NAT Gateway, Service Gateway   VCN with Internet Connectivity and Site-to-Site VPN Connect - VCN with Internet Connectivity에 VPN 기본 설정 구성    \u0026ldquo;VCN with Internet Connectivity\u0026ldquo;을 선택하고 Start Workflow 버튼을 클릭합니다.\nVCN 생성 폼에 다음고 같은 정보를 입력합니다.\n   입력 항목 설정 값     VCN Name demo-vcn   Compartment root/sandbox/hol-prod   VCN CIDR Block 10.0.0.0/16   Public Subnet CIDR Block 10.0.0.0/24   Private Subnet CIDR Block 10.0.1.0/24   Use DNS HOSTINGNAMES In the VCN 체크    위 설정을 입력하고 Next 버튼을 클릭합니다.\n생성될 VCN 구성 컴포넌트를 확인하고 Create 버튼을 클릭합니다.\n모든 컴포넌트가 초록색으로 표시되면 VCN 생성이 완료된 상태입니다. View Virtual Cloud Network 버튼을 클릭하여 VCN 상세 페이지로 이동합니다.\nVCN 상세 페이지에서 다음과 같이 VCN 기본 정보와 Subnet 구성 상태를 확인할 수 있습니다. VCN 상세 페이지의 오른쪽 메뉴를 이용하여 VCN을 구성하는 컴포넌트를 확인할 수 있습니다. VCN 상세 페이지의 왼쪽 상단의 경로 링크 중에서 View Virtual Cloud Networks 링크를 클릭하면 VCN 목록을 제공하는 VCN 관리 페이지로 이동합니다.\nVCN 관리 페이지에 다음과 같이 결과가 출력됩니다.\n"
},
{
	"uri": "http://cloud-docs.taewan.me/010.oci_intro/hands-on-101/010.console/",
	"title": "OCI Console",
	"tags": [],
	"description": "OCI Console 사용법을 다루는 핸드온입니다.",
	"content": " OCI Console은 Oracle Cloud의 공식 웹 기반 관리 툴입니다. 이번 절은 OCI Console에 로그인하고 사용하는 Hands-on Lab으로 구성됩니다.\n사전 준비 이번 절의 Hands-on Lab은 Oracle Cloud Free Tier 계정이 생성된 상황을 전제로 합니다. 아직 Oracle Cloud 계정이 없는 상태라면, 다음 문서를 참조하여 Oracle Cloud 계정을 만드시기 바랍니다.\n OCI Free Tier 등록     계정 등록 정보 Oracle Cloud 계정을 다음과 같은 정보로 만들었다는 가정으로 진행하겠습니다.\n   항목 설정값     Account Name ocidemo001   E-mail taewanme@gmail.com   Password Welcome123456!   Home Region Seoul    OCI Console 핸즈-온 구성 OCI Console 핸드온은 다음과 같이 순서로 진행됩니다.\n OCI Console 로그인     OCI Console 사용법    \n "
},
{
	"uri": "http://cloud-docs.taewan.me/010.oci_intro/hands-on-101/010.console/010.oci_console_login/",
	"title": "OCI Console 로그인",
	"tags": [],
	"description": "OCI Console 로그인 핸즈온입니다.",
	"content": " Oracle Cloud에서 사용자 ID는 Oracle IDCS와 OCI IAM으로 관리됩니다. Oracle IDCS와 OCI IAM의 관리 방식에 대하여 궁금하시다면 다음 문서를 참조하시기 바랍니다.\n OCI 사용자 ID 관리 서비스     이번 Hands-on Lab에서는 Oracle 클라우드 계정을 등록한 다음에 OCI 관리자 ID로 Oracle Console에 로그인하는 방법을 소개합니다. 이번 Hands-on Lab에서 다음과 같은 정보로 Oracle Cloud 계정을 만들었다고 가정합니다.\n   항목 설정값 설명     Account Name ocidemo001 Oracle Cloud 계정명   E-mail taewamne@gmail.com Oracle Cloud 계정의 관리자 ID   Password Welcome123456! Oracle Cloud 계정의 관리자 ID 로그인 패스워드   Home Region Seoul Oracle Cloud 계정의 기본 데이터 센터    위 설정값은 여러분의 Oracle Cloud 계정 정보로 대체하고 진행하시기 바랍니다.\nOracle Cloud 로그인 OCI Console 로그인 핸즈온 랩은 다음과 같은 목차로 진행합니다.\n Oracle Cloud 로그인  오라클 홈페이지에서 OCI Console 로그인  OCI Console 로그인: Oracle IDCS 옵션 선택 OCI Console 로그인: OCI IAM 옵션 선택  OCI 홈 리전 로그인 페이지   \n 오라클 홈페이지에서 OCI Console 로그인 Oracle 홈페이지(https://oracle.comm   )에서 Oracle Cloud에 로그인할 수 있습니다. 오라클 홈페이지에서 Oracle Cloud에 로그인할 때 Oracle IDCS 로그인 방식을 사용합니다. 오라클 홈페이지에서 다음과 같은 메뉴 패스로 오라클 클라우드 로그인 페이지로 이동합니다.\nView Accounts  Sign in to Cloud Cloud Account Name에 \u001dOralce Cloud 계정인 ocidemo001을 입력합니다. 그리고 Next 버튼을 클릭합니다.\n사용자 이름과 비밀번호에 각각 Oracle Cloud 계정의 관리자 ID인 teawanme@gmail.com과 관리자 ID의 로그인 패스워드인 Welcome123456!를 입력하고 로그인합니다.\n관리자 ID 인증이 정상적으로 이뤄지면 OCI Classic 콘솔 페이지가 출력됩니다.\nOCI Classic 콘솔 페이지에서 다음과 같은 메뉴 패스로 OCI Console 로그인 페이지로 이동합니다.\n (콘솔 왼쪽 위 햄버그 버튼)  Infrastructure OCI Console 로그인: Oracle IDCS 옵션 선택 OCI Console 로그인 페이지에서는 Oracle IDCS와 OCI IAM 두 가지 옵션을 모두 제공합니다. Oracle IDCS 옵션을 선택할 경우 기존 Oracle Cloud의 SSO(싱글사인온)가 적용되고 OCI IAM을 선택할 경우 ID/패스워드를 다시 입력하고 로그인합니다.\n우선 Oracle IDCS 인증 방식을 선택합니다.\nOracle IDCS 인증을 선택할 경우에 Oracle IDCS는 현재 사용자가 이미 Oracle Cloud 관리자 ID로 로그인 상태라는 것을 SSO(싱글사인온)로 확인합니다. 이미 인증을 마친 상태기 때문에 추가 인증 정보를 요구하지 않고 바로 OCI Console로 이동합니다.\n현재 OCI Console에 접속한 Oracle Cloud 계정의 관리자는 Oracle IDCS로 로그인한 상태입니다. 따라서 OCI Console의 메인 메뉴에는 Oracle Classic 기반 PaaS 서비스가 출력됩니다. 현재 이용 가능한 OCI Classic PaaS 서비스는 다음 메뉴 패스로 확인할 수 있습니다.\n (콘솔 왼쪽 위 햄버그 버튼)  플랫폼 서비스 OCI Console을 다음 메뉴 패스로 로그아웃합니다.\n사용자 프로파일 아이콘  사인 아웃 사인 아웃 버튼을 클릭하면 다음과 같이 OCI Console 로그인 페이지로 이동합니다.\nOCI Console 로그인: OCI IAM 옵션 선택 OCI Console 로그인 페이지에서 OCI IAM 인증을 위한 ID/패스워드를 새로 입력하고 로그인합니다.\nOCI IAM 로그인 방식의 인증 범위는 OCI에 국한됩니다. 따라서 OCI Console 메뉴에서 OCI Classic 기반 PaaS 서비스 목록은 출력하지 않습니다.\nOCI Console을 다음 메뉴 패스로 로그아웃합니다.\n사용자 프로파일 아이콘  사인 아웃 사인 아웃 버튼을 클릭하면 다음과 같이 OCI Console 로그인 페이지로 이동합니다.\nOCI 홈 리전 로그인 페이지 앞에서 OCI Console에 접근하기 위해서 다음과 같은 경로를 거쳤습니다.\noracle.com 홈페이지  oracle cloud 로그인 페이지  OCI Classic Console  OCI Console 로그인 페이지  OCI Console 이 방식은 약간 번거롭게 느껴집니다. oracle.com 홈페이지를 거치지 않고 직접 OCI Console 로그인 페이지에 접근할 수 있습니다. OCI Console 로그인 페이지는 Oracle Clod 계정(Tenente)이 사용하는 Home Region에 따라서 달라집니다. OCI Console 로그인 페이지의 URL 패턴은 다음과 같습니다.\nhttps://console.\u0026lt;OCI_HOME_REGION_ID\u0026gt;.oraclecloud.com/ https://console.\u0026lt;OCI_HOME_REGION_ID\u0026gt;.oraclecloud.com/?tenant={Tenant_Name}  OCI_HOME_REGION_ID는 다음 페이지에서 확인할 수 있습니다.\n OCI 리전 정보     아래 [접기/펼치기]를 클릭하면 2020년 3월까지 오픈한 리전 로그인 페이지 링크를 확인할 수 있습니다.\n  [접기/펼치기] OCI 리전 로그인 페이지 목록    Amsterdam: https://console.eu-amsterdam-1.oraclecloud.com  \n Ashburn: https://console.us-ashburn-1.oraclecloud.com  \n Sao Paulo: https://console.sa-saopaulo-1.oraclecloud.com  \n Frankfurt: https://console.eu-frankfurt-1.oraclecloud.com  \n Jeddah: https://console.me-jeddah-1.oraclecloud.com  \n London: https://console.uk-london-1.oraclecloud.com  \n Melbourne: https://console.ap-melbourne-1.oraclecloud.com  \n Montreal: https://console.ca-montreal-1.oraclecloud.com  \n Mumbai: https://console.ap-mumbai-1.oraclecloud.com  \n Osaka: https://console.ap-osaka-1.oraclecloud.com  \n Phoenix: https://console.us-phoenix-1.oraclecloud.com  \n Tokyo: https://console.ap-tokyo-1.oraclecloud.com  \n Toronto: https://console.ca-toronto-1.oraclecloud.com  \n Seoul: https://console.ap-seoul-1.oraclecloud.com  \n Sydney: https://console.ap-sydney-1.oraclecloud.com  \n Zurich: https://console.eu-zurich-1.oraclecloud.com  \n    현재 Handson-Lab에서 사용하는 Oracle Cloud 계정 이름은 ocidemo001이고 서울 리전을 Home Region으로 사용합니다. OCI 서울리전 ID는 ap_seoul_1입니다. 따라서 OCI Console 로그인 페이지는 다음과 같습니다.\nhttps://console.ap-seoul-1.oraclecloud.com/?tenant=ocidemo001  위 URL을 실행하면 다음 페이지가 출력됩니다.\n현재 Hands-on Lab에서 사용하는 Oracle Cloud 계정이름은 ocidemo001입니다. OCI Console 로그인 페이지에서 Oracle IDCS 로그인과 OCI IAM 로그인이 모두 가능합니다.\nOCI Console 로그인 페이지에서 Oracle IDCS 로그인을 선택했고, 현재 SSO 로그인한 상태라면 바로 OCI Console 페이지로 이동합니다. 반대로 Oracle IDCS가 SSO 로그인 상태가 아니라면 ID/Passowd를 입력하는 페이지로 이동합니다.\nOCI Console 로그인 페이지에서 OCI IAM 로그인 방식을 사용할 경우, 해당 페이지에서 OCI 사용자 ID/Password해야 합니다. 인증이 성공하면 OCI Console 페이지로 이동합니다.\nOCI Console 로그인 페이지에서 Oracle IDCS 혹은 OCI IAM으로 인증을 완료하면 다음과 같은 OCI Console 페이지가 출력됩니다.\n"
},
{
	"uri": "http://cloud-docs.taewan.me/010.oci_intro/basic_concept/",
	"title": "OCI 입문: 기본 개념",
	"tags": [],
	"description": "OCI 기본 개념을 정리합니다.",
	"content": "OCI 입문: 기본 개념은 다음과 같은 내용으로 구성됩니다.\n Oracle Cloud Infrasturcture   OCI 기초 용어 정리   OCI Classic과 OCI Gen2   OCI 리전 정보   OCI 리전별 서비스 현황    OCI Free Tier   OCI 사용자 ID 관리 서비스   OCI Tenancy 생성   클라우드 서비스 용어 비교    "
},
{
	"uri": "http://cloud-docs.taewan.me/010.oci_intro/",
	"title": "OCI(Oracle Cloud)-기초 입문",
	"tags": [],
	"description": "OCI를 새롭게 접하시는 신규 사용자를 위한 내용을 정리합니다.",
	"content": "OCI 기초 입문에서는 OCI 신규 입문하시는 분들을 위해서 OCI 기초 정보와 OCI Core 서비스에 대한 핸드온으로 구성됩니다. OCI의 Core 서비스에 익숙해지는 것을 목표로합니다. \u0026ldquo;OCI(Oracle Cloud)-기초 입문\u0026ldquo;은 다음과 같은 내용으로 구성됩니다.\n OCI 입문: 기본 개념   OCI 입문: Hands-on 101 클래스    "
},
{
	"uri": "http://cloud-docs.taewan.me/010.oci_intro/basic_concept/oci_introduction/",
	"title": "Oracle Cloud Infrasturcture",
	"tags": [],
	"description": "OCI(Oracle Cloud Infrastructure)를 소개합니다.",
	"content": " OCI(Oracle Cloud Infrastructure)는 Oracle 제공하는 클라우드 서비스입니다. 오라클은 2016년 하반기에 OCI 서비스를 시작했습니다. 이 문서에서는 OCI 서비스에 대한 주요 특징을 소개합니다.\n이번 문서는 다음과 같은 목차로 구성됩니다.\n 오라클 클라우드  OCI 고가용성 인프라 OCI 안전성 설계 고성능 클라우드 자원  참고 문서    오라클 클라우드 오라클 클라우드는 탄력적이고 유연한 자원 관리의 특징을 갖는 퍼블릭 클라우드와 온-프레미스 인프라의 정밀한 제어, 보안 및 시스템 예측 가능성을 결합한 클라우드 서비스를 지향합니다. 이런 디자인 원칙을 적용한 Gen2 데이터센터를 새로 설계하고 Gen2 디자인에 근거하여 새로운 데이터 센터를 만들어 왔습니다. 오라클 2세대 클라우드 서비스를 OCI(Oracle Cloud Infrastructure)입니다. 2020년 현재 Oracle Cloud의 공식 브랜드 명은 OCI(Oracle Cloud Infrastructure)입니다.\nOCI 서비스는 2016년 하반기에 시작했습니다. OCI에서 특정 지역에 구성된 단위 데이터 센터를 리전(Region)이라고 합니다. 2020년 3월 기준 OCI는 전 세계에 16개 리전을 서비스하고 있습니다. 2020년 말까지 총 36개 리전까지 확대할 예정입니다.\nOCI 고가용성 인프라 OCI는 리전(Region)과 AD(Availability Domains)로 운영됩니다. 리전은 데이터 센터가 운영되는 지리적인 영역이고 AD는 리전을 구성하고 실제 OCI 서비스가 운영되는 데이터 센터입니다. 각 OCI 리전은 1개에서 최대 3개 AD로 구성됩니다. 리전은 오라클 클라우드가 서비스되는 물리적 데이터 센터인 AD를 묶는 논리적 단위입니다. 따라서 서비스 지역의 물리적 AD를 추상화하는 서비스 거점이라는 의미를 갖습니다. 리전은 완전히 독립된 OCI 최상위 단위입니다. 각 리전은 네트워크로 연결될 뿐 모든 서비스와 자원은 완전히 격리됩니다.\n리전을 구성하는 각 AD는 어떤 물리 자원도 공유하지 않는 물리적으로 완전히 독립된 데이터 센터입니다. 따라서 특정 AD 장애가 다른 AD로 파급되지 않습니다. AD는 Region 고가용성을 위한 구성입니다.\n각 AD(Availability Domain)는 내부적으로 Fault Domain 이용하여 VM(Virtual Machine) 및 BM(Bare Metal) 컴퓨트 인스턴스의 가용성을 관리합니다. Fault Domain은 AD 내부 하드웨어와 인프라스트럭처 그룹입니다. 각 AD은 3개 Fault Domain을 갖습니다. Region를 구성하는 AD가 물리 자원을 공유하지 않듯이, AD 내부에 3개 Fault Domain은 물리 자원을 공유하지 않습니다. 한 Fault Domain에서 발생한 장애 및 유지보수 관련 서비스 중단은 다른 Fault Domain에 영향을 미치지 않습니다. 새 Compute 인스턴스를 생성할 때, 사용자는 Fault Domain을 선택할 수 있습니다. 사용자가 선택하지 않으면, 시스템이 자동으로 지정합니다. 현재 인스턴스에서 Fault Domain을 변경할 수 없습니다. Fault Domain 설정에 주의해야 합니다.\nOCI 자원을 생성할 때, 다음 그림과 같이 AD와 Fault Domain을 지정하여 만들 수 있습니다.\nOCI 안전성 설계 OCI 인프라스트럭처에는 \u0026ldquo;Off-box\u0026rdquo;/격리 네트워크 가상화가 적용되어 있습니다. 이 네트워크 및 IO 가상화 위에 서버 스택이 배치됩니다. 하이퍼바이저 오버헤드 및 주변 환경 간섭이 없는 클라우드 인프라를 사용할 수 있습니다. 다양한 서비스 자원(VM, 컨테이너, NoSQL, ExaData)이 OCI 배포될 때, Off-Box 네트워크 가상화를 통해서 상호간의 간섭을 방지하고 보안 관점에서 안정한 인프라를 활용할 수 있습니다.\n고성능 클라우드 자원 OCI는 최신 CPU, GPU, 오프 박스 네트워킹 및 NVMe SSD를 기반으로 서비스를 제공합니다. Bare-Metal 인스턴스는 초당 수백만 건의 읽기 및 쓰기 트랜잭션을 수행 할 수있는 51.2TB의 NVMe SSD를 제공합니다.\nOCI Networking 서비스는 Over-Subscribe 되지 않습니다. 따라서 OCI 사용자는 예측 가능하고 high-performance/low-latency 클라우드 인프라를 사용할 수 있습니다.\nOCI에서 CPU, GPU, 수백만 IPOS 스토리지를 사용할 수 있습니다.\n참고 문서  Oracle Cloud Infrastructure Platform Overview     "
},
{
	"uri": "http://cloud-docs.taewan.me/980.oci-related-sites/oci-related-service/oci_cost_estimator/",
	"title": "OCI 비용 시뮬레이터",
	"tags": [],
	"description": "",
	"content": "오라클 홈페이지에서는 Oracle Cloud Infrastructure(OCI) 서비스 비용 계산 툴을 제공합니다. 이 서비스를 이용하여 OCI 서비스 사용 금액을 계산해 볼수 있습니다. OCI 서비스 별로 주요 과금 기준과 입력 항목을 제공하기 때문에 서비스 별로 고려해야 하는 항목을 간편하고 고려할 수 있습니다.\n OCI 비용 계산기: https://www.oracle.com/cloud/cost-estimator.html     관련 OCI 서비스를 선택하면, 해당 서비스의 사용 금액을 결정짓는 주요 인자가 출력됩니다. 이 주요 인자 조정을 통해서 실제 서비스 이용 금액을 예측할 수 있습니다.\n"
},
{
	"uri": "http://cloud-docs.taewan.me/980.oci-related-sites/oci-related-service/",
	"title": "OCI 관련 유용한 서비스",
	"tags": [],
	"description": "OCI 관련 유용한 서비스를 소개합니다.",
	"content": "OCI 관련 유용한 정보를 제공하는 사이트와 서비스를 정리합니다. 이번 절은 다음과 같은 문서로 구성됩니다.\n OCI 비용 시뮬레이터     OCI 상태 알림 서비스   \n CloudHarmondy: 네트웍 테스트   \n OCI 비쥬얼 다이어그램    \n "
},
{
	"uri": "http://cloud-docs.taewan.me/700.oci_tools/010.cloud_shell/cloud_shell_features/",
	"title": "Cloud Shell 둘러보기",
	"tags": [],
	"description": "OCI Cloud Shell을 소개합니다.",
	"content": " OCI 주요 특징 OCI Cloud Shell을 주요 특징을 살펴보겠습니다. 이번 문서는 다음과 같은 목차로 진행합니다.\n OCI 주요 특징  1. OCI Cloud Shell 시작 2. Cloud Shell 설치 소프트웨어 3. Cloud Shell 리전 활성화 4. OCI CLI 설정 5. Cloud Shell 스토리지 구성 6. sudo 사용 제한 7. help 명령 8. 외부 공개 IP 서버 접근 9. 리전 변경에도 스토리지 유지 10. tmux 지원 Cloud Shell 데모  요약 참고자료  \n 1. OCI Cloud Shell 시작 OCI Console에서 Cloud Shell 아이콘을 클릭하면 현재 사용 중인 Region이 활성화된 Cloud Shell이 브라우저에 열립니다. Cloud Shell의 입력 프롬프트를 보면 현재 리전이 활성화된 것을 확인할 수 있습니다.\nCloud Shell의 오른쪽 위 메뉴 창에는 창 크기를 조절하는 아이콘과 재접속, 종료 아이콘이 있습니다. 20분간 Cloud Shell을 사용하지 않으면 세션은 종료됩니다.\nCloud Shell 세션이 종료되면 해당 세션 설정은 초기화됩니다. 아래 이미지는 test 변수를 터미널에서 설정한 후 재접속하여 이전 변수를 확인하는 테스트입니다. 이전 세션 설정은 초기화됨을 알 수 있습니다.\n2. Cloud Shell 설치 소프트웨어 OCI Cloud Shell에는 다음과 같은 소프트웨어가 기본 설치되어 있습니다. 소프트웨어 설치 버전은 2020년 3월 6일 기준입니다. 시점에 따라서 달라질 수 있습니다.\n   Software 버전     ansible ansible 2.8.4   Docker Docker version 19.03.1-ol   helm v3.0.1   Git git version 1.8.3.1   gradle Gradle 6.0   Java OpenJDK Runtime Environ   jq jq-1.5   kubectl Major:\u0026ldquo;1\u0026rdquo;, Minor:\u0026ldquo;14\u0026rdquo;   maven Apache Maven 3.5.0   Python 2 Python 2.7.5   Python 3 Python 3.6.8   SQL*Plus Release 19.0.0.0.0   terraform v0.12.21    3. Cloud Shell 리전 활성화 Cloud Shell은 터미널이 열리는 시점에 OCI Console이 사용하는 Region을 활성화합니다. 다음 이미지는 OCI Console에서 Phoenix, Seoul 및 Ashburn Region을 사용하도록 차례로 변경하면서, 각 리전에서 Cloud Shell을 접속한 이미지입니다. 현재 OCI Console이 사용하는 Region은 OCI Cloud Shell이 시작될 때 환경 변수 OCI_CLI_PROFILE에 설정됩니다.\n4. OCI CLI 설정 OCI Cloud Shell에는 여러 소프트웨어가 설치돼 있습니다. 특히 OCI CLI(Oracle Cloud 명령어 관리 툴)는 완전한 사용자 설정이 구성되어 있습니다. 이 설정 지원은 사용자 편의성을 크게 높이는 기능입니다. 다음과 같은 OCI CLI 관련 환경 변수가 설정되어 있습니다.\ntaewan_kim@cloudshell:~ (us-ashburn-1)$ env | grep OCI_CLI OCI_CLI_AUTH=instance_obo_user OCI_CLI_CONFIG_FILE=/etc/oci/config OCI_CLI_PROFILE=us-ashburn-1 taewan_kim@cloudshell:~ (us-ashburn-1)$  OCI CLI 설정 파일인 /etc/oci/config파일에는 모든 리전에 대한 설정이 구성되어 있습니다.\ntaewan_kim@cloudshell:~ (us-ashburn-1)$ cat /etc/oci/config [eu-amsterdam-1] tenancy=ocid1.tenancy.oc1..aaaaaaaa6ma7aaaasif76uzqidv22cajs3fpesgpqmmsgxihlbcemkklrsqa region=eu-amsterdam-1 delegation_token_file=/etc/oci/delegation_token [ap-mumbai-1] tenancy=ocid1.tenancy.oc1..aaaaaaaa6ma7aaaasif76uzqidv22cajs3fpesgpqmmsgxihlbcemkklrsqa region=ap-mumbai-1 delegation_token_file=/etc/oci/delegation_token [eu-frankfurt-1] tenancy=ocid1.tenancy.oc1..aaaaaaaa6ma7aaaasif76uzqidv22cajs3fpesgpqmmsgxihlbcemkklrsqa region=eu-frankfurt-1 delegation_token_file=/etc/oci/delegation_token [sa-saopaulo-1] tenancy=ocid1.tenancy.oc1..aaaaaaaa6ma7aaaasif76uzqidv22cajs3fpesgpqmmsgxihlbcemkklrsqa region=sa-saopaulo-1 delegation_token_file=/etc/oci/delegation_token [ap-hyderabad-1] tenancy=ocid1.tenancy.oc1..aaaaaaaa6ma7aaaasif76uzqidv22cajs3fpesgpqmmsgxihlbcemkklrsqa region=ap-hyderabad-1 delegation_token_file=/etc/oci/delegation_token [us-ashburn-1] tenancy=ocid1.tenancy.oc1..aaaaaaaa6ma7aaaasif76uzqidv22cajs3fpesgpqmmsgxihlbcemkklrsqa region=us-ashburn-1 delegation_token_file=/etc/oci/delegation_token [ap-seoul-1] tenancy=ocid1.tenancy.oc1..aaaaaaaa6ma7aaaasif76uzqidv22cajs3fpesgpqmmsgxihlbcemkklrsqa region=ap-seoul-1 delegation_token_file=/etc/oci/delegation_token [me-jeddah-1] tenancy=ocid1.tenancy.oc1..aaaaaaaa6ma7aaaasif76uzqidv22cajs3fpesgpqmmsgxihlbcemkklrsqa region=me-jeddah-1 delegation_token_file=/etc/oci/delegation_token [ap-osaka-1] tenancy=ocid1.tenancy.oc1..aaaaaaaa6ma7aaaasif76uzqidv22cajs3fpesgpqmmsgxihlbcemkklrsqa region=ap-osaka-1 delegation_token_file=/etc/oci/delegation_token [uk-london-1] tenancy=ocid1.tenancy.oc1..aaaaaaaa6ma7aaaasif76uzqidv22cajs3fpesgpqmmsgxihlbcemkklrsqa region=uk-london-1 delegation_token_file=/etc/oci/delegation_token [ap-melbourne-1] tenancy=ocid1.tenancy.oc1..aaaaaaaa6ma7aaaasif76uzqidv22cajs3fpesgpqmmsgxihlbcemkklrsqa region=ap-melbourne-1 delegation_token_file=/etc/oci/delegation_token [ap-tokyo-1] tenancy=ocid1.tenancy.oc1..aaaaaaaa6ma7aaaasif76uzqidv22cajs3fpesgpqmmsgxihlbcemkklrsqa region=ap-tokyo-1 delegation_token_file=/etc/oci/delegation_token [us-phoenix-1] tenancy=ocid1.tenancy.oc1..aaaaaaaa6ma7aaaasif76uzqidv22cajs3fpesgpqmmsgxihlbcemkklrsqa region=us-phoenix-1 delegation_token_file=/etc/oci/delegation_token [ap-sydney-1] tenancy=ocid1.tenancy.oc1..aaaaaaaa6ma7aaaasif76uzqidv22cajs3fpesgpqmmsgxihlbcemkklrsqa region=ap-sydney-1 delegation_token_file=/etc/oci/delegation_token [ap-chuncheon-1] tenancy=ocid1.tenancy.oc1..aaaaaaaa6ma7aaaasif76uzqidv22cajs3fpesgpqmmsgxihlbcemkklrsqa region=ap-chuncheon-1 delegation_token_file=/etc/oci/delegation_token [ca-montreal-1] tenancy=ocid1.tenancy.oc1..aaaaaaaa6ma7aaaasif76uzqidv22cajs3fpesgpqmmsgxihlbcemkklrsqa region=ca-montreal-1 delegation_token_file=/etc/oci/delegation_token [ca-toronto-1] tenancy=ocid1.tenancy.oc1..aaaaaaaa6ma7aaaasif76uzqidv22cajs3fpesgpqmmsgxihlbcemkklrsqa region=ca-toronto-1 delegation_token_file=/etc/oci/delegation_token [eu-zurich-1] tenancy=ocid1.tenancy.oc1..aaaaaaaa6ma7aaaasif76uzqidv22cajs3fpesgpqmmsgxihlbcemkklrsqa region=eu-zurich-1 delegation_token_file=/etc/oci/delegation_token taewan_kim@cloudshell:~ (us-ashburn-1)$  OCI CLI가 실행될 때, /etc/oci/config에 설정된 프로파일 중에서 환경 변수 OCI_CLI_PROFILE에 설정된 값의 프로파일을 기본 로딩합니다. 따라서 별도의 프로파일을 지정하는 귀차니즘을 피할 수 있습니다.\n5. Cloud Shell 스토리지 구성 Cloud Shell이 접속하는 리눅스 VM에는 OCI 사용자별로 5GB 스토리지가 할당됩니다. 이 스토리지는 $HOME에 마운트됩니다.\n6. sudo 사용 제한 Cloud Shell에서는 sudo 명령을 사용할 수 없습니다.\n7. help 명령 Cloud Shell을 소개하는 help 명령을 제공합니다. 이 메시지에서 주요 관련 문서를 확인할 수 있습니다.\ntaewan_kim@cloudshell:~ (us-ashburn-1)$ help Welcome to Oracle Cloud Infrastructure Cloud Shell. Your Cloud Shell machine comes with the Oracle Cloud Infrastructure Command Line Interface (CLI) tools pre-installed and authenticated for your user, as well as other useful tools, utilities, and language runtimes. Oracle Cloud Shell comes with 5GB of persistent storage for your home directory, so any modifications you make to your home directory while using Cloud Shell will be saved between sessions. For online help with the OCI CLI, type `oci --help`. For more detailed help, see https://docs.cloud.oracle.com/iaas/tools/oci-cli/latest/oci_cli_docs/ for a detailed command reference. For Windows users, use Ctrl-C or Ctrl-Insert to copy, and Shift-Insert to paste. For Mac OS users, use Cmd-C to copy and Cmd-V to paste. Your use of Oracle Cloud Infrastructure Cloud Shell is limited to a set number of hours per month. If you hit the hourly limit for your tenancy, you will receive a notification in Cloud Shell. You can view your tenancy limit and current usage on the Oracle Cloud Limits page, where you can request an increase in you monthly Cloud Shell hours limit. For more information about Cloud Shell, refer to the documentation: https://docs.cloud.oracle.com//iaas/Content/API/Concepts/cloudshellintro.htm To provide feedback about Cloud Shell, please open a new issue in the OCI-CLI GitHub project: https://github.com/oracle/oci-cli/issues taewan_kim@cloudshell:~ (us-ashburn-1)$  8. 외부 공개 IP 서버 접근 OCI CLI에서 공개 IP를 갖는 서버에 ssh 접근을 할 수 있습니다.\n9. 리전 변경에도 스토리지 유지 OCI 콘솔에서 리전 변경하더라도, Clodu Shell의 스토리지는 유지됩니다.\n10. tmux 지원 tmux(terminal multiplexer)가 설치되어 있습니다. tmux를 사용하면 20분 세션 비활성이 적용되지 않습니다.\nCloud Shell 데모 다음과 같은 작업을 Cloud Shell을 사용할 수 있습니다.\n이 부분은 다음에 링크된 Blog에서 발취했습니다. ([Oracle Blog]Announcing Oracle Cloud Shell  \n)\n  OCI Console에서 Container Cluster 이동 (Developer Services \u0026gt; Container Clusters). 클러스터 선택, Access Kuberconfig 선택 oci ce cluster 명령 복사 cloud shell 오픈 Cloud Shell 명령 붙여넣기 kubectl로 클러스터 접근 확인  $ kubectl get nodes   위 작업 데모는 다음 이미제에서 확인할 수 있습니다.\n요약  Cloud Shell을 사용하면 브라우저 기반의 터미널을 사용할 수 있습니다. OCI CLI 및 Terraform 등이 설치되어 있고 즉시 사용할 수 있습니다. 인터넷에 접근 할 수 있습니다. 공개 IP를 가진 인스턴스에 ssh 연결 수 있습니다.  물론 비밀키를 갖고 있다는 전제가 있죠.  사용자당 5GB의 저장소를 사용할 수 있습니다. Cloud Shell은 VM이며 홈 지역에서 시작됩니다. 인스턴스는 root 권한 없이 획득할 수 없습니다. 20분 이상 사용하지 않으면 세션은 종료됩니다. tmux를 사용하면 이 제한을 극복할 수 있습니다. 복사 및 붙여넣기가 기능이지만, 이것은 브라우저의 영향을 받습니다.  지원 브라우져: Chrome, FireFox   참고자료  [OCI Official Docs]Cloud Shell     "
},
{
	"uri": "http://cloud-docs.taewan.me/010.oci_intro/hands-on-101/030.oci_infra_basic/040.custom_image/020.provisioning_from_custom_image-copy/",
	"title": "Custom Image 임포트/익스포트",
	"tags": [],
	"description": "OCI Custom Image를 Import하고 Export하는 방법을 소개합니다.",
	"content": " 프로비저닝된 Compute 인스턴스 상태를 템플릿으로 저장하고, 동일한 상태의 Compute 인스턴스를 여러 개 만들기 우 Boot Volume으로부터 재사용 가능한 사용자 정의 Image를 만들 수 있습니다. 이렇게 만든 사용자 정이 Image를 OCI Custom Image라고 합니다.\nHOL: Custom Image 이번 문서는 Custom Image로부터 Compute 인스턴스를 만드는 과정을 소개합니다. 이번 Hands-on Lab은 다음과 같은 순서로 진행합니다.\n HOL: Custom Image  선행 Hands-on Lab Hands-on Lab 실습 환경 Hands-on Lab 시나리오 Custom Image로 VM 생성 Hands-on Lab 요약   \n 선행 Hands-on Lab 이번 Hands-on Lab을 진행하기 위해서는, 다음과 같은 Hands-on Lab이 선행되어야 합니다.\n OCI Free Tier 등록    OCI 사용자\u0026amp;보안 설정    VCN 생성(OCI Console:간편모드)    Compute Service(VM) 생성    Custom Image 생성     Hands-on Lab 실습 환경 이 Hands-on Lab은 OCI 일반 사용자인 demo.admin 사용자로 OCI IAM 로그인하여 진행합니다. 이번 Hands-on Lab에서 사용할 OCI 사용자와 컴파트먼트는 다음과 같습니다.\n|OCI User|Password|작업 Compartment| |\u0026mdash;-|\u0026mdash;-| |demo.admin|root/sandbox/hol-prod|\nHands-on Lab 시나리오 이번 Hands-on Lab은 앞에서 만든 demo-custom-image를 이용하여 Compute 인스턴스를 새로 만드는 절차를 다룹니다.\ndemo-custom-image는 Oracle Linux 7.7 이미지에 nginx를 설치하고 방화벽 오픈을 설정한 인스턴스를 Custom Image로 만든 것입니다.\ndemo-custom-image를 사용하면 별도 조치 없이 nginx와 방호벽 설정한 상태를 Compute 인스턴스로 만들 수 있습니다.\nCustom Image로 VM 생성 demo-custom-image Custom Image로 새로운 Compute 인스턴스를 만들기 위해서 다음과 같은 메뉴 패스로 Compute 인스턴스 관리 페이지로 이동합니다.\n (OCI 콘솔 왼쪽 위 햄버그 버튼)  Compute  Instances Compute 인스턴스 관리 페이지에서 Compartment를 root/sandbox/hol-prod로 설정하고, Create Instance 버튼을 클릭합니다.\nCompute 인스턴스 생성 폼에서 다음과 같이 입력하고 Change Image 버튼을 클릭합니다.\n   입력 항목 설정값     Name demo_linux_vm-custom-image    Custom Image 텝을 클릭하고 다음과 같이 설정하고 Select Image 버튼을 클릭합니다.\n   입력 항목 설정값     Custom Image Compartment root/sandbox/hol-prod   Custom Image Name demo-custom-image 체크    Custom Image를 선택하면, 다음과 같이 Compute 인스턴스 생성 폼에 demo-custom-image이 출력됩니다. 그리고 Show Shape, Network and Storage Options 링크를 클릭합니다.\nShow Shape, Network and Storage Options 링크를 클릭하면, AD 선택 항목과 Shape 선택항목이 나타납니다. Availability Domain에서 \u0026lsquo;AD1\u0026lsquo;을 선택하고 Change Shape 버튼을 클릭합니다.\nShape 선택 폼에서 다음과 같이 선택하고 Select Shape 버튼을 클릭합니다.\n   입력 항목 설정값     Instance Type Virtual Machine   Shape Type Standard   Shape Name VM.Standard2.2    Shape을 선택하면, 다음과 같이 Compute 인스턴스 생성 폼의 Shape으로 VM.Standard2.2(Virtual Machine)이 출력됩니다.\n네트워크 설정으로 다음과 같이 입력합니다.\n   입력 항목 설정값     Virtaul Cloud Network Compartment root/sandbox/hol-prod   Virtaul Cloud Network demo-vcn   Subnet Compartment root/sandbox/hol-prod   Subnet Public Subnet-demo-vcn(Regional)   Assign a public IP Address 체크    다음과 같이 cloud shell을 실행하고, cloud shell에 생성한 SSH 공개키를 다음 명령으로 조회합니다.\ncat ~/.ssh/id_rsa.pub  SSH 공개키를 복사(Cntl+C)한 다음에 다음과 같이 설정합니다.\n Paste SSH Keys 선택 SSH Keys에 공개키 붙여넣기(Cntl+V)  설정을 마치고 Create 버튼을 클릭합니다.\nCompute Instance 생성 폼 입력을 마치고 Create 버튼을 클릭하면, 화면은 Compute 인스턴스 상세 페이지로 이동합니다. 그리고 demo_linux_vm-custom-image 인스턴스 상세 페이지의 아이콘은 프로비저닝 중에 주황색으로 표시됩니다. 인스턴스 생성이 완료되면 인스턴스 상세 페이지 아이콘 색깔은 초록색이 됩니다.\ndemo_linux_vm-custom-image 인스턴스의 공개 IP가 132.145.81.241인 것을 확인할 수 있습니다.\ndemo_linux_vm-custom-image 인스턴스가 만들어지면, 브라우저로 132.145.81.241에 접근하면 nginx에 접근하는 것을 확인할 수 있습니다.\nHands-on Lab 요약 이번 Hands-on Lab에서는 demo-custom-image 이미지를 이용하여 새로운 인스턴스를 만들었습니다.\n새로 만든 Compute 인스턴스는 Cumstom Image를 만든 원본 Compute 인스턴스의 모든 설정이 적용되어 있습니다. 따라서 별도로 nginx를 설치하거나 방화벽에 80포트를 오픈할 필요 없이 바로 브라우저로 접근할 수 있습니다.\n"
},
{
	"uri": "http://cloud-docs.taewan.me/010.oci_intro/hands-on-101/030.oci_infra_basic/050.load_balancer/020.provisioning_from_custom_image-copy/",
	"title": "Custom Image 임포트/익스포트",
	"tags": [],
	"description": "OCI Custom Image를 Import하고 Export하는 방법을 소개합니다.",
	"content": " 프로비저닝된 Compute 인스턴스 상태를 템플릿으로 저장하고, 동일한 상태의 Compute 인스턴스를 여러 개 만들기 우 Boot Volume으로부터 재사용 가능한 사용자 정의 Image를 만들 수 있습니다. 이렇게 만든 사용자 정이 Image를 OCI Custom Image라고 합니다.\nHOL: Custom Image 이번 문서는 Custom Image로부터 Compute 인스턴스를 만드는 과정을 소개합니다. 이번 Hands-on Lab은 다음과 같은 순서로 진행합니다.\n HOL: Custom Image  선행 Hands-on Lab Hands-on Lab 실습 환경 Hands-on Lab 시나리오 Custom Image로 VM 생성 Hands-on Lab 요약   \n 선행 Hands-on Lab 이번 Hands-on Lab을 진행하기 위해서는, 다음과 같은 Hands-on Lab이 선행되어야 합니다.\n OCI Free Tier 등록    OCI 사용자\u0026amp;보안 설정    VCN 생성(OCI Console:간편모드)    Compute Service(VM) 생성    Custom Image 생성     Hands-on Lab 실습 환경 이 Hands-on Lab은 OCI 일반 사용자인 demo.admin 사용자로 OCI IAM 로그인하여 진행합니다. 이번 Hands-on Lab에서 사용할 OCI 사용자와 컴파트먼트는 다음과 같습니다.\n   OCI User Password 작업 Compartment     demo.admin Welcome123456! root/sandbox/demo-prod    Hands-on Lab 시나리오 이번 Hands-on Lab은 앞에서 만든 demo-custom-image를 이용하여 Compute 인스턴스를 새로 만드는 절차를 다룹니다.\ndemo-custom-image는 Oracle Linux 7.7 이미지에 nginx를 설치하고 방화벽 오픈을 설정한 인스턴스를 Custom Image로 만든 것입니다.\ndemo-custom-image를 사용하면 별도 조치 없이 nginx와 방호벽 설정한 상태를 Compute 인스턴스로 만들 수 있습니다.\nCustom Image로 VM 생성 demo-custom-image Custom Image로 새로운 Compute 인스턴스를 만들기 위해서 다음과 같은 메뉴 패스로 Compute 인스턴스 관리 페이지로 이동합니다.\n (OCI 콘솔 왼쪽 위 햄버그 버튼)  Compute  Instances Compute 인스턴스 관리 페이지에서 Compartment를 root/sandbox/hol-prod로 설정하고, Create Instance 버튼을 클릭합니다.\nCompute 인스턴스 생성 폼에서 다음과 같이 입력하고 Change Image 버튼을 클릭합니다.\n   입력 항목 설정값     Name demo_linux_vm-custom-image    Custom Image 텝을 클릭하고 다음과 같이 설정하고 Select Image 버튼을 클릭합니다.\n   입력 항목 설정값     Custom Image Compartment root/sandbox/hol-prod   Custom Image Name demo-custom-image 체크    Custom Image를 선택하면, 다음과 같이 Compute 인스턴스 생성 폼에 demo-custom-image이 출력됩니다. 그리고 Show Shape, Network and Storage Options 링크를 클릭합니다.\nShow Shape, Network and Storage Options 링크를 클릭하면, AD 선택 항목과 Shape 선택항목이 나타납니다. Availability Domain에서 \u0026lsquo;AD1\u0026lsquo;을 선택하고 Change Shape 버튼을 클릭합니다.\nShape 선택 폼에서 다음과 같이 선택하고 Select Shape 버튼을 클릭합니다.\n   입력 항목 설정값     Instance Type Virtual Machine   Shape Type Standard   Shape Name VM.Standard2.2    Shape을 선택하면, 다음과 같이 Compute 인스턴스 생성 폼의 Shape으로 VM.Standard2.2(Virtual Machine)이 출력됩니다.\n네트워크 설정으로 다음과 같이 입력합니다.\n   입력 항목 설정값     Virtaul Cloud Network Compartment root/sandbox/hol-prod   Virtaul Cloud Network demo-vcn   Subnet Compartment root/sandbox/hol-prod   Subnet Public Subnet-demo-vcn(Regional)   Assign a public IP Address 체크    다음과 같이 cloud shell을 실행하고, cloud shell에 생성한 SSH 공개키를 다음 명령으로 조회합니다.\ncat ~/.ssh/id_rsa.pub  SSH 공개키를 복사(Cntl+C)한 다음에 다음과 같이 설정합니다.\n Paste SSH Keys 선택 SSH Keys에 공개키 붙여넣기(Cntl+V)  설정을 마치고 Create 버튼을 클릭합니다.\nCompute Instance 생성 폼 입력을 마치고 Create 버튼을 클릭하면, 화면은 Compute 인스턴스 상세 페이지로 이동합니다. 그리고 demo_linux_vm-custom-image 인스턴스 상세 페이지의 아이콘은 프로비저닝 중에 주황색으로 표시됩니다. 인스턴스 생성이 완료되면 인스턴스 상세 페이지 아이콘 색깔은 초록색이 됩니다.\ndemo_linux_vm-custom-image 인스턴스의 공개 IP가 132.145.81.241인 것을 확인할 수 있습니다.\ndemo_linux_vm-custom-image 인스턴스가 만들어지면, 브라우저로 132.145.81.241에 접근하면 nginx에 접근하는 것을 확인할 수 있습니다.\nHands-on Lab 요약 이번 Hands-on Lab에서는 demo-custom-image 이미지를 이용하여 새로운 인스턴스를 만들었습니다.\n새로 만든 Compute 인스턴스는 Cumstom Image를 만든 원본 Compute 인스턴스의 모든 설정이 적용되어 있습니다. 따라서 별도로 nginx를 설치하거나 방화벽에 80포트를 오픈할 필요 없이 바로 브라우저로 접근할 수 있습니다.\n"
},
{
	"uri": "http://cloud-docs.taewan.me/010.oci_intro/hands-on-101/030.oci_infra_basic/050.load_balancer/030.custom_image_import_and_export/",
	"title": "Custom Image로 VM 생성",
	"tags": [],
	"description": "OCI Custom Image로 VM 이미지를 만드는 과정을 소개합니다.",
	"content": " 프로비저닝된 Compute 인스턴스 상태를 템플릿으로 저장하고, 동일한 상태의 Compute 인스턴스를 여러 개 만들기 우 Boot Volume으로부터 재사용 가능한 사용자 정의 Image를 만들 수 있습니다. 이렇게 만든 사용자 정이 Image를 OCI Custom Image라고 합니다.\nHOL: Custom Image 이번 문서는 Custom Image로부터 Compute 인스턴스를 만드는 과정을 소개합니다. 이번 Hands-on Lab은 다음과 같은 순서로 진행합니다.\n HOL: Custom Image  선행 Hands-on Lab Hands-on Lab 실습 환경 Hands-on Lab 시나리오 Custom Image로 VM 생성 Hands-on Lab 요약   \n 선행 Hands-on Lab 이번 Hands-on Lab을 진행하기 위해서는, 다음과 같은 Hands-on Lab이 선행되어야 합니다.\n OCI Free Tier 등록    OCI 사용자\u0026amp;보안 설정    VCN 생성(OCI Console:간편모드)    Compute Service(VM) 생성    Custom Image 생성     Hands-on Lab 실습 환경 이 Hands-on Lab은 OCI 일반 사용자인 demo.admin 사용자로 OCI IAM 로그인하여 진행합니다. 이번 Hands-on Lab에서 사용할 OCI 사용자와 컴파트먼트는 다음과 같습니다.\n   OCI User Password 작업 Compartment     demo.admin Welcome123456! root/sandbox/demo-prod    Hands-on Lab 시나리오 이번 Hands-on Lab은 앞에서 만든 demo-custom-image를 이용하여 Compute 인스턴스를 새로 만드는 절차를 다룹니다.\ndemo-custom-image는 Oracle Linux 7.7 이미지에 nginx를 설치하고 방화벽 오픈을 설정한 인스턴스를 Custom Image로 만든 것입니다.\ndemo-custom-image를 사용하면 별도 조치 없이 nginx와 방호벽 설정한 상태를 Compute 인스턴스로 만들 수 있습니다.\nCustom Image로 VM 생성 demo-custom-image Custom Image로 새로운 Compute 인스턴스를 만들기 위해서 다음과 같은 메뉴 패스로 Compute 인스턴스 관리 페이지로 이동합니다.\n (OCI 콘솔 왼쪽 위 햄버그 버튼)  Compute  Instances Compute 인스턴스 관리 페이지에서 Compartment를 root/sandbox/hol-prod로 설정하고, Create Instance 버튼을 클릭합니다.\nCompute 인스턴스 생성 폼에서 다음과 같이 입력하고 Change Image 버튼을 클릭합니다.\n   입력 항목 설정값     Name demo_linux_vm-custom-image    Custom Image 텝을 클릭하고 다음과 같이 설정하고 Select Image 버튼을 클릭합니다.\n   입력 항목 설정값     Custom Image Compartment root/sandbox/hol-prod   Custom Image Name demo-custom-image 체크    Custom Image를 선택하면, 다음과 같이 Compute 인스턴스 생성 폼에 demo-custom-image이 출력됩니다. 그리고 Show Shape, Network and Storage Options 링크를 클릭합니다.\nShow Shape, Network and Storage Options 링크를 클릭하면, AD 선택 항목과 Shape 선택항목이 나타납니다. Availability Domain에서 \u0026lsquo;AD1\u0026lsquo;을 선택하고 Change Shape 버튼을 클릭합니다.\nShape 선택 폼에서 다음과 같이 선택하고 Select Shape 버튼을 클릭합니다.\n   입력 항목 설정값     Instance Type Virtual Machine   Shape Type Standard   Shape Name VM.Standard2.2    Shape을 선택하면, 다음과 같이 Compute 인스턴스 생성 폼의 Shape으로 VM.Standard2.2(Virtual Machine)이 출력됩니다.\n네트워크 설정으로 다음과 같이 입력합니다.\n   입력 항목 설정값     Virtaul Cloud Network Compartment root/sandbox/hol-prod   Virtaul Cloud Network demo-vcn   Subnet Compartment root/sandbox/hol-prod   Subnet Public Subnet-demo-vcn(Regional)   Assign a public IP Address 체크    다음과 같이 cloud shell을 실행하고, cloud shell에 생성한 SSH 공개키를 다음 명령으로 조회합니다.\ncat ~/.ssh/id_rsa.pub  SSH 공개키를 복사(Cntl+C)한 다음에 다음과 같이 설정합니다.\n Paste SSH Keys 선택 SSH Keys에 공개키 붙여넣기(Cntl+V)  설정을 마치고 Create 버튼을 클릭합니다.\nCompute Instance 생성 폼 입력을 마치고 Create 버튼을 클릭하면, 화면은 Compute 인스턴스 상세 페이지로 이동합니다. 그리고 demo_linux_vm-custom-image 인스턴스 상세 페이지의 아이콘은 프로비저닝 중에 주황색으로 표시됩니다. 인스턴스 생성이 완료되면 인스턴스 상세 페이지 아이콘 색깔은 초록색이 됩니다.\ndemo_linux_vm-custom-image 인스턴스의 공개 IP가 132.145.81.241인 것을 확인할 수 있습니다.\ndemo_linux_vm-custom-image 인스턴스가 만들어지면, 브라우저로 132.145.81.241에 접근하면 nginx에 접근하는 것을 확인할 수 있습니다.\nHands-on Lab 요약 이번 Hands-on Lab에서는 demo-custom-image 이미지를 이용하여 새로운 인스턴스를 만들었습니다.\n새로 만든 Compute 인스턴스는 Cumstom Image를 만든 원본 Compute 인스턴스의 모든 설정이 적용되어 있습니다. 따라서 별도로 nginx를 설치하거나 방화벽에 80포트를 오픈할 필요 없이 바로 브라우저로 접근할 수 있습니다.\n"
},
{
	"uri": "http://cloud-docs.taewan.me/010.oci_intro/hands-on-101/030.oci_infra_basic/020.compute_instance/",
	"title": "Compute Service(VM) 생성",
	"tags": [],
	"description": "OCI Compute 서비스를 사용하면 VM 인스턴스를 생성하는 기초 핸즈온입니다.",
	"content": " OCI Compute 서비스를 이용하여 오라클 클라우드에 Compute(VM or 베이메탈) 서버를 만들고 관리할 수 있습니다. 이렇게 만든 서버를 Compute 인스턴스라고 합니다.\nHOL: OCI Compute 이번 Hands-on Lab에서는 OCI Console을 이용하여 OCI Linux VM 인스턴스를 생성하는 절차를 소개합니다. 이번 Hands-on Lab은 다음과 같은 작업으로 진행됩니다.\n OCI 자원 사용량 체크 OCI Console을 이용하여 Oracle Linux VM 생성 VM 인스턴스에 ssh 로그인 Nginx 설치 OS 방화벽 오픈: 80 port VCN Subnet에 Security List 설정 추가 브라우저 접근  이번 Hands-on Lab을 통해서 다음과 같은 VM 인스턴스를 만들 수 있습니다.\n이번 Hands-on Lab은 다음과 같은 목차로 구성됩니다.\n HOL: OCI Compute  Compute 서비스 개요 선행 Hand-on Lab Hands-on Lab 실습 환경 사전 준비  사용 가능한 자원 확인 SSH Key Pair 생성(@Cloud Shell)  OCI Compute 인스턴스 생성  SSH 접속 및 설치  Nginx 설치  nginx 서비스 등록 인스턴스 방화벽 오픈 Security List 설정 공개 IP 브라우저 접근    \n Compute 서비스 개요 OCI Compute는 오라클 클라우드에 컴퓨트 서버를 배포하고 관리하는 서비스입니다. OCI Compute로 배포한 서버를 인스턴스라고 합니다. OCI Compute 인스턴스에는 스토리지로 로컬 스토리지와 Volume 스토리지를 갖을 수 있습니다. 로컬 스토리에서 저장된 데이터는 인스턴스를 종료(자원 제거)하면 완전 소멸됩니다. Volume 스토리지에 저장된 데이터는 인스턴스를 종료 후에도 유지됩니다.\nOCI Compute는 두 가지 유형의 인스턴스를 제공합니다.\n Bare Metal  OCI 사용자에게 물리적으로 존재하는 전용 서버에 인스턴스를 설치하여 제공하는 방식 고 성능 및 강력한 독립성 제공  Virtual Machine  Bare Metal 서버위에 가상화 환경을 구성하고 인스턴스를 설치하여 제공하는 방식   OCI의 VM과 Bare Metal은 같은 인프라(물리적 서버)를 사용합니다. OCI Compute는 Oracle Ksplice   를 사용하여 하이퍼바이저 호스트를 재시작하지 않고 보안과 커널 업데이트를 적용합니다.\n선행 Hand-on Lab 다음과 같은 Hand-on Lab이 선행되어야 합니다.\n OCI Free Tier 등록    OCI 사용자\u0026amp;보안 설정    VCN 생성(OCI Console:간편모드)     Hands-on Lab 실습 환경 이 Hands-on Lab은 OCI 일반 사용자인 demo.admin 사용자로 OCI IAM 로그인하여 진행합니다. 이번 Hands-on Lab에서 사용할 OCI 사용자와 컴파트먼트는 다음과 같습니다.\n|OCI User|Password|작업 Compartment| |\u0026mdash;-|\u0026mdash;-| |demo.admin|root/sandbox/hol-prod|\n사전 준비 OCI Compute 인스턴스를 만들기 위해서는 다음과 같은 두 가지 준비 작업이 필요합니다.\n 사용 가능한 자원 확인 ssh Key Pair 파일 생성  사용 가능한 자원 확인 OCI Compute 인스턴스를 어떤 자원(OCPU)로 만들지 결정해야 합니다. 가용한 자원을 확인하는 기능은 Limits, Quotas and Usage 페이지에서 확인할 수 있습니다. 추가 권한 설정을 하지 않은 경우에, OCI 관리자 ID만이 이 페이지에 접근할 수 있습니다. 가용한 자원을 확인하는 작업은 Oracle Cloud 계정의 관리자 ID(taewanme@gmail.com)으로 로그인하여 진행합니다.\n (OCI 콘솔 왼쪽 위 햄버그 버튼)  Governance  Limits, Quotas and Usage Limits, Quotas and Usage 페이지에서 Scope 항목에서 AD를 지정하면, 현재 사용 가능한 자원 규모가 출력됩니다. 아래 이미지는 Oracle Cloud Trial 계정에 기본 할당된 자원 규모입니다. 아래 결과를 확인하고 이번 Hands-on Lab에서는 VM.Standard2.2를 사용하기로 결정합니다.\n이제 OCI 관리자 ID를 로그아웃 하고, OCI 일반 사용자인 demo.admin 사용자로 OCI IAM 로그인하여 다음 과정을 진행합니다.\n SSH Key Pair 생성(@Cloud Shell) 생성한 Compute 인스턴스애 ssh 접근을 가능하게 만들기 위해서, Compute 인스턴스를 생성할 때 SSH 공개키를 등록해야 합니다. Compute 인스턴스에 등록할 SSH 키쌍(Key Pairs) 파일을 준비합니다.\n이번 Hands-on Lab에서 VM 인스턴스를 만든 다음에, Cloud Shell에서 ssh 로그인을 시도할 것입니다. Cloud Shell에서 SSH 키쌍(Key Pair) 파일을 만들겠습니다.\ndemo.admin로 로그인하여 cloud shell을 실행합니다.\nSSH Key Pair 파일을 만들기 위해서 다음 명령을 실행하고 추가되는 입력 요청에 추가 설정 없이 Enter 입력만 합니다.\nssh-keygen -t rsa  위 명령을 실행하면 다음과 같이 실행됩니다. 명령이 실행되면서 4개 입력 요청이 나타납니다. 각 요청에 Enter만 입력합니다.\n명령이 실행되면 다음과 같이 생성되는 파일을 확인할 수 있고, 공개키 내용을 확인할 수 있습니다.\n## ssh key pair 파일 확인 명령 ls -al ~/.ssh/ ## ssh 공개 키 확인 명령 cat ~/.ssh/id_rsa.pub  위 명령을 실행하면 다음과 같은 결과가 출력됩니다.\nssh 공개 키는 OCI Compute 인스턴스를 생성 과정에서 입력값으로 사용됩니다. 공개키를 별도 저장합니다.\ncloud shell에 다음 명령을 입력하여 생성한 ssh key pair 파일 Permission을 600으로 설정합니다.\nchmod 600 ~/.ssh/id*  위 코드는 다음과 같이 실행됩니다.\ndemo_admin@cloudshell:~ (ap-seoul-1)$ chmod 600 ~/.ssh/id* demo_admin@cloudshell:~ (ap-seoul-1)$ ls -al ~/.ssh total 12 drwx------. 2 demo_admin oci 57 Apr 3 03:34 . drwxr-xr-x. 3 demo_admin oci 109 Apr 3 00:03 .. -rw-------. 1 demo_admin oci 1679 Apr 3 00:03 id_rsa -rw-------. 1 demo_admin oci 405 Apr 3 00:03 id_rsa.pub -rw-r--r--. 1 demo_admin oci 351 Apr 3 05:08 known_hosts demo_admin@cloudshell:~ (ap-seoul-1)$  OCI Compute 인스턴스 생성 OCI Console에 demo.admin ID로 OCI IAM 옵션으로 로그인합니다. 그리고 Compute 인스턴스를 생성하기 위해서 다음과 같은 메뉴 패스로 이동합니다.\n (OCI 콘솔 왼쪽 위 햄버그 버튼)  Compute  Instances Compute 인스턴스 관리 페이지에서 Compartment를 root/sandbox로 설정하고 Create Instance 버튼을 클릭합니다.\nCreate Instance 버튼을 클릭하면 Compute 인스턴스 생성 폼이 출력됩니다. Compute 인스턴스 생성 폼에서 Show Shape, Network and Storage Options 링크를 클릭합니다.\n다음 항목을 다음 이미지와 같이 입력합니다.\n   설정 항목 설정값 비고     Name demo-linux-vm    Image or operating system Oracle Linux 7.7 - Chanage Image 버튼을 클릭하고 선택-오라클 리눅스 7.X는 CentOs7.x/RedHat7.x와 완전한 호환성 제공   Availability Domain AD 1    Shape VM.Standard2.2(Virtual Machine) - Change Shape 버튼을 클릭하고 선택- 2 Core OCPU, 30GB Memory    다음과 같이 Networking 항목을 설정합니다.\n   설정 항목 설정값 설명     Virtual Cloud Network Compartment hol-prod 선택   Virtual Cloud Network demo-vcn 선택   Subnet Compartment hol-prod 선택   Subnet Public Subnet-demo-vcn(Regional) 선택   Assign a public address 체크     Cloud Shell에서 다음 명령을 입력하고 ssh 공개키를 조회합니다. Paste SSH Keys를 체크하고 앞에서 복사한 공개키를 SSH Keys에 붙여 넣습니다. 그리고 Create 버튼을 클릭합니다.\nCompute 인스턴스 생성 폼 입력을 마치고 Create 버튼을 클릭하면, demo-linux-vm 인스턴스의 상세 페이지로 이동합니다. 인스턴스 생성중에 아이콘은 주황색이고 인스턴스 프로비저닝이 완료되면 아이콘은 초록색으로 변경됩니다.\nSSH 접속 및 설치 이제 demo-linux-vm Compute 인스턴스가 생성되었습니다. demo-linux-vm의 공개 IP 주소를 확인하고 Cloud Shell에서 다음 명려응로 SSH 접근합니다.\nssh opc@[Public IP Address]   기본 인중서: ~/.ssh/id_rsa opc: Oracle Linux VM의 기본 OS User  Nginx 설치 다음 명령을 입력하여 nginx를 설치합니다.\nsudo yum install nginx -y  아래 [접기/펼치기]를 클릭하면 nginx 설치 명령 실행 로그를 확인할 수 있습니다.\n  [접기/펼치기] nginx 설치 명령 실행 로그   [opc@demo-linux-vm ~]$ sudo yum install nginx -y Loaded plugins: langpacks, ulninfo ol7_UEKR5 | 2.8 kB 00:00:00 ol7_addons | 2.8 kB 00:00:00 ol7_developer | 2.8 kB 00:00:00 ol7_developer_EPEL | 3.4 kB 00:00:00 ol7_ksplice | 2.8 kB 00:00:00 ol7_latest | 3.4 kB 00:00:00 ol7_oci_included | 2.9 kB 00:00:00 ol7_optional_latest | 2.8 kB 00:00:00 ol7_software_collections | 2.8 kB 00:00:00 (1/19): ol7_UEKR5/x86_64/updateinfo | 62 kB 00:00:00 (2/19): ol7_developer/x86_64/primary_db | 510 kB 00:00:00 (3/19): ol7_addons/x86_64/updateinfo | 84 kB 00:00:00 (4/19): ol7_developer_EPEL/x86_64/group_gz | 87 kB 00:00:00 (5/19): ol7_developer_EPEL/x86_64/updateinfo | 6.0 kB 00:00:00 (6/19): ol7_developer/x86_64/updateinfo | 5.0 kB 00:00:00 (7/19): ol7_ksplice/primary_db | 727 kB 00:00:00 (8/19): ol7_addons/x86_64/primary_db | 147 kB 00:00:00 (9/19): ol7_latest/x86_64/group_gz | 148 kB 00:00:00 (10/19): ol7_UEKR5/x86_64/primary_db | 13 MB 00:00:00 (11/19): ol7_latest/x86_64/updateinfo | 2.7 MB 00:00:00 (12/19): ol7_developer_EPEL/x86_64/primary_db | 12 MB 00:00:00 (13/19): ol7_ksplice/updateinfo | 5.3 kB 00:00:00 (14/19): ol7_oci_included/x86_64/primary_db | 105 kB 00:00:00 (15/19): ol7_optional_latest/x86_64/updateinfo | 914 kB 00:00:00 (16/19): ol7_latest/x86_64/primary_db | 20 MB 00:00:00 (17/19): ol7_software_collections/x86_64/primary_db | 4.8 MB 00:00:00 (18/19): ol7_software_collections/x86_64/updateinfo | 8.7 kB 00:00:00 (19/19): ol7_optional_latest/x86_64/primary_db | 4.2 MB 00:00:00 Resolving Dependencies -- Running transaction check --- Package nginx.x86_64 1:1.12.2-2.el7 will be installed -- Processing Dependency: nginx-filesystem = 1:1.12.2-2.el7 for package: 1:nginx-1.12.2-2.el7.x86_64 -- Processing Dependency: nginx-all-modules = 1:1.12.2-2.el7 for package: 1:nginx-1.12.2-2.el7.x86_64 -- Processing Dependency: nginx-filesystem for package: 1:nginx-1.12.2-2.el7.x86_64 -- Processing Dependency: libprofiler.so.0()(64bit) for package: 1:nginx-1.12.2-2.el7.x86_64 -- Running transaction check --- Package gperftools-libs.x86_64 0:2.6.1-1.0.1.el7 will be installed --- Package nginx-all-modules.noarch 1:1.12.2-2.el7 will be installed -- Processing Dependency: nginx-mod-stream = 1:1.12.2-2.el7 for package: 1:nginx-all-modules-1.12.2-2.el7.noarch -- Processing Dependency: nginx-mod-mail = 1:1.12.2-2.el7 for package: 1:nginx-all-modules-1.12.2-2.el7.noarch -- Processing Dependency: nginx-mod-http-xslt-filter = 1:1.12.2-2.el7 for package: 1:nginx-all-modules-1.12.2-2.el7.noarch -- Processing Dependency: nginx-mod-http-perl = 1:1.12.2-2.el7 for package: 1:nginx-all-modules-1.12.2-2.el7.noarch -- Processing Dependency: nginx-mod-http-image-filter = 1:1.12.2-2.el7 for package: 1:nginx-all-modules-1.12.2-2.el7.noarch -- Processing Dependency: nginx-mod-http-geoip = 1:1.12.2-2.el7 for package: 1:nginx-all-modules-1.12.2-2.el7.noarch --- Package nginx-filesystem.noarch 1:1.12.2-2.el7 will be installed -- Running transaction check --- Package nginx-mod-http-geoip.x86_64 1:1.12.2-2.el7 will be installed --- Package nginx-mod-http-image-filter.x86_64 1:1.12.2-2.el7 will be installed -- Processing Dependency: gd for package: 1:nginx-mod-http-image-filter-1.12.2-2.el7.x86_64 -- Processing Dependency: libgd.so.2()(64bit) for package: 1:nginx-mod-http-image-filter-1.12.2-2.el7.x86_64 --- Package nginx-mod-http-perl.x86_64 1:1.12.2-2.el7 will be installed --- Package nginx-mod-http-xslt-filter.x86_64 1:1.12.2-2.el7 will be installed -- Processing Dependency: libxslt.so.1(LIBXML2_1.0.18)(64bit) for package: 1:nginx-mod-http-xslt-filter-1.12.2-2.el7.x86_64 -- Processing Dependency: libxslt.so.1(LIBXML2_1.0.11)(64bit) for package: 1:nginx-mod-http-xslt-filter-1.12.2-2.el7.x86_64 -- Processing Dependency: libxslt.so.1()(64bit) for package: 1:nginx-mod-http-xslt-filter-1.12.2-2.el7.x86_64 -- Processing Dependency: libexslt.so.0()(64bit) for package: 1:nginx-mod-http-xslt-filter-1.12.2-2.el7.x86_64 --- Package nginx-mod-mail.x86_64 1:1.12.2-2.el7 will be installed --- Package nginx-mod-stream.x86_64 1:1.12.2-2.el7 will be installed -- Running transaction check --- Package gd.x86_64 0:2.0.35-26.el7 will be installed -- Processing Dependency: libjpeg.so.62(LIBJPEG_6.2)(64bit) for package: gd-2.0.35-26.el7.x86_64 -- Processing Dependency: libjpeg.so.62()(64bit) for package: gd-2.0.35-26.el7.x86_64 -- Processing Dependency: libfontconfig.so.1()(64bit) for package: gd-2.0.35-26.el7.x86_64 -- Processing Dependency: libXpm.so.4()(64bit) for package: gd-2.0.35-26.el7.x86_64 -- Processing Dependency: libX11.so.6()(64bit) for package: gd-2.0.35-26.el7.x86_64 --- Package libxslt.x86_64 0:1.1.28-5.0.1.el7 will be installed -- Running transaction check --- Package fontconfig.x86_64 0:2.13.0-4.3.el7 will be installed -- Processing Dependency: dejavu-sans-fonts for package: fontconfig-2.13.0-4.3.el7.x86_64 --- Package libX11.x86_64 0:1.6.7-2.el7 will be installed -- Processing Dependency: libX11-common = 1.6.7-2.el7 for package: libX11-1.6.7-2.el7.x86_64 -- Processing Dependency: libxcb.so.1()(64bit) for package: libX11-1.6.7-2.el7.x86_64 --- Package libXpm.x86_64 0:3.5.12-1.el7 will be installed --- Package libjpeg-turbo.x86_64 0:1.2.90-8.el7 will be installed -- Running transaction check --- Package dejavu-sans-fonts.noarch 0:2.33-6.el7 will be installed -- Processing Dependency: dejavu-fonts-common = 2.33-6.el7 for package: dejavu-sans-fonts-2.33-6.el7.noarch --- Package libX11-common.noarch 0:1.6.7-2.el7 will be installed --- Package libxcb.x86_64 0:1.13-1.el7 will be installed -- Processing Dependency: libXau.so.6()(64bit) for package: libxcb-1.13-1.el7.x86_64 -- Running transaction check --- Package dejavu-fonts-common.noarch 0:2.33-6.el7 will be installed --- Package libXau.x86_64 0:1.0.8-2.1.el7 will be installed -- Finished Dependency Resolution Dependencies Resolved ========================================================================================================= Package Arch Version Repository Size ========================================================================================================= Installing: nginx x86_64 1:1.12.2-2.el7 ol7_developer_EPEL 530 k Installing for dependencies: dejavu-fonts-common noarch 2.33-6.el7 ol7_latest 64 k dejavu-sans-fonts noarch 2.33-6.el7 ol7_latest 1.4 M fontconfig x86_64 2.13.0-4.3.el7 ol7_latest 254 k gd x86_64 2.0.35-26.el7 ol7_latest 144 k gperftools-libs x86_64 2.6.1-1.0.1.el7 ol7_latest 271 k libX11 x86_64 1.6.7-2.el7 ol7_latest 606 k libX11-common noarch 1.6.7-2.el7 ol7_latest 164 k libXau x86_64 1.0.8-2.1.el7 ol7_latest 28 k libXpm x86_64 3.5.12-1.el7 ol7_latest 55 k libjpeg-turbo x86_64 1.2.90-8.el7 ol7_latest 134 k libxcb x86_64 1.13-1.el7 ol7_latest 213 k libxslt x86_64 1.1.28-5.0.1.el7 ol7_latest 241 k nginx-all-modules noarch 1:1.12.2-2.el7 ol7_developer_EPEL 16 k nginx-filesystem noarch 1:1.12.2-2.el7 ol7_developer_EPEL 17 k nginx-mod-http-geoip x86_64 1:1.12.2-2.el7 ol7_developer_EPEL 23 k nginx-mod-http-image-filter x86_64 1:1.12.2-2.el7 ol7_developer_EPEL 26 k nginx-mod-http-perl x86_64 1:1.12.2-2.el7 ol7_developer_EPEL 35 k nginx-mod-http-xslt-filter x86_64 1:1.12.2-2.el7 ol7_developer_EPEL 25 k nginx-mod-mail x86_64 1:1.12.2-2.el7 ol7_developer_EPEL 53 k nginx-mod-stream x86_64 1:1.12.2-2.el7 ol7_developer_EPEL 76 k Transaction Summary ========================================================================================================= Install 1 Package (+20 Dependent packages) Total download size: 4.3 M Installed size: 14 M Downloading packages: (1/21): dejavu-fonts-common-2.33-6.el7.noarch.rpm | 64 kB 00:00:00 (2/21): fontconfig-2.13.0-4.3.el7.x86_64.rpm | 254 kB 00:00:00 (3/21): dejavu-sans-fonts-2.33-6.el7.noarch.rpm | 1.4 MB 00:00:00 (4/21): gd-2.0.35-26.el7.x86_64.rpm | 144 kB 00:00:00 (5/21): gperftools-libs-2.6.1-1.0.1.el7.x86_64.rpm | 271 kB 00:00:00 (6/21): libX11-1.6.7-2.el7.x86_64.rpm | 606 kB 00:00:00 (7/21): libX11-common-1.6.7-2.el7.noarch.rpm | 164 kB 00:00:00 (8/21): libXau-1.0.8-2.1.el7.x86_64.rpm | 28 kB 00:00:00 (9/21): libXpm-3.5.12-1.el7.x86_64.rpm | 55 kB 00:00:00 (10/21): libjpeg-turbo-1.2.90-8.el7.x86_64.rpm | 134 kB 00:00:00 (11/21): libxcb-1.13-1.el7.x86_64.rpm | 213 kB 00:00:00 (12/21): libxslt-1.1.28-5.0.1.el7.x86_64.rpm | 241 kB 00:00:00 (13/21): nginx-1.12.2-2.el7.x86_64.rpm | 530 kB 00:00:00 (14/21): nginx-all-modules-1.12.2-2.el7.noarch.rpm | 16 kB 00:00:00 (15/21): nginx-filesystem-1.12.2-2.el7.noarch.rpm | 17 kB 00:00:00 (16/21): nginx-mod-http-geoip-1.12.2-2.el7.x86_64.rpm | 23 kB 00:00:00 (17/21): nginx-mod-http-image-filter-1.12.2-2.el7.x86_64.rpm | 26 kB 00:00:00 (18/21): nginx-mod-http-perl-1.12.2-2.el7.x86_64.rpm | 35 kB 00:00:00 (19/21): nginx-mod-http-xslt-filter-1.12.2-2.el7.x86_64.rpm | 25 kB 00:00:00 (20/21): nginx-mod-mail-1.12.2-2.el7.x86_64.rpm | 53 kB 00:00:00 (21/21): nginx-mod-stream-1.12.2-2.el7.x86_64.rpm | 76 kB 00:00:00 ---------------------------------------------------------------------------------------------------- Total 18 MB/s | 4.3 MB 00:00:00 Running transaction check Running transaction test Transaction test succeeded Running transaction Installing : gperftools-libs-2.6.1-1.0.1.el7.x86_64 1/21 Installing : libX11-common-1.6.7-2.el7.noarch 2/21 Installing : dejavu-fonts-common-2.33-6.el7.noarch 3/21 Installing : dejavu-sans-fonts-2.33-6.el7.noarch 4/21 Installing : fontconfig-2.13.0-4.3.el7.x86_64 5/21 Installing : libxslt-1.1.28-5.0.1.el7.x86_64 6/21 Installing : libXau-1.0.8-2.1.el7.x86_64 7/21 Installing : libxcb-1.13-1.el7.x86_64 8/21 Installing : libX11-1.6.7-2.el7.x86_64 9/21 Installing : libXpm-3.5.12-1.el7.x86_64 10/21 Installing : 1:nginx-filesystem-1.12.2-2.el7.noarch 11/21 Installing : libjpeg-turbo-1.2.90-8.el7.x86_64 12/21 Installing : gd-2.0.35-26.el7.x86_64 13/21 Installing : 1:nginx-mod-http-geoip-1.12.2-2.el7.x86_64 14/21 Installing : 1:nginx-mod-mail-1.12.2-2.el7.x86_64 15/21 Installing : 1:nginx-mod-http-xslt-filter-1.12.2-2.el7.x86_64 16/21 Installing : 1:nginx-mod-http-perl-1.12.2-2.el7.x86_64 17/21 Installing : 1:nginx-mod-stream-1.12.2-2.el7.x86_64 18/21 Installing : 1:nginx-1.12.2-2.el7.x86_64 19/21 Installing : 1:nginx-mod-http-image-filter-1.12.2-2.el7.x86_64 20/21 Installing : 1:nginx-all-modules-1.12.2-2.el7.noarch 21/21 Verifying : libXpm-3.5.12-1.el7.x86_64 1/21 Verifying : libjpeg-turbo-1.2.90-8.el7.x86_64 2/21 Verifying : 1:nginx-filesystem-1.12.2-2.el7.noarch 3/21 Verifying : gd-2.0.35-26.el7.x86_64 4/21 Verifying : libxcb-1.13-1.el7.x86_64 5/21 Verifying : fontconfig-2.13.0-4.3.el7.x86_64 6/21 Verifying : libXau-1.0.8-2.1.el7.x86_64 7/21 Verifying : libxslt-1.1.28-5.0.1.el7.x86_64 8/21 Verifying : 1:nginx-mod-http-geoip-1.12.2-2.el7.x86_64 9/21 Verifying : dejavu-fonts-common-2.33-6.el7.noarch 10/21 Verifying : 1:nginx-1.12.2-2.el7.x86_64 11/21 Verifying : dejavu-sans-fonts-2.33-6.el7.noarch 12/21 Verifying : 1:nginx-mod-mail-1.12.2-2.el7.x86_64 13/21 Verifying : libX11-1.6.7-2.el7.x86_64 14/21 Verifying : 1:nginx-all-modules-1.12.2-2.el7.noarch 15/21 Verifying : libX11-common-1.6.7-2.el7.noarch 16/21 Verifying : 1:nginx-mod-http-xslt-filter-1.12.2-2.el7.x86_64 17/21 Verifying : gperftools-libs-2.6.1-1.0.1.el7.x86_64 18/21 Verifying : 1:nginx-mod-http-perl-1.12.2-2.el7.x86_64 19/21 Verifying : 1:nginx-mod-http-image-filter-1.12.2-2.el7.x86_64 20/21 Verifying : 1:nginx-mod-stream-1.12.2-2.el7.x86_64 21/21 Installed: nginx.x86_64 1:1.12.2-2.el7 Dependency Installed: dejavu-fonts-common.noarch 0:2.33-6.el7 dejavu-sans-fonts.noarch 0:2.33-6.el7 fontconfig.x86_64 0:2.13.0-4.3.el7 gd.x86_64 0:2.0.35-26.el7 gperftools-libs.x86_64 0:2.6.1-1.0.1.el7 libX11.x86_64 0:1.6.7-2.el7 libX11-common.noarch 0:1.6.7-2.el7 libXau.x86_64 0:1.0.8-2.1.el7 libXpm.x86_64 0:3.5.12-1.el7 libjpeg-turbo.x86_64 0:1.2.90-8.el7 libxcb.x86_64 0:1.13-1.el7 libxslt.x86_64 0:1.1.28-5.0.1.el7 nginx-all-modules.noarch 1:1.12.2-2.el7 nginx-filesystem.noarch 1:1.12.2-2.el7 nginx-mod-http-geoip.x86_64 1:1.12.2-2.el7 nginx-mod-http-image-filter.x86_64 1:1.12.2-2.el7 nginx-mod-http-perl.x86_64 1:1.12.2-2.el7 nginx-mod-http-xslt-filter.x86_64 1:1.12.2-2.el7 nginx-mod-mail.x86_64 1:1.12.2-2.el7 nginx-mod-stream.x86_64 1:1.12.2-2.el7 Complete! [opc@demo-linux-vm ~]$    nginx 서비스 등록 다음은 nginx 서비스를 등록 및 nginx 서비스 상태를 조회하는 명령입니다.\nsudo systemctl start nginx sudo systemctl status nginx  위 명령을 ssh 접속한 Cloud Shell에서 실행합니다. 실행 결과는 다음 이미지와 같습니다. 다음 이미지를 보면 Nginx가 작동하는 상태임을 확인할 수 있습니다.\n인스턴스 방화벽 오픈 다음 명령을 입력하여 nginx 서비스가 동작하는 것을 확인할 수 있습니다.\ncurl 127.0.0.1 | head  demo-linux-vm Compute 인스턴스 공개 IP(http://132.145.92.133/   )를 브라우저로 접근하면 다음과 같은 접근 불가 화면이 출력됩니다.\nOCI의 Oracle Linux 7.7 이미지로 만든 Compute 인스턴스에는 방화벽이 활성화되어 있습니다. 따라서 OS 방화벽에 해당 포트를 오픈해야 합니다. Oracle Linux에서 80포트를 오픈하는 명령은 다음과 같습니다. ssh로 접근한 터미널에 다음 명령을 실행합니다.\nsudo firewall-cmd --zone=public --add-port=80/tcp --permanent ## 80포트 오픈 sudo firewall-cmd --reload ## 방화벽 리로드 sudo firewall-cmd --zone=public --list-all ## 방화벽 오픈 목록 조회  위 명령은 다음과 같이 실행됩니다.\nSecurity List 설정 demo-linux-vm Compute 인스턴스의 공개 IP에 접근하기 위해서는, 이 인스턴스가 위치하는 Public Subnet-demo-vcn 서브넷의 Security List에 80 포트를 오픈하는 Ingress Rule을 추가해야 합니다. demo-linux-vm Compute 인스턴스의 상세 페이지에서 서브넷 링크 Public Subnet-demo-vcn을 클릭합니다.\ndemo-linux-vm Compute 인스턴스의 상세 페이지에서 Public Subnet-demo-vcn 링크를 클릭하면 demo_vcn VCN 상세 페이지로 이동합니다. demo_vcn VCN 상세 페이지의 Subnet 중에서 Public Subnet-demo-vcn 링크를 클릭하여 Public Subnet-demo-vcn 서브넷 상셍 페이지로 이동합니다.\nPublic Subnet-demo-vcn 서브넷 상셍 페이지에서 Security Lists 중에서 Default Security List for demo-vcn 링크를 클릭합니다.\nDefault Security List for demo-vcn Security List 페이지에서 Add Ingress Rules 버튼을 클릭합니다.\nAdd Ingress Rules 버튼을 클릭 Ingress Rule 등록 폼이 출력됩니다. 공개 서브넷에 80 포트 유입을 허용하는 보안 룰을 다음과 같이 설정하고 “Add Ingress Rules” 버튼을 클릭합니다.\n   설정 항목 설정 값     Stateless 체크박스 체크 하지 않음   Source CIDR 0.0.0.0/0   IP Protocol TCP   Source Port Range All   Destination Port Range 80   Description http port    Public Subnet의 80포트 유입 Security Rule 설정이 완료되면, 다음과 같은 80포트 Rule이 추가됩니다.\n공개 IP 브라우저 접근 Compute 인스턴스가 위치하는 Subnet의 Security List 설정과 운영체제 방화벽 설정을 마치면, demo-linux-vm 컴퓨트 인스턴스의 공개 IP를 브라우저로 접근 가능합니다. 브라우저로 접근하면 다음과 같은 화면이 출력됩니다.\n"
},
{
	"uri": "http://cloud-docs.taewan.me/010.oci_intro/hands-on-101/020.setting_basic_env/",
	"title": "OCI 사용자&amp;보안 설정",
	"tags": [],
	"description": "OCI 사용자 설정 핸즈-온입니다.",
	"content": " OCI는 계정 관리 서비스로 OCI IAM 서비스를 사용합니다. OCI IAM 서비스를 사용하여 OCI 사용자 및 권한 설정을 진행하는 Hands-on Lab을 진행합니다.\nOCI IAM은 다음과 같은 컴포넌트로 구성됩니다.\n OCI User OCI Group Compartement Policy  이 컴포넌트를 이용하여 관리자, 개발자, 감리 담당자, QA 담당자를 대표하는 4개의 OCI User를 만들고 사용자 그룹(Group), OCI 자원의 논리적인 묶음(Compartment) 및 접근 권한 정책(Policy)을 만들어 사용자 접근 제어를 관리하는 Hands-on Lab을 진행하겠습니다.\n핸드-온 랩 시나리오 이번 문서는 다음과 같은 시나리오를 실습할 것 입니다.\n1. 사용자와 사용자 그룹 관리자, 개발자, 감리 담당자, QA 담당자를 대표하는 4개 OCI 사용자를 만들고 역할 별로 사용자를 묶는 OCI 사용자 그룹을 4개 만듭니다.\n2. Compartment OCI Compartment는 OCI 자원을 묶는 논리적 단위입니다. Hands-on Lab에서는 모든 자원을 묶는 컴파트먼트를 만듭니다. 이 컴파트먼트 아래에 개발 관련 클라우드 리소스, 테스트 관련 클라우드 리소스 및 운영 관련 클라우드 리소스를 위한 3개 Compartment를 만들 것 입니다.\n3. Policy OCI Policy는 사용자 그룹과 Copartment를 맵핑하여 권한을 부여하는 설정 방식입니다. 4개 Policy 를 등록하여 그룹별 접근 제어를 설정할 것 입니다.\nOCI 사용자\u0026amp;보안 핸즈온 구성 OCI 사용자\u0026amp;보안 설정 핸즈-온 랩은 다음과 같이 순서로 진행됩니다.\n OCI Admin 로그인 생성     OCI User 생성   \n OCI Group 생성   \n OCI Compartment 만들기   \n OCI Policy: 권한 설정    \n "
},
{
	"uri": "http://cloud-docs.taewan.me/010.oci_intro/hands-on-101/020.setting_basic_env/010.oci_admin_login/",
	"title": "OCI Admin 로그인 생성",
	"tags": [],
	"description": "OCI Console에  OCI Admini으로 로그인하는 방법을 소개합니다.  OCI User를 생성하는 방법을 소개합니다. ",
	"content": " OCI 사용자\u0026amp;보안 설정 핸즈-온 랩은 Oracle Cloud 계정의 관리자 ID(taewanme@gmail.com)로 로그인하여 진행합니다. Oracle Cloud 계정의 관리자 ID를 OCI Admin User(OCI 관리자)라고 합니다. 다음과 같은 OCI 사용자를 OCI Admin User(OCI 관리자)라고 정의합니다.\n Oracle IDCS의 OCI_ADMINISTATORS 그룹에 소속된 OCI 사용자 OCI IAM의 Administrators 그룹에 소속된 OCI 사용자  Oracle Cloud 계정을 등록할 때 사용한 E-mail이 해당 계정의 OCI Admin User(OCI 관리자)가 됩니다.\nHOL: OCI Admin Login OCI 리전 로그인 페이지 URL은 다음과 같은 패턴을 갖습니다.\nhttps://console.{OCI_HOME_REGION_ID}.oraclecloud.com/?tenant=Tenant_Name}  다음과 같은 정보로 Oracle Cloud 계정을 생성했다고 가정합니다.\n   항목 설정값 설명     Account Name ocidemo001 Oracle Cloud 계정명   E-mail taewamne@gmail.com Oracle Cloud 계정의 관리자 ID   Password Welcome123456! Oracle Cloud 계정의 관리자 ID의 패스워드   Home Region Seoul Oracle Cloud 계정의 Home Region    이 Oracle Cloud 계정의 OCI 리전 로그인 페이지 URL은 다음과 같습니다.\n https://console.ap-seoul-1.oraclecloud.com/?tenant=ocidemo001     위 경로로 이동한 다음에 OCI Admin User(OCI 관리자) ID/패스워드인 taewanme@gmail.com과 Welcome123456!를 입력하고 OCI IAM 로그인합니다.\nOCI Admin User(OCI 관리자) ID로 OCI IAM 로그인에 어려움이 있으시다면 다음 문서를 참조하시기 바랍니다.\n OCI Console 로그인     "
},
{
	"uri": "http://cloud-docs.taewan.me/010.oci_intro/hands-on-101/010.console/020.oci_console_usage/",
	"title": "OCI Console 사용법",
	"tags": [],
	"description": "OCI Console 사용법을 소개합니다.",
	"content": " 이번 Hands-on Lab에서는 OCI Console 구성과 기본 사용법을 소개합니다.\nOCI Console 구성 OCI Console 구성에 대한 소개는 다음과 같은 목차로 진행합니다.\n OCI Console 구성  OCI 햄버그 메뉴 리전 관리 OCI Cloud Shell 고급 검색 사용자 프로파일 OCI 알림 언어 변경 실시간 \u0008채팅 도움말   \n OCI 햄버그 메뉴 OCI Console에서 햄버그 메뉴 아이콘을 클릭하여 다음과 같은 메뉴에 접근할 수 있습니다.\n 코어 인프라 Database 데이터 및 AI 솔루션 및 플랫폼 추가 Oracle Clodu 서비스 거버넌스 및 관리  햄버그 메뉴에 출력되는 모든 메뉴는 OCI Console에 로그인한 사용자가 접근 가능한 서비스입니다.\n리전 관리 OCI는 현재(2020년 03월 28일 기준) 16개 글로벌 리전(Gov 리전 제외)을 운영하고 있습니다. OCI Console의 상단 메뉴에서 현재 어떤 리전을 사용하고 있는지 확인할 수 있습니다.\n아래 이미지에서 확인할 수 있는 것처럼, OCI Console의 상단 메뉴에 현재 사용자가 접속한 OCI Region 이름이 출력됩니다. 다음 그림에서 Oracle Cloud 사용자는 South Korea Central(Seoul) 리전을 사용하고 있는 상태입니다.\n상단 메뉴에서 South Korea Central(Seoul)을 클릭하면, 현재 사용하는 클라우드 계정(Tenante, ocidemo001)의 홈 리전이 출력됩니다. 홈 리전 아래에 영역관리(Manage Regions) 메뉴를 클릭하면 OCI 리전을 구독하는 Region 관리 페이지로 이동합니다.\nRegion 관리 페이지에서는 OCI의 전체 리전 목록이 출력됩니다. 이 목록에서 가입됨(Subscribed)으로 표시된 Region은 현재 Oracle Cloud 계정(ocidemo001)이 접근 가능한 Region입니다. Oracle Cloud 계정(ocidemo001)이 새로운 Region에 접근해야 한다면, 이 페이지에서 해당 Region의 구독(Subscription) 버튼을 클릭합니다.\n지금 Hands-on에서 사용하는 계정은 Oracle Free Trial 계정입니다. Oracle Free Trial 계정은 Home Reghon만을 사용하도록 자원 사용이 제한돼 있습니다. 따라서 신규 리전 구독을 시도하면 다음과 같은 에러 메시지가 출력됩니다.\nOCI Cloud Shell Cloud Shell은 OCI Console에서 브라우저로 접근하는 VM 인스턴스 터니널입니다. OCI Cloud Shell에는 오라클 클라우드를 사용하는데 필요한 다양한 툴이 설치 및 사전 설정돼 있습니다. Oracle Cloud 사용자는 별도로 클라우드 관리 환경을 구성하고 툴을 설정할 필요 없이 OCI Cloud Shell로 바로 클라우드 관리 작업을 시작할 수 있습니다.\n아래 이미지와 같이 OCI Console에서 OCI CLI를 바로 사용할 수 있습니다. OCI CLI 오라클 클라우드 명령어 기반 관리 툴입니다. OCI Cloud Shell에는 OCI CLI의 완전한 환경 설정이 적용돼 있습니다.\nOCI Cloud Shell에 대한 자세한 내용은 다음 문서에서 확인할 수 있습니다.\n OCI Cloud Shell: 브라우저 기반 가상 터미널     고급 검색 OCI Console은 OCI 인프라스트럭처를 사용하는 모든 자원을 조회하는 SQL과 유사한 형태의 인터페이스를 제공합니다.\n다음 이미지는 OCI Console에서 생성한 모든 자원을 조회하는 쿼리를 실행하는 흐름을 소개합니다. 다음 이미지와 같이 OCI Console 상단의 검색 아이콘을 클릭하고 쿼리를 입력하면 관련 자원을 조회할 수 있습니다.\nquery all resources  OCI Console은 고급 검색 예제 쿼리와 함께 고급 검색 쿼리를 실행하는 편집기를 제공합니다. 다음 이미지와 같이 고급 검색을 실행한 상태에서 \u0026lsquo;고급 검색\u0026rsquo; 버튼을 클릭하면 고급 검색 편집/실행 페이지로 이동합니다. 이 페이지에서는 다양한 예제 쿼리를 확인할 수 있습니다. OCI Console이 제공하는 예제 쿼리를 응용하여 다양한 고급 검색 쿼리를 만들고 필요한 OCI 자원 목록을 검색할 수 있습니다.\n고급 검색 쿼리에 대한 문법 및 기능에 대해서는 다음 문서에서 최신 정보를 확인할 수 있습니다.\n [공식 OCI 문서 사이트]Search Language Syntax     사용자 프로파일 OCI Console의 사용자 아이콘에서 사용자 정보를 확인하고 사용자 프로파일 세부 관리 페이지로 이동할 수 있습니다.\nOCI 알림 OCI Console에서 Oracle Cloud 계정(ocidemo001)에게 제공되는 시스템 관리 알람(Announcements)을 조회할 수 있습니다. OCI Console 상단 메뉴의 알람 아이콘을 클릭하면 알람 관리 페이지로 이동합니다. 알람 관리 페이지에서 세부 공지 내용을 확인할 수 있습니다. Oracle Free Trial 계정을 사용하거나 새로 만든 계정에서는 다음과 같이 알람이 출력되지 않을 것 입니다.\n실제로 운영 환경으로 사용하는 OCI 계정에서 알람 메시지가 도착하면 아이콘에 초록색 점이 찍힙니다. 다음과 같은 알람 메시지를 확인할 수 있습니다. 알람 관리 페이지에서 알람 메시지 유형 및 기간으로 상세 검색할 수 있습니다.\n언어 변경 OCI Console은 30개 언어를 지원합니다. OCI Console의 기본 언어를 다음과 같이 변경할 수 있습니다.\n실시간 \u0008채팅 OCI Console은 기술 지원을 용도로 실시간 채팅을 지원합니다.\n도움말 도움말 메뉴에서는 OCI 관련 주요 매뉴얼 페이지를 제공합니다. 이 메뉴는 https://docs.cloud.oracle.com/   사이트에 연결됩니다.\n"
},
{
	"uri": "http://cloud-docs.taewan.me/010.oci_intro/hands-on-101/020.setting_basic_env/020.oci_user/",
	"title": "OCI User 생성",
	"tags": [],
	"description": "OCI Console에서 OCI User를 생성하는 방법을 소개합니다. ",
	"content": " 이번 Hands-on Lab에서는 OCI Console과 OCI CLI로 OCI User를 만드는 방법을 소개합니다. 이 핸즈온 랩은 OCI Admin 사용자로 OCI IAM 옵션으로 로그인한 상태에서 진행합니다.\nHOL: OCI User 이번 핸즈온 랩에서는 관리자, 개발자, 감리 담당자, QA 담당자를 대표하는 4개 OCI User를 만들것 입니다.\n   OCI User 역할     demo.admin 관리자   demo.audit 감리 담당자   demo.tester QA 담당자   demo.developer 개발자    핸즈온 랩 다음과 같은 순서로 진행합니다.\n HOL: OCI User  OCI User 관리: OCI Console OCI User 관리: OCI CLI  Cloud Shell 열기 OCI User 만들기  OCI User 등록 결과 OCI User 패스워드 초기화 OCI User 패스워드 설정   \n OCI User 관리: OCI Console OCI Console에서 다음 데모 사용자를 2개 만들겠습니다.\n   OCI User 역할     demo.admin 관리자   demo.audit 감리 담당자    OCI Console에서 OCI 사용자 관리 페이지는 다음 메뉴 패스로 이동합니다.\n (콘솔 왼쪽 위 햄버그 버튼)  Identity  Users OCI 사용자 관리 페이지에서 Create User 버튼을 클릭합니다.\nCreate User 버튼을 클릭하면 오른편 끝에서 사용자 등록 폼이 나타납니다. 사용자 등록 폼의 Name과 Description 항목에 다음 설정값을 입력하고 Create 버튼을 클릭합니다.\n   입력 항목 설정값     Name demo.admin   Description 핸즈온 데모 관리자    OCI 사용자 등록이 완료되면 다음과 같은 사용자 목록에 출력됩니다.\n이 작업을 반복하여 다음 사용자를 추가합니다.\n   입력 항목 설정값     Name demo.audit   Desciption 핸즈온 감리 담당자    작업을 완료하면 OCI 사용자 목록은 다음과 같이 출력됩니다.\nOCI User 관리: OCI CLI Oracle Cloud는 OCI 자원을 관리하는 툴로 웹 기반의 OCI Console과 CLI 기반 도구인 OCI CLI를 제공합니다. OCI Console은 Cloud Shell을 제공합니다. Cloud Shell은 브라우저 기반 리눅스 터미널입니다. Cloud Shell에는 사전 구성이 완료된 OCI CLI를 제공합니다. Cloud Shell의 OCI CLI를 사용하여 OCI User를 등록해 보겠습니다.\nCloud Shell 열기 OCI Console의 터미널 아이큰을 클릭하면 Cloud Shell이 열립니다. Cloud Shell에 다음 명령을 입력합니다.\noci os ns get  다음 이미지와 유사한 json이 출력된다면 oci cli가 정상적으로 작동하는 상태임을 확인할 수 있습니다.\nOCI User 만들기 cloud shell의 oci cli로 다음 2개 OCI User를 만들것 입니다.\n   OCI User 역할     demo.tester QA 담당자   demo.developer 개발자    다음 명령 2개를 하나씩 복사하여 Cloud shell에서 실행합니다.\noci iam user create --name demo.tester --description \u0026quot;데모 핸즈온 QA 담장자\u0026quot; oci iam user create --name demo.developer --description \u0026quot;데모 핸즈온 개발자\u0026quot;  아래 [접기/펼치기]를 클릭하면 Cloud Shell에서 위 명령을 실행한 전체 로그를 확인할 수 있습니다.\n  [접기/펼치기] Cloud Shell에서 OCI CLI로 OCI User 생성 전체 로그   Welcome to Oracle Cloud Shell. Your Cloud Shell machine comes with 5GB of storage for your home directory. Type `help` for more info. taewanme@cloudshell:~ (ap-seoul-1)$ oci os ns get { \"data\": \"cnntpzcnbjqo\" } taewanme@cloudshell:~ (ap-seoul-1)$ oci iam user create --name demo.tester \\  --description \"데모 핸즈온 QA 담장자\" { \"data\": { \"capabilities\": { \"can-use-api-keys\": true, \"can-use-auth-tokens\": true, \"can-use-console-password\": true, \"can-use-customer-secret-keys\": true, \"can-use-o-auth2-client-credentials\": true, \"can-use-smtp-credentials\": true }, \"compartment-id\": \"ocid1.tenancy.oc1..aaaaaaaa4bsxnpasbzmp2qtxcguhqdfaq3bgbfpill4v3misqq4hg7sheyza\", \"defined-tags\": {}, \"description\": \"\\ub370\\ubaa8 \\ud578\\uc988\\uc628 QA \\ub2f4\\uc7a5\\uc790\", \"email\": null, \"external-identifier\": null, \"freeform-tags\": {}, \"id\": \"ocid1.user.oc1..aaaaaaaafajh4qd43kb5da6xgmbaukvffdzybk7svkecrjwjllrlivzaixmq\", \"identity-provider-id\": null, \"inactive-status\": null, \"is-mfa-activated\": false, \"lifecycle-state\": \"ACTIVE\", \"name\": \"demo.tester\", \"time-created\": \"2020-03-30T23:35:00.750000+00:00\" }, \"etag\": \"7692cb8b4396f51a56a5782c417bdeb7d84a1670\" } taewanme@cloudshell:~ (ap-seoul-1)$ oci iam user create --name demo.developer \\  --description \"데모 핸즈온 개발자\" { \"data\": { \"capabilities\": { \"can-use-api-keys\": true, \"can-use-auth-tokens\": true, \"can-use-console-password\": true, \"can-use-customer-secret-keys\": true, \"can-use-o-auth2-client-credentials\": true, \"can-use-smtp-credentials\": true }, \"compartment-id\": \"ocid1.tenancy.oc1..aaaaaaaa4bsxnpasbzmp2qtxcguhqdfaq3bgbfpill4v3misqq4hg7sheyza\", \"defined-tags\": {}, \"description\": \"\\ub370\\ubaa8 \\ud578\\uc988\\uc628 \\uac1c\\ubc1c\\uc790\", \"email\": null, \"external-identifier\": null, \"freeform-tags\": {}, \"id\": \"ocid1.user.oc1..aaaaaaaauofc5hgbkbyuikp3h5lktz6lnj755ib4nieuyzngkf74ikkgg3ea\", \"identity-provider-id\": null, \"inactive-status\": null, \"is-mfa-activated\": false, \"lifecycle-state\": \"ACTIVE\", \"name\": \"demo.developer\", \"time-created\": \"2020-03-30T23:36:12.238000+00:00\" }, \"etag\": \"a159047c3797b89d9585d1e9bd3291b568cab055\" } taewanme@cloudshell:~ (ap-seoul-1)$    OCI User 등록 결과 OCI User 목록을 확인하기 위해서, 다음 메뉴 패스로 OCI User 관리 페이지로 이동합니다.\n (콘솔 왼쪽 위 햄버그 버튼)  Identity  Users 다음과 같이 4개 oci user가 만들어 진 것을 확인할 수 있습니다.\nOCI User 패스워드 초기화 새로 생성한 OCI User의 패스워드를 초기화 작업을 진행합니다. 다음 메뉴 패스로 OCI User 관리 페이지로 이동합니다.\n (콘솔 왼쪽 위 햄버그 버튼)  Identity  Users OCI User 관리 페이지에서 demo.admin 사용자를 클릭하여 상세 페이지로 이동합니다.\ndemo.admin 사용자 상세 페이지에서 Create/Reset password 버튼을 클릭합니다. 그리고 초기화된 패스워드를 Copy링크를 클릭하여 복사합니다.\n이렇게 복사한 demo.admin 패스워드는 다음과 같습니다 .\n   OCI User 초기화 패스워드     demo.admin hrhg_}-8\u0026gt;1{HHr6(\u0026lt;e0+    이 작업을 demo.developer, demo.audit, demo.tester에 반복합니다. 모든 작업을 마치면 다음과 같은 초기화 패스워드가 수집됩니다.\n   OCI User 초기화 패스워드     demo.admin hrhg_}-8\u0026gt;1{HHr6(\u0026lt;e0+   demo.audit \u0026amp;}Ru4[dhot(jGxi(I3R\u0026lt;   demo.developer x.Ez}cnIw0ufG\u0026lt;3DCf\u0026lt;}   demo.tester D{lUGC6MNwszKwFJ6}\u0026amp;g    OCI User 패스워드 설정 OCI Console에서 초기화된 패스워드는 OCI User가 최초로 로그인할 때, 패스워드 변경이 요청됩니다. OCI Home Region 로그인 페이지에서 OCI IAM 옵션으로 로그인합니다.\nhttps://console.\u0026lt;OCI_REGION_ID\u0026gt;.oraclecloud.com/?tenant={Tenant_Name}  그리고 패스워드를 Welcome123456!로 설정 합니다.\n다음은 demo.admin의 로그인 결과입니다.\n이 작업을 demo.developer, demo.audit, demo.tester에 반복합니다. 모든 작업을 마치면 다음과 같이 패스워드를 다음과 같이 설정합니다.\n   OCI User 로그인 패스워드     demo.admin Welcome123456!   demo.audit Welcome123456!   demo.developer Welcome123456!   demo.tester Welcome123456!    "
},
{
	"uri": "http://cloud-docs.taewan.me/010.oci_intro/hands-on-101/",
	"title": "OCI 입문: Hands-on 101 클래스",
	"tags": [],
	"description": "OCI 기초 핸즈-온입니다.",
	"content": "OCI 입문: Hands-on 101 클래스는 OCI 신규 입문자를 위해서 만든 OCI 기본 실습입니다. \u0026ldquo;OCI 입문: Hands-on 101 클래스\u0026ldquo;는 다음과 같은 내용으로 구성됩니다.\n OCI Free Tier 등록     OCI Console  \n OCI Console 로그인   \n OCI Console 사용법    \n OCI 사용자\u0026amp;보안 설정  \n OCI Admin 로그인 생성   \n OCI User 생성   \n OCI Group 생성   \n OCI Compartment 만들기   \n OCI Policy: 권한 설정    \n OCI Infra 기초  \n VCN 생성(OCI Console:간편모드)   \n Compute Service(VM) 생성   \n cloud-init를 이용한 자동화 구성   \n Cumstom Image 관리  \n Custom Image 생성 \n Custom Image 임포트/익스포트  \n OCI Load Balancer  \n Custom Image 생성 \n Custom Image 임포트/익스포트 \n Custom Image로 VM 생성    \n "
},
{
	"uri": "http://cloud-docs.taewan.me/980.oci-related-sites/oci-related-service/oci_status/",
	"title": "OCI 상태 알림 서비스",
	"tags": [],
	"description": "",
	"content": "\u0026lsquo;Oracle Cloud Infrastructure\u0026#39;s Status   \u0026rsquo;는 Oracle Cloud의 각 리전에서 운영하는 세부 서비스의 현재 운영 상태와 과거 장애 이력 정보를 제공하는 사이트입니다.\n다음 그림과 같이 각 리전 세부 서비스의 현재 상태 정보를 4개 분류(Normal Performance, Degraded Performance, Partial Outage, Major Outage)로 제공합니다.\n\u0026lsquo;Oracle Cloud Infrastructure\u0026#39;s Status   \u0026rsquo; 페이지를 이용하여 다음과 같은 정보를 확인할 수 있습니다.\n OCI 전체 리전 목록 각 리전에서 운영 중인 OCI 세부 서비스 세부 서비스 현재 운영 상태  또한 이 페이지는 과거 OCI 장애 이력 정보를 제공하는 \u0026lsquo;Incident History   \u0026rsquo;페이지 링크를 제공합니다.\n여기에서 제공하는 OCI 장애 기록을 클릭하면, 각 OCI 장애에 대한 상제 정보 페이지가 오픈됩니다. 이 페이지에서 장애 발생 시간, 처리 완료 시간, 장애 유형과 원인, 사용자 영향도와 같은 상세 정보를 확인할 수 있습니다.\n"
},
{
	"uri": "http://cloud-docs.taewan.me/010.oci_intro/hands-on-101/030.oci_infra_basic/030.cloud-init/",
	"title": "cloud-init를 이용한 자동화 구성",
	"tags": [],
	"description": "OCI Compute 인스턴스를 생성할 때, Cloud Init로 설정 및 구성 자동화를 적용합니다.",
	"content": " OCI Compute 서비스로 Compute 인스턴스(VM 혹은 Baremetal)를 만들 때, cloud-init를 사용하면 Compute 인스턴스 배포하고 수작업으로 진행하는 여러가지 작업(소프트웨어 설치/패치, 보안 설정) 작업을 자동화할 수 있습니다. Compute 인스턴스를 프로비저닝할 때 cloud-init를 적용하는 방법을 소개합니다.\nHOL: cloud-init 이번 Hands-on Lab에서는 OCI Console을 이용하여 OCI Linux VM 인스턴스를 생성하는 과정에서 cloud-init를 적용하는 방법을 소개합니다. cloud-init 사용하면 Compute 인스턴스를 배포한 다음에 SSH로 접속하여 진행하는 작업을 자동화할 수 있습니다. 이번 Hands-on Lab은 다음과 같은 순서로 진행됩니다.\n OCI Console을 이용하여 Oracle Linux VM 생성  cloud-init 설정 스트립트 입력: Nginx 설치, OS 방화벽 오픈(80 port)  브라우저 접근  이번 Hands-on Lab을 통해서 다음과 같은 VM 인스턴스를 만들 수 있습니다.\n이번 Hands-on Lab은 다음과 같은 목차로 구성됩니다.\n HOL: cloud-init  cloud-init 개요 선행 Hand-on Lab Hands-on Lab 실습 환경 사전 준비  사용 가능한 자원 확인  OCI Compute 인스턴스 생성 공개 IP 브라우저 접근 Hands-on Lab 요약  참고문서  \n cloud-init 개요 cloud-init는 가상 머신 초기화 설정을 자동화하는 도구입니다. cloud-init를 이용하면 호스트 이름, 네트워크 인터페이스, 그리고 인증키를 설정, 소프트웨어 설치 및 패치와 같은 작업을 가상 머신 생성 과정에 포함 시킬 수 있습니다.\nOCI Compute가 제공하는 Image에는 cloud-init가 적용돼 있습니다. 따라서 cloud-init에 쉘 스크립트를 설정하여 인스턴스를 커스터마이징할 수 있습니다.\n선행 Hand-on Lab 이번 Hands-on Lab을 진행하기 전에 다음 Hand-on Lab이 선행되어야 합니다.\n OCI Free Tier 등록    OCI 사용자\u0026amp;보안 설정    VCN 생성(OCI Console:간편모드)    Security List 설정: 80 포트     Hands-on Lab 실습 환경 이 Hands-on Lab은 OCI 일반 사용자인 demo.admin 사용자로 OCI IAM 로그인하여 진행합니다. 이번 Hands-on Lab에서 사용할 OCI 사용자와 컴파트먼트는 다음과 같습니다.\n   OCI User 작업 Compartment     demo.admin root/sandbox/hol-prod    사전 준비 OCI Compute 인스턴스를 만들기 위해서는 다음과 같은 준비 작업이 필요합니다.\n 사용 가능한 자원 확인  사용 가능한 자원 확인 OCI Compute 인스턴스를 어떤 자원(OCPU)로 만들지 결정해야 합니다. 가용한 자원을 확인하는 기능은 Limits, Quotas and Usage 페이지에서 확인할 수 있습니다. 추가 권한 설정을 하지 않은 경우에, OCI 관리자 ID만이 이 페이지에 접근할 수 있습니다. 가용한 자원을 확인하는 작업은 Oracle Cloud 계정의 관리자 ID(taewanme@gmail.com)으로 로그인하여 진행합니다.\n (OCI 콘솔 왼쪽 위 햄버그 버튼)  Governance  Limits, Quotas and Usage Limits, Quotas and Usage 페이지에서 Scope 항목에서 AD를 지정하면, 현재 사용 가능한 자원 규모가 출력됩니다. 아래 이미지는 Oracle Cloud Trial 계정에 기본 할당된 자원 규모입니다. 아래 결과를 확인하고 이번 Hands-on Lab에서는 VM.Standard.E2.2를 사용하기로 결정합니다.\n이제 OCI 관리자 ID를 로그아웃 하고, OCI 일반 사용자인 demo.admin 사용자로 OCI IAM 로그인하여 다음 과정을 진행합니다.\n OCI Compute 인스턴스 생성 OCI Console에 demo.admin ID로 OCI IAM 옵션으로 로그인합니다. 그리고 Compute 인스턴스를 생성하기 위해서 다음과 같은 메뉴 패스로 이동합니다.\n (OCI 콘솔 왼쪽 위 햄버그 버튼)  Compute  Instances Compute 인스턴스 관리 페이지에서 Compartment를 root/sandbox로 설정하고 Create Instance 버튼을 클릭합니다.\nCreate Instance 버튼을 클릭하면 Compute 인스턴스 생성 폼이 출력됩니다. 다음과 같은 작업을 진행합니다.\n   항목 설정값 설명     Name demo_linux_vm_cloud_init 인스턴스 이름   Image or operating system Oracle Linux 7.7 - Change Image 버튼을 클릭하고 선택-오라클 리눅스 7.X는 CentOs7.x/RedHat7.x와 완전한 호환성 제공    두 항목을 입력하고, Compute 인스턴스 생성 폼에서 Show Shape, Network and Storage Options 링크를 클릭합니다.\nAD를 다음과 같이 선택합니다.\n   설정 항목 설정값 비고     Availability Domain AD 1     그리고 Change Shape 버튼을 클릭합니다.\nShape을 선택하는 화면이 출력됩니다. Shape 선택에 다음과 같이 설정하고 Select Shape 버튼을 클릭합니다.\nShape을 선택하면 VM.Standard.E2.2 (Virutal Machine)이 출력됩니다.\n다음과 같이 Networking 항목을 설정합니다.\n   설정 항목 설정값 설명     Virtual Cloud Network Compartment hol-prod 선택   Virtual Cloud Network demo-vcn 선택   Subnet Compartment hol-prod 선택   Subnet Public Subnet-demo-vcn(Regional) 선택   Assign a public address 체크     Boot Volume과 Add SSh Keys 항목은 별도 설정 없이 넘어갑니다. 이번 Hands-on Lab에서는 VM에 ssh 접근을 하지 않은 것 입니다. 따라서 ssh 공개 키를 등록할 필요가 없습니다.\nShow Advanced Options을 클릭하고 다음 cloud-init 스크립트를 등록합니다. 그리고 Create 버튼을 클릭합니다.\n#!/bin/sh sudo yum install nginx -y sudo systemctl enable nginx sudo systemctl start nginx sudo firewall-offline-cmd --zone=public --add-service=http sudo systemctl enable firewalld sudo systemctl restart firewalld  Compute 인스턴스 생성 폼 입력을 마치고 Create 버튼을 클릭하면, demo-linux-vm-cloud-init 인스턴스의 상세 페이지로 이동합니다. 인스턴스 생성 중에 아이콘은 주황색이고 인스턴스 프로비저닝이 완료되면 아이콘은 초록색으로 변경됩니다.\ndemo-linux-vm-cloud-init 인스턴스의 상세 페이지에서 공개 IP가 140.238.18.120으로 설정됨을 확인할 수 있습니다.\n공개 IP 브라우저 접근 demo-linux-vm Compute 인스턴스의 공개 IP인 140.238.18.120에 브라우저로 접근합니다. 브라우저로 접근하면 다음과 같은 화면이 출력됩니다.\nHands-on Lab 요약 demo-linux-vm-cloud-init 인스턴스가 만들어질 때, cloud-init에 다음과 같은 스크립트를 등록했습니다.\n#!/bin/sh sudo yum install nginx -y sudo systemctl enable nginx sudo systemctl start nginx sudo firewall-offline-cmd --zone=public --add-service=http sudo systemctl enable firewalld sudo systemctl restart firewalld  demo-linux-vm-cloud-init 인스턴스가 만들어지고 프로비저닝을 완료하기 전에 위 스크립트가 실행되면서 다음과 같은 작업이 진행됩니다.\n nginx 설치 nginx 서비스 등록 방화벽 룰(80 포트) 등록 방화벽 룰 적용  cloud-init을 통해서 Compute 인스턴스 생성 후, 후속 조치를 자동화 할 수 있습니다.\n참고문서  CLOUD-INIT을 사용하여 가상 머신 설정 자동화     "
},
{
	"uri": "http://cloud-docs.taewan.me/010.oci_intro/hands-on-101/030.oci_infra_basic/",
	"title": "OCI Infra 기초",
	"tags": [],
	"description": "OCI Core Infra 서비스인 Compute, VCN, Load Balancing 등 IaaS 기초 서비스 핸드온 랩을 제공합니다. ",
	"content": " OCI 기초 서비스인 Compute(VM), VCN, Load Balancer 등 IaaS 기본 서비스를 구성하는 핸드온 랩입니다. 이 절에서 다루는 Hands-on Lab은 Oracle Cloud Trial Account로 실습할 수 있도록 구성되었습니다.\n OCI Infra Hands-on Lab  Oracle Account 정보 Home Region Login URL Hands-on Lab 구성   \n OCI Infra Hands-on Lab 이번 Hands-on Lab은 Oracle Cloud Free Tier 계정으로 진행할 수 있도록 구성했습니다. 아직 Oracle Cloud 계정이 없는 상태라면, 다음 문서를 참조하여 Oracle Cloud 계정을 만드시기 바랍니다.\n OCI Free Tier 등록     추가로 다음 문서의 Hands-on Lab을 완료했다고 가정하고 진행합니다. 환경 구성 Hands-on Lab을 완료하지 못했다면 다음 문서를 참조하여 OCI 사용자, 그룹, Compartment 및 Policy 설정 작업을 완료하시기 바랍니다.\n OCI 사용자\u0026amp;보안 설정     Oracle Account 정보 Oracle Cloud 계정을 다음과 같은 정보로 만들었다는 가정으로 진행하겠습니다.\n   항목 설정값     Account Name ocidemo001   OCI Admin User taewanme@gmail.com   Password Welcome123456!   OCI Account의 Home Region Seoul    다음 OCI User를 사용합니다.\n   OCI User Password 작업 Compartment     demo.admin Welcome123456! root/sandbox/demo-prod    Home Region Login URL 위 Oracle Account가 Hands-on Lab에서 사용하는 Region Login URL(로그인 URL)은 다음과 같습니다.\n https://console.ap-seoul-1.oraclecloud.com/tenate=ocidemo001     위 Home Region 로그인 URL은 다음과 같은 패턴으로 만들어집니다.\nhttps://console.{HOME_RESION_ID}.oraclecloud.com/tenate={Account Name}   사용할 Oracle Account가 Home Region으로 Seoul 리전이 아닌 다른 리전을 사용하는 경우에는 {HOME_RESION_ID}를 여러분이 사용하시는 Home Region ID로 교체하시기 바랍니다.  Region ID 확인는 다음 문서 참조: OCI 리전 정보     {Account Name}은 사용하시는 OCI Account ID로 교체하시기 바랍니다.  Hands-on Lab 구성 이 절에서 다루는 Hands-on Lab은 다음과 같이 순서로 진행됩니다.\n VCN 생성(OCI Console:간편모드)     Compute Service(VM) 생성   \n cloud-init를 이용한 자동화 구성   \n Cumstom Image 관리  \n Custom Image 생성   \n Custom Image 임포트/익스포트    \n OCI Load Balancer  \n Custom Image 생성   \n Custom Image 임포트/익스포트   \n Custom Image로 VM 생성     \n "
},
{
	"uri": "http://cloud-docs.taewan.me/010.oci_intro/hands-on-101/020.setting_basic_env/030.oci_group/",
	"title": "OCI Group 생성",
	"tags": [],
	"description": "OCI Console과 OCI CLI에서 OCI Group을 생성하는 방법을 소개합니다.",
	"content": " 이번 Hands-on Lab에서는 OCI Console과 OCI CLI로 OCI 그룹을 만들고, OCI 그룹에 OCI 사용자를 추가하는 방법을 소개합니다. 이 Hands-on Lab은 OCI Admin User(OCI 관리자) ID로 OCI IAM 로그인하고 진행합니다.\nHOL: OCI Group 이번 Hands-on Lab에서는 관리자, 개발자, 감리 담당자, QA 담당자를 대표하는 4개 OCI 그룹을 만들고, 각 그룹에 OCI 사용자를 등록합니다. 다음과 같이 OCI 그룹을 만들고 OCI 사용자를 추가하겠습니다.\n   OCI Group 역할 소속 OCI 사용자     hol.admins 데모 관리자 사용자 그룹 demo.admin   hol.audits 데모 감리 담당자 그룹 demo.audit   hol.testers 데모 QA 담당자 그룹 demo.tester   hol.developers 데모 개발자 그룹 demo.developer    핸즈온 랩 다음과 같은 순서로 진행합니다.\n HOL: OCI Group  OCI Group 생성: OCI Console  실습: OCI Group 생성과 User 할당(OCI Console)  OCI Group 생성: OCI CLI  Cloud Shell 열기 OCI Group 만들기 OCID 정보 확인 OCI Group에 OCI User 할당 OCI 그룹에 OCI 사용자 추가 결과 실습: OCI Group 생성과 User 할당(OCI CLI)    \n OCI Group 생성: OCI Console OCI Console에서 다음과 같은 사용자 그룹을 만들겠습니다.\n   OCI Group 역할 소속 OCI User     hol.admins 데모 관리자 사용자 그룹 demo.admin    OCI Console에서 OCI 그룹 관리 페이지는 다음 메뉴 패스로 이동합니다.\n (콘솔 왼쪽 위 햄버그 버튼)  Identity  Grouops OCI 그룹 관리 페이지에서 Create Group 버튼을 클릭합니다.\nCreate Group 버튼을 클릭하면 OCI 그룹 폼이 나타납니다. OCI 그룹 등록 폼의 Name과 Description 항목에 다음 설정값을 입력하고 Create 버튼을 클릭합니다.\n   입력 항목 설정값     Name hol.admins   Description 데모 관리자 사용자 그룹    OCI 그룹 등록이 완료되면 다음과 같은 OCI 그룹 목록이 출력됩니다.\n이제 hol.admins 그룹에 OCI User를 등록할 차례입니다. OCI 사용자 추가는 OCI Group 상세 페이지에서 진행됩니다. OCI 그룹 목록에서 hol.admins 링크 클릭하고 hol.admins 상세 페이지로 이동합니다.\nOCI 그룹 상세 페이지(hol.admins)에서 Add User to Group 버튼을 클릭합니다.\nAdd User to Group 창에서 demo.admin을 선택하고 Add 버튼을 클릭합니다.\nOCI 그룹에 OCI 사용자를 추가하면, hol.admins 그룹 상세 페이지에서 demo.admin이 추가된 것을 확인할 수 있습니다.\n실습: OCI Group 생성과 User 할당(OCI Console) 위 작업을 반복하여 다음 정보로 OCI 그룹을 만들고 OCI 사용자를 추가하시기 바랍니다.\n   OCI Group 역할 소속 OCI User     hol.audits 데모 감리 담당자 그룹 demo.audit    작업을 완료하면 OCI 사용자 목록은 다음과 같이 출력됩니다.\nOCI Group 생성: OCI CLI Oracle Cloud는 OCI 자원을 관리하는 툴로 웹 기반의 OCI Console과 CLI 기반 도구인 OCI CLI를 제공합니다. OCI Console은 Cloud Shell(브라우저 기반 리눅스 터미널)을 제공합니다. Cloud Shell은 OCI 사용자 설정이 적용된 OCI CLI를 제공합니다. Cloud Shell의 OCI CLI를 사용하여 OCI 그룹을 등록하고 OCI 사용자를 추가해 보겠습니다.\nCloud Shell 열기 OCI Console의 터미널 아이큰을 클릭하면 Cloud Shell이 열립니다. Cloud Shell에 다음 명령을 입력합니다.\noci os ns get  다음 이미지와 유사한 json이 출력된다면 oci cli가 정상적으로 작동하는 상태입니다.\nOCI Group 만들기 cloud shell의 oci cli로 다음 2개 OCI 그룹을 만들것 입니다.\n   OCI Group 역할 소속 OCI User     hol.testers 데모 QA 담당자 그룹 demo.tester    다음 명령을 복사하여 Cloud shell에서 실행합니다.\noci iam group create --name hol.testers --description \u0026quot;데모 QA 담당자 그룹\u0026quot;  아래 [접기/펼치기]를 클릭하면 Cloud Shell에서 위 명령을 실행한 전체 로그를 확인할 수 있습니다.\n  [접기/펼치기] Cloud Shell에서 OCI CLI로 OCI Group 생성 전체 로그   taewanme@cloudshell:~ (ap-seoul-1)$ oci iam group create --name hol.testers --description \"데모 QA 담당자 그룹\" { \"data\": { \"compartment-id\": \"ocid1.tenancy.oc1..aaaaaaaa4bsxnpasbzmp2qtxcguhqdfaq3bgbfpill4v3misqq4hg7sheyza\", \"defined-tags\": {}, \"description\": \"\\ub370\\ubaa8 QA \\ub2f4\\ub2f9\\uc790 \\uadf8\\ub8f9\", \"freeform-tags\": {}, \"id\": \"ocid1.group.oc1..aaaaaaaad3okf6eqyydeawe3wluoeeb66jija4s27ul6hqeuweb6hcnbcqrq\", \"inactive-status\": null, \"lifecycle-state\": \"ACTIVE\", \"name\": \"hol.testers\", \"time-created\": \"2020-03-31T01:57:02.135000+00:00\" }, \"etag\": \"702c95e87abdfca125303ff07aae46e831df7ba4\" } taewanme@cloudshell:~ (ap-seoul-1)$    OCID 정보 확인 OCI CLI로 OCI Group에 OCI User를 추가하기 위해서는 해당 OCI Group(hol.testers)의 OCID와 대상 OCI User(demo.tester)의 OCID가 필요합니다.\nOCID란 OCI 자원을 구분하는 구분자입니다. 3개 자원(hol.testers, demo.tester)의 OCID는 다음과 같이 확인할 수 있습니다.\n다음 그림과 같이 OCI Group 관리 페이지에서 hol.testers의 OCID를 복사할 수 있습니다.\n위에서 복사한 hol.testers의 OCID는 다음과 같습니다.\nocid1.group.oc1..aaaaaaaacuflh34u54rbjfk7v2dlcw34a5mgttizp2r2ns5zugxwyuorixxq  이제 OCI User인 demo.tester의 OCID를 확인할 차례입니다. 다음과 같이 OCI User 관리 페이지로 이동합니다.\nOCI User 관리 페이지에서 demo.tester 링크를 클릭하고 OCI User 상세 페이지로 이동합니다. 그리고 OCID의 copy링크를 클릭하여 OCID를 복사합니다.\n복사한 demo.tester의 OCID는 다음과 같습니다.\nocid1.user.oc1..aaaaaaaafajh4qd43kb5da6xgmbaukvffdzybk7svkecrjwjllrlivzaixmq  OCI Group에 OCI User 할당 다음 패턴의 명령을 Cloud Shell에서 실행하면, OCI 그룹에 OCI 사용자를 추가합니다.\noci iam group add-user \\ --group-id \\ {GROUP_OCID} \\ --user-id \\ {USER_OCID}  {GROUP_OCID}와 {USER-OCID}는 여러분이 조사한 OCID로 대체하여 실행합니다.\n hol.testers Group에 demo.tester 사용자 추가  {GROUP_OCID}와 {USER-OCID}를 앞에서 조사한 OCID로 대체하고 실행한 결과는 다음과 같습니다.\ntaewanme@cloudshell:~ (ap-seoul-1)$ oci iam group add-user \\  --group-id \\  ocid1.group.oc1..aaaaaaaacuflh34u54rbjfk7v2dlcw34a5mgttizp2r2ns5zugxwyuorixxq \\  --user-id \\  ocid1.user.oc1..aaaaaaaafajh4qd43kb5da6xgmbaukvffdzybk7svkecrjwjllrlivzaixmq { \"data\": { \"compartment-id\": \"ocid1.tenancy.oc1..aaaaaaaa4bsxnpasbzmp2qtxcguhqdfaq3bgbfpill4v3misqq4hg7sheyza\", \"group-id\": \"ocid1.group.oc1..aaaaaaaacuflh34u54rbjfk7v2dlcw34a5mgttizp2r2ns5zugxwyuorixxq\", \"id\": \"ocid1.groupmembership.oc1..aaaaaaaajpymo4kzc7l4jzrk2itevreeuipifqzzsyiw5hywrh7luyfqcgea\", \"inactive-status\": null, \"lifecycle-state\": \"ACTIVE\", \"time-created\": \"2020-03-31T03:32:57.517000+00:00\", \"user-id\": \"ocid1.user.oc1..aaaaaaaafajh4qd43kb5da6xgmbaukvffdzybk7svkecrjwjllrlivzaixmq\" }, \"etag\": \"b6e686ccfe60a4c727f19cd5534b380efba2054f\" } taewanme@cloudshell:~ (ap-seoul-1)$  OCI 그룹에 OCI 사용자 추가 결과 이 작업이 완료되면 다음과 같이 hol.testers 그룹에 demo.tester가 추가된것을 확인할 수 있습니다.\n실습: OCI Group 생성과 User 할당(OCI CLI) 위 작업을 다음 OCI 그룹과 OCI 사용자에 적용합니다.\n   OCI Group 역할 소속 OCI User     hol.developers 데모 개발자 그룹 demo.developer    이 작업을 완료하면 다음과 같은 결과를 확인할 수 있습니다.\n"
},
{
	"uri": "http://cloud-docs.taewan.me/980.oci-related-sites/oci-related-service/cloudharmony/",
	"title": "CloudHarmondy: 네트웍 테스트",
	"tags": [],
	"description": "",
	"content": "\u0026lsquo;CloudHarmony 서비스(https://cloudharmony.com)   \u0026rsquo;는 클라우드 서비스이 네트워크 속도 테스트 서비스를 제공합니다. 사용자 브라우저에서 지정한 클라우드 데이터센터까지 지정한 서비스의 업 링크, 다운로드 링크 속도를 측정할 수 있습니다.\nCloudHarmony 서비스는 사용자 브라우저에서 지정한 클러우드 데이터센터까지 구간 속도를 측정합니다. CloudHarmony 서비스 결과는 사용자가 사용하는 컴퓨터와 네트워크 상태에 영향을 받습니다. 아래 그림은 핸드폰 테더링을 연결한 노트북에서 측정한 결과입니다.\n 다음 그림은 CloudHarmony 서비스   에서 Oracle Cloud Infrastructure의 31개 서비스 테스트를 진행한 결과입니다.\n아래 그림과 같이 CloudHarmony 서비스는 클라우드 프로바이더 데이터 센터와 서비스 유형을 선택할 수 있습니다. 또한 다음과 같은 속성을 지정할 수 있습니다.\n Uplink downlonk Latency DNS Protocol  위 설정을 하고 네트워크 속도를 측정하면 다음과 같은 결과가 출력됩니다.\n"
},
{
	"uri": "http://cloud-docs.taewan.me/010.oci_intro/hands-on-101/030.oci_infra_basic/040.custom_image/",
	"title": "Cumstom Image 관리",
	"tags": [],
	"description": "OCI Core Infra 서비스의 Compute Instance를 Custom Image로 만들어 관리할 수 있습니다. OCI Custom Image 관리 방법을 소개합니다.",
	"content": " OCI Compute 인스턴스를 생성할 때 Image를 지정합니다. Image는 운영체제와 여러 소프트웨어 구성에 대한 템플릿입니다. Image는 Compute 인스턴스의 Boot Volume에 설치됩니다. Image는 Compute 인스턴스를 만드는 템플릿이며, 환경 구성에 대한 재사용 포인트입니다.\n프로비저닝된 Compute 인스턴스의 Boot Volume을 템플릿 Image로 새로운 인스턴스를 만드는 템플릿으로 사용할 수 있습니다. 이렇게 만든 템플릿 Image를 Custom Image라고 합니다. Custom Image를 이용하여 기존 Compute Instance 환경을 재사용하여 새로운 Compute 인스턴스를 만들 수 있습니다.\n이 절에서는 OCI Compute 인스턴스로 부터 Custom Image를 만들고 관리하는 Hands-on Lab을 다룹니다.\nOCI Compute Image OCI는 3가지 형태의 Compute 이미지를 제공합니다. 2020년 4월 4일 기준으로 총 104개의 Image를 사용할 수 있습니다.\n추가로 OCI Marketplace에 131개의 이미지와 Stack을 제공합니다.\nOCI가 제공하는 Image외에 OCI 사용자가 직접 이미지를 만들고 사용할 수 있습니다. 이번 Hands-on Lab에서는 OCI Custom Image를 만들고 관리하는 방법을 소개합니다.\nHands-on Lab 구성 이 절에서 다루는 Hands-on Lab은 다음과 같이 순서로 진행됩니다.\n Custom Image 생성     Custom Image 임포트/익스포트    \n "
},
{
	"uri": "http://cloud-docs.taewan.me/010.oci_intro/hands-on-101/020.setting_basic_env/040.oci_compartment/",
	"title": "OCI Compartment 만들기",
	"tags": [],
	"description": "OCI Console과 OCI CLI로 OCI Compartment를 생성하는 방법을 소개합니다.",
	"content": " 이번 Hands-on Lab에서는 OCI Console과 OCI CLI로 OCI Compartment를 만드는 절차를 소개합니다. 이 Hands-on Lab은 OCI Admin User(OCI 관리자) ID로 OCI IAM 로그인하고 진행합니다.\nHOL: OCI Compartment 이번 Hands-on Lab에서는 개발, 테스트, 및 운영 환경 자원을 관리하는 OCI Compartment를 4개 만들어 보겠습니다. 다음과 같은 OCI Compartment를 만들겠습니다.\n   OCI 컴파트먼트 역할 상위 컴파트먼트     sandbox 데모: 최상위 Compartment root   hol-dev 데모: 개발 환경 Compartment root/sandbox   hol-prod 데모: 운영 환경 Compartment root/sandbox   hol-test 데모: 테스트 환경 Compartment root/sandbox    핸즈온 랩 다음과 같은 순서로 진행합니다.\n HOL: OCI Compartment  OCI Compartment 생성: OCI Console  sandbox Compartment 생성 hol-dev Compartment 생성  OCI Compartment 생성: OCI CLI  Cloud Shell 열기 OCI Compartment 만들기: hol-prod  sandbox Compartment의 OCID hol-prod Compartment 만들기  OCI Compartment 만들기: hol-test    \n OCI Compartment 생성: OCI Console OCI Console에서 다음과 같은 Compartment를 만들겠습니다.\n   OCI Compartement 역할 상위 컴파트먼트     sandbox 데모: 최상위 Compartment root   hol-dev 데모: 개발 환경 Compartment root/sandbox    sandbox Compartment 생성 OCI Console에서 OCI Compartment 관리 페이지는 다음 메뉴 패스로 이동합니다.\n (콘솔 왼쪽 위 햄버그 버튼)  Identity  Compartments OCI Compartment 관리 페이지에서 Create Compartment 버튼을 클릭합니다.\nCompartment 생성 폼에 다음 설정값을 입력하고 Create Compartment 버튼을 클릭합니다.\n   입력 항목 설정 값     Name sandbox   Description 데모: 최상위 Compartment   Parent Compartment root    sandbox Compartment가 만들어지면 다음과 같은 Compartment 목록이 출력됩니다. sandbox 링크를 클릭하고 sandbox 상세 페이지로 이동합니다.\nhol-dev Compartment 생성 이번에는 sandbox Compartment 아래에 hol-dev Compartment를 만들 차례입니다. sandbox Compartment 상세 페이지에서 Child Compartment 아래에 위치하는 Create Compartment 버튼을 클릭합니다.\nCompartment 생성 폼에 다음 설정값을 입력하고 Create Compartment 버튼을 클릭합니다.\n   입력 항목 설정 값     Name hol-dev   Description 데모: 개발 환경 Compartment   Parent Compartment root/sandbox    hol-dev Compartment가 생성되면 다음과 같은 화면이 출력됩니다.\nOCI Compartment 생성: OCI CLI Oracle Cloud는 OCI 자원을 관리하는 툴로 웹 기반의 OCI Console과 CLI 기반 도구인 OCI CLI를 제공합니다. Cloud Shell은 OCI Console이 제공하는 브라우저 기반 리눅스 터미널입니다. Cloud Shell에서 완전한 환경 구성이 적용된 OCI CLI를 바로 사용할 수 있습니다. Cloud Shell의 OCI CLI를 사용하여 OCI Compartment를 생성해 보겠습니다.\nCloud Shell 열기 OCI Console의 터미널 아이콘을 클릭하면 Cloud Shell이 열립니다. Cloud Shell에 다음 명령을 입력합니다.\noci os ns get  다음 이미지와 유사한 json이 출력된다면 __OCI CLI_가 정상적으로 작동하는 상태임을 확인할 수 있습니다.\nOCI Compartment 만들기: hol-prod cloud shell의 oci cli로 다음 Compartment를 생성할 것 입니다.\n   OCI 컴파트먼트 역할 부모 컴파트먼트     hol-prod 데모: 운영 환경 Compartment root/sandbox    sandbox Compartment의 OCID __OCI CLI_로 Compartment를 생성하기 위해서는 생성할 컴파트먼트를 포함할 부모 컴파트먼트의 OCID가 필요합니다. 새로 만들 컴파트먼트의 부모 컴파트먼트는 root/sandbox입니다. 다음 메뉴 패스로 OCI Compartment 관리 페이지로 이동합니다.\n (콘솔 왼쪽 위 햄버그 버튼)  Identity  Compartments OCI Compartment 관리 페이지에서 sandbox 링크를 클릭하고, sandbox Compartment 상세 페이지로 이동합니다.\nsandbox Compartment 상세 페이지에서 OCID의 copy링크를 클락합니다. 이 링크를 클릭하면 sandbox Compartment의 OCID가 클립보드에 복사됩니다.\n위에서 복사한 sandbox Compartment의 OCID는 다음과 같습니다.\nocid1.compartment.oc1..aaaaaaaa23dm4ozaskh6oqi5rmkjm6rfni26gkn5fjvd2fb7c63zocusmq6a  hol-prod Compartment 만들기 다음 명령을 복사하여 Cloud shell에서 실행합니다. 다음 명령에서 sandbox의 OCID는 여러분 환경의 sandbox OCID로 바꿔서 실행하시기 바랍니다.\noci iam compartment create --name hol-prod \\ --description \u0026quot;데모: 운영 환경 Compartment\u0026quot; \\ --compartment-id \\ ocid1.compartment.oc1..aaaaaaaa23dm4ozaskh6oqi5rmkjm6rfni26gkn5fjvd2fb7c63zocusmq6a  Cloud Shell에서 실행한 위 명령의 전체 실행 로그는 다음과 같습니다.\ntaewanme@cloudshell:~ (ap-seoul-1)$ oci iam compartment create --name hol-prod \\  --description \"데모: 운영 환경 Compartment\" \\  --compartment-id \\  ocid1.compartment.oc1..aaaaaaaa23dm4ozaskh6oqi5rmkjm6rfni26gkn5fjvd2fb7c63zocusmq6a { \"data\": { \"compartment-id\": \"ocid1.compartment.oc1..aaaaaaaa23dm4ozaskh6oqi5rmkjm6rfni26gkn5fjvd2fb7c63zocusmq6a\", \"defined-tags\": {}, \"description\": \"\\ub370\\ubaa8: \\uc6b4\\uc601 \\ud658\\uacbd Compartment\", \"freeform-tags\": {}, \"id\": \"ocid1.compartment.oc1..aaaaaaaacxassmk57phb2wwqygerdssdt4jflvuud7vxanl5iwnr7457tnea\", \"inactive-status\": null, \"is-accessible\": true, \"lifecycle-state\": \"ACTIVE\", \"name\": \"hol-prod\", \"time-created\": \"2020-03-31T12:20:46.555000+00:00\" }, \"etag\": \"b800166b433feac765f20972919de7b30d142acd\" } taewanme@cloudshell:~ (ap-seoul-1)$  OCI Compartment 만들기: hol-test 위 작업을 반복하여 OCI CLI로 다음 OCI Compartment를 만드시기 바랍니다.\n   OCI 컴파트먼트 역할 상위 컴파트먼트     hol-test 데모: 테스트 환경 Compartment root/sandbox    이 작업을 완료한 다음에 sandbox Compartment 상세 페이지로 이동하면, 다음과 같은 결과를 확인할 수 있습니다.\n"
},
{
	"uri": "http://cloud-docs.taewan.me/980.oci-related-sites/oci-related-service/oci_archi_diagram/",
	"title": "OCI 비쥬얼 다이어그램",
	"tags": [],
	"description": "",
	"content": "\u0026lsquo;https://online.visual-paradigm.com/   \u0026rsquo;는 다양한 다이아그램을 그리고 시각화하는 온라인 서비스입니다. \u0026ldquo;visual-paradigm.com\u0026ldquo;에서는 OCI 다이아그램으로 8개 템플릿을 지원합니다.\n다음과 같이 편집 기능을 제공합니다.\n\u0026ldquo;visual-paradigm.com\u0026ldquo;는 유료 서비스이지만 Free 라이센스로 사용할 수 있습니다.\n"
},
{
	"uri": "http://cloud-docs.taewan.me/010.oci_intro/hands-on-101/030.oci_infra_basic/050.load_balancer/",
	"title": "OCI Load Balancer",
	"tags": [],
	"description": "OCI Core Infra 서비스에서 제공하는 OCI Load Balancer에 구성 방법을 소개합니다.",
	"content": " OCI Compute 인스턴스를 생성할 때 Image를 지정합니다. Image는 운영체제와 여러 소프트웨어 구성에 대한 템플릿입니다. Image는 Compute 인스턴스의 Boot Volume에 설치됩니다. Image는 Compute 인스턴스를 만드는 템플릿이며, 환경 구성에 대한 재사용 포인트입니다.\n프로비저닝된 Compute 인스턴스의 Boot Volume을 템플릿 Image로 새로운 인스턴스를 만드는 템플릿으로 사용할 수 있습니다. 이렇게 만든 템플릿 Image를 Custom Image라고 합니다. Custom Image를 이용하여 기존 Compute Instance 환경을 재사용하여 새로운 Compute 인스턴스를 만들 수 있습니다.\n이 절에서는 OCI Compute 인스턴스로 부터 Custom Image를 만들고 관리하는 Hands-on Lab을 다룹니다.\nOCI Compute Image OCI는 3가지 형태의 Compute 이미지를 제공합니다. 2020년 4월 4일 기준으로 총 104개의 Image를 사용할 수 있습니다.\n추가로 OCI Marketplace에 131개의 이미지와 Stack을 제공합니다.\nOCI가 제공하는 Image외에 OCI 사용자가 직접 이미지를 만들고 사용할 수 있습니다. 이번 Hands-on Lab에서는 OCI Custom Image를 만들고 관리하는 방법을 소개합니다.\nHands-on Lab 구성 이 절에서 다루는 Hands-on Lab은 다음과 같이 순서로 진행됩니다.\n Custom Image 생성     Custom Image 임포트/익스포트   \n Custom Image로 VM 생성    \n "
},
{
	"uri": "http://cloud-docs.taewan.me/010.oci_intro/hands-on-101/020.setting_basic_env/050.oci_policy/",
	"title": "OCI Policy: 권한 설정",
	"tags": [],
	"description": "OCI Console로 자원 접근 제어를 위해서 Policy를 적용하는 절차를 소개합니다.",
	"content": " 이번 Hands-on Lab에서는 OCI 자원에 대한 접근 제어 설정을 다룹니다. OCI에서는 OCI IAM Policy로 OCI 자원에 대한 권한 설정을 합니다. 이 Hands-on Lab은 OCI Admin User(OCI 관리자) ID로 OCI IAM 로그인하고 진행합니다.\nHOL: OCI IAM Policy 위 이미지와 같은 접근 제어를 구성합니다. 핸즈온 랩 다음과 같은 순서로 진행합니다.\n HOL: OCI IAM Policy  OCI IAM Policy 개요  OCI IAM Policy 패턴 OCI IAM Policy: verb OCI IAM Policy: resource-type OCI IAM Policy: 하부 Compartment OCI IAM Policy: 예제  HOL: OCI Policy 적용  OCI Policy 관리 페이지 이동 hol-admin-Policy 생성 hol-audits-Policy 생성 hol-tests-Policy 생성 hol-developers-Policy 생성 hol-admin-Policy 업데이트   참고문서  \n OCI IAM Policy 개요 OCI IAM policy의 기본 문법은 다음과 같습니다.\nAllow \u0026lt;subject\u0026gt; to \u0026lt;verb\u0026gt; \u0026lt;resource-type\u0026gt; in \u0026lt;location\u0026gt; where \u0026lt;conditions\u0026gt;  OCI IAM Policy 패턴 OCI IAM Policy는 주로 OCI Group에 적용됩니다. 따라서 기본적인 사용법은 다음과 같습니다.\n Case 1: 특정 OCI Group을 특정 Compartment에 포함된 자원의 접근 제어 설정  Allow group \u0026lt;group_name\u0026gt; to \u0026lt;verb\u0026gt; \u0026lt;resource-type\u0026gt; in compartment \u0026lt;compartment_name\u0026gt;   Case 2: 특정 OCI Group이 Tenancy 전체 자원 접근 제어 설정  Allow group \u0026lt;group_name\u0026gt; to \u0026lt;verb\u0026gt; \u0026lt;resource-type\u0026gt; in tenancy  OCI IAM Policy: verb Policy에 적용하는 verb는 다음과 같습니다.\n   Verb 설명 대상 OCI User     inspect - 사용자 정의 메타데이터, 보안 정보를 제외한 자원을 리스트(조회)할 수 있는 권한 조회가 필요한 제3자 사용자   read - inspect에 추가하여 사용자 정의 메타데이터도 조회할 수 있는 권한 포함 조회가 필요한 내부 사용자   use - read의 모든 권한 포함 - 자원을 사용할 수 있는 권한 포함 - 자원 생성, 삭제에 대한 권한은 포함하지 않음  일반적인 업데이트 권한 포함 일반 사용자   manage 해당 자원의 모든 권한 부여 관리자    OCI IAM Policy: resource-type IAM Policy에는 다음과 같은 resource-type을 설정할 수 있습니다.\n   자원 타입 유형     개별 자원 타입 vcns, subnets, instances, volumes \u0026hellip;.   유사 자원 타입 virtual-network-family, instance-family, volume-family \u0026hellip;.   모든 자원 지정 all-resources    OCI IAM Policy: 하부 Compartment Compartment가 계층 구조를 갖을 경우에 상위 Compartment에 부여된 Policy는 하위 Compartment에 적용됩니다.\nOCI IAM Policy: 예제 OCI IAM Policy 예제입니다.\n 예제1: admins 그룹에게 Oracle Cloud 계정의 모든 OCI 자원 관리 권한 부여 Allow group admims to manage all-resources in tenancy \n 예제2: developers 그룹에게 Project-A 컴파트먼트에 생성되는 Compute 자원의 모든 권한 부여 Allow group developers to manage instance-family in compartment Project-A \n 예제3: admins 그룹에 Project-A 컴파트먼트에 생성되는 volume 자원의 모든 권한 부여 Allow group admins to manage volume-family in compartment Project-A \n 예제4: developers 그룹에 Project-A 컴파트먼트에 생성되는 VCN 자원의 사용 권한 부여 Allow group developers to use virtual-network-family in compartment Project-A \n 예제 5: 모든 사용자에게 Oracle Cloud 계정의 전체 자원의 읽기 권한 부여 Allow any-user to read users in tenancy \n  HOL: OCI Policy 적용 핸즈온 랩에서는 다음과 같은 시나리오를 적용합니다.\n HOL 시나리오  hol.admins 그룹에 포함된 사용자는 sandbox 컴파트먼트 아래에 위치하는 모든 컴파트먼트에 자원 생성, 사용, 제거 가능 hol.audits 그룹은 hol.prod 컴파트먼트에 생성된 자원을 상태를 확인할 수만 있음, 제어 권한 없음 hol.tests 그룹은 hol.test 컴파트먼트에 생성된 자원을 시작/정지만 가능, 자원 생성/제거 권한 없음 hol.developers 그룹은 hol.dev 컴파트먼트에 생성된 자원을 시작/정지만 가능, 자원 생성 제거 권한 없음 hol.admins 그룹에 cloud shell 사용 권한 부여   OCI Policy 관리 페이지 이동 OCI Console에서 OCI Policy 관리 페이지는 다음 메뉴 패스로 이동합니다.\n (콘솔 왼쪽 위 햄버그 버튼)  Identity  Policies 위 메뉴 패스로 이동하면 OCI Policy 관리 페이지가 출력됩니다.\nhol-admin-Policy 생성 hol.admins 사용자 그룹에게 sandbox 컴파트먼트 아래에 모든 자원의 전체 권한을 부여하는 policy를 생성합니다. 이 Policy는 sandbox를 포함한 모든 하위 컴파트먼트에 적용됩니다. 따라서 hol.admins 사용자 그룹은 sandbox, hol-prod, hol-dev, hol-test 컴파트먼트의 모든 자원 관리 권한을 갖습니다.\nsandbox 컴파트먼트는 root 컴파트먼트 아래에 위치합니다. 따라서 OCI Policy 관리 페이지에서 root 컴파트먼트를 선택하고 Create Policy 버튼을 클릭합니다.\nPolicy 생성 폼에 다음과 같은 값을 입력하고 Create 버튼을 클릭합니다.\n   설정 항목 설정값     Name hol-admins-policy   Description 데모: 관리자 그룹을 위한 권한 설정   Policy Statements allow group hol.admins to manage all-resources in compartment sandbox    hol-admins-policy policy가 만들어지면 다음과 같이 상세 페이지로 이동합니다.\nhol-audits-Policy 생성 hol.audits 사용자 그룹에 소속된 OCI 사용자에게 sandbox 컴파트먼트 아래에 모든 자원의 조회 권한을 부여하는 policy를 생성합니다. 이 Policy 적용 대상 범위는 hol-prod 컴파트먼트에 한정됩니다.\nhol-prod 컴파트먼트는 sandbox 컴파트먼트 아래에 위치합니다. 따라서 OCI Policy 관리 페이지에서 root 컴파트먼트를 선택하고 Create Policy 버튼을 클릭합니다.\nPolicy 생성 폼에 다음과 같은 값을 입력하고 Create 버튼을 클릭합니다.\n   설정 항목 설정값     Name hol-audits-policy   Description 데모: 감리 그룹을 위한 권한 설정   Policy Statements allow group hol.audits to read all-resources in compartment sandbox    hol-audits-policy policy가 만들어지면 다음과 같이 상세 페이지로 이동합니다.\nhol-tests-Policy 생성 hol.tests 사용자 그룹에게 sandbox 컴파트먼트 아래의 hol-test 컴파트먼트의 모든 자원의 사용 권한을 부여하는 policy를 생성합니다. 이 Policy 적용 대상 범위는 hol-test 컴파트먼트에 한정됩니다.\nhol-test 컴파트먼트는 sandbox 컴파트먼트 아래에 위치합니다. 따라서 OCI Policy 관리 페이지에서 sandbox 컴파트먼트를 선택하고 Create Policy 버튼을 클릭합니다.\nPolicy 생성 폼에 다음과 같은 값을 입력하고 Create 버튼을 클릭합니다.\n   설정 항목 설정값     Name hol-tests-policy   Description 데모: QA 그룹을 위한 권한 설정   Policy Statements allow group hol.testers to use all-resources in compartment hol-test    hol-tests-policy policy가 만들어지면 다음과 같이 상세 페이지로 이동합니다.\nhol-developers-Policy 생성 hol.developers 사용자 그룹에게 sandbox 컴파트먼트 아래의 hol-dev 컴파트먼트의 모든 자원 사용 권한을 부여하는 policy를 생성합니다. 이 Policy 적용 대상 범위는 hol-dev 컴파트먼트에 한정됩니다.\nhol-dev 컴파트먼트는 sandbox 컴파트먼트 아래에 위치합니다. 따라서 OCI Policy 관리 페이지에서 sandbox 컴파트먼트를 선택하고 Create Policy 버튼을 클릭합니다.\nPolicy 생성 폼에 다음과 같은 값을 입력하고 Create 버튼을 클릭합니다.\n   설정 항목 설정값     Name hol-developers-policy   Description 데모: 개발자 그룹을 위한 권한 설정   Policy Statements allow group hol.developers to use all-resources in compartment hol-dev    hol-tests-policy policy가 만들어지면 다음과 같이 상세 페이지로 이동합니다.\nhol-admin-Policy 업데이트 Oracle Cloud 계정의 관리자는 모든 권한을 갖는 슈퍼 사용자입니다. OCI 관리자로는 Cloud Shell도 사용할 수 있습니다.\nOCI 일반 사용자(demo.admin)로 로그인하고, Cloud Shell을 실행하면 다음과 같이 권한 부족 에러 메시지가 출력됩니다.\nCloud Shell을 사용하기 위해서는 다음과 같은 Policy Statement가 필요합니다.\nallow group \u0026lt;GROUP-NAME\u0026gt; to use cloud-shell in tenancy  hol-admins-policy에 cloud shell을 사용하는 Policy Statement 추가하겠습니다. 다음 메뉴 패스로 Policy 관리 페이지로 이동합니다.\n (콘솔 왼쪽 위 햄버그 버튼)  Identity  Policies Policy 관리 페이지에서 root 컴파트먼트를 선택하면 다음 이미지와 같은 목록이 출력됩니다. Policy 목록에서 hol-admins-policy을 링크를 선택하고 hol-admins-policy 상세 페이지로 이동합니다.\nhol-admins-policy 상세 페이지에서 Edit Policy Statements 버튼을 클릭합니다.\nEdit Policy Statements 편집 창에서 Another Statements 버튼을 클릭합니다.\nhol.admins 그룹에 Cloud Shell 사용 권한을 부여하는 다음 Policy Statements를 입력합니다.\nallow group hol.adminsto use cloud-shell in tenancy  Policy Statements를 입력하고 Save Changes 버튼을 클릭합니다.\n새로 등록한 Policy Statements가 저장되면, 다음 이미지와 같은 화면이 출력됩니다.\n이제 OCI 일반 사용자인 demo.admin으로 OCI IAM 로그인하면 Cloud Shell이 에러 없이 실행됨을 확인할 수 있습니다.\n참고문서  [Official OCI Docs]Policy Syntax    [Official OCI Docs]Details for the Core Services     "
},
{
	"uri": "http://cloud-docs.taewan.me/010.oci_intro/basic_concept/terminologies/",
	"title": "OCI 기초 용어 정리",
	"tags": [],
	"description": "OCI(Oracle Cloud Infrastructure)에서 주로 사용되는 용어를 정의합니다.",
	"content": " Oracle Cloud를 새로 접하시는 분들을 위하여 Oracle Cloud에서 자주 사용하는 Oracle Cloud 핵심 용어를 정리합니다.\n이번 문서는 다음과 같은 목차로 구성됩니다.\n OCI 주요 용어  Oracle Cloud Infrastructure 리전(Region)과 AD(Availability Domains) OCI 콘솔(Console) Tenancy(테넌시) Compartment(컴파트먼트) Virtual Cloud Network(VCN) Bare Metal Host Instance(인스턴스) Image(이미지) Shape Key Pair 블록 볼륨(BLOCK VOLUME) Object Storage 버킷(BUCKET) OCID(ORACLE CLOUD IDENTIFIER)  참고 문서    OCI 주요 용어 Oracle Cloud Infrastructure Orale Cloud Infrasturcture는 2018년부터 사용하기 시작한 Oracle Cloud의 새로운 브랜드명입니다. 초기에 오라클은 Nimbula를 인수하여 클라우드 서비스를 개발하였고, 2014년 Oracle은 OPC(Oracle Public Cloud)라는 브랜드로 클라우드 서비스를 시작했습니다. 이 시점부터 오라클은 새로운 2세대 클라우드 아키텍처를 개발하기 시작했습니다. 오라클의 2세대 클라우드 아키텍처로 개발된 오라클 클라우드 서비스가 바로 Oracle Cloud Infrastructure(이하 OCI)입니다. 2018년 Oracle Cloud 인프라 구현 기술은 OCI로 전면 교체되었고, 동시에 오라클 클라우드 브랜드명도 OPC(Oracle Public Cloud)에서 OCI(Oracle Cloud Infrastructure)로 변경되었습니다.\n리전(Region)과 AD(Availability Domains) Oracle Cloud Infrastructure(OCI)는 리전(Region)과 AD(Availability Domains)에서 운영됩니다. 리전은 데이터 센터가 운영되는 지리적인 영역을 나타냅니다. 그리고 AD는 리전을 구성하고 실제 OCI 서비스가 운영되는 데이터 센터입니다. 각 OCI 리전은 1개에서 최대 3개 AD로 구성됩니다. 리전은 오라클 클라우드가 서비스되는 물리적 데이터 센터인 AD를 묶는 논리적 단위입니다. 따라서 서비스 지역의 물리적 AD를 추상화하는 서비스 거점의 의미가 있습니다. 리전은 완전히 독립된 OCI 최상위 단위입니다. 각 리전은 네트워크로 연결될 뿐 모든 서비스와 자원은 완전히 격리됩니다.\n2020년 1월 12일 현재 Commercial Region을 12개를 운영하고 있습니다. 2020년 말까지 Commercial Region과 Government Region을 합쳐 총 36개까지 확대할 예정에 있습니다. 다음은 2020년 말 기준 OCI 리전 지도입니다.\n리전을 구성하는 각 AD는 어떤 자원도 공유하지 않는 물리적으로 완전히 독립된 데이터 센터입니다. 리전을 구성하는 AD은 파워와 네트워크 등 어떤 물리적 자원도 공유하지 않습니다. 따라서 특정 AD 장애가 다른 AD로 파급되지 않습니다. AD는 Region 고가용성을 위한 설계입니다.\nOCI 콘솔(Console) OCI 자원을 관리하고 접근하기 위해서 제공하는 웹 기반 UI입니다.\nTenancy(테넌시) OCI에 계정(Account)을 생성하면, 해당 계정(Account)을 위한 Tenancy가 생성됩니다. OCI에서 테넌시는 완전히 독립되고 격리된 사용자 기준의 최상위 단위입니다. OCI에 생성된 계정이 바로 Tenancy라고 말할 수 있습니다.\nCompartment(컴파트먼트) 컴파트먼트는 클라우드 자원을 구성하고 접근 제어하기 위한 논리적인 단위입니다. 컴파트먼트는 자원을 쉽게 관리할 수 있는 폴더 구조로 이해할 수 있습니다. OCI에서 만들어지는 대부분 자원은 특정 컴파트먼트에 할당됩니다. OCI 자원에는 VM 인스턴스, VCN(Virtual Cloud Networks), 블록 볼륨 등이 있습니다. 모든 OCI 자원은 특정 Compartment에 할당되고, Compartment 단위로 OCI User Group(사용자 그룹) 단위로 사용자 접근 정책이 설정 및 관리됩니다. 컴파트먼트는 물리적으로 실체가 있는 오브젝트가 아닌 논리적인 그룹입니다.\nOCI 계정이 생성될 때 Tenancy가 생성됩니다. 이 Tenancy가 루트 컴파트먼트(Root Compartment)입니다. 루트 컴파트먼트(Root Compartment)는 최상의 컴파트먼트입니다. 파일 시스템의 루트 디렉터리(/)와 비슷합니다. 디렉터리 구조와 같이 Root Compartment 아래에 새로운 Compartment를 추가할 수 있습니다. 모든 OCI 자원들은 특정 컴파트먼트에 속하게 되며 컴파트먼트 단위로 사용자 그룹의 접근 정책을 관리할 수 있습니다.\nVirtual Cloud Network(VCN) Virtual Cloud Network (VCN)은 서브넷, 라우트 테이블과 게이트웨이로 구성되는 전통적인 네트워크의 가상화 버전입니다. VCN은 리전 범위의 자원입니다. VCN은 특정 리전에 종속됩니다. VCN을 구성하는 서브넷(Subnet)을 만들 때, 리전 범위와 AD 범위를 선택할 수 있습니다. 리전 범위로 지정하면 리전을 구성하는 모든 AD에 걸쳐 서브넷이 구성됩니다. AD 범위를 지정하면 특정 AD에 위치합니다.\nVCN는 다음과 같은 컴포넌트로 구성됩니다.\n Subnet  public subnet: 서브넷에 포함되는 VM 인스턴스에 Public IP 설정 가능 private subnet: 서브넷에 포함되는 VM 인스턴스가 Public IP를 갖지 못함  Internet Gateway: 인터넷 연결 관문 Route Table: VCN을 위한 가상의 라우트 테이블 Security Lists: VCN의 가상 방화벽  Bare Metal Host OCI가 제공하는 사용자가 직접 제어 가능한 물리적인 서버가 Bare Metal Host입니다. Bare Metal로 물리적인 서버를 단일 사용자에게 전용으로 사용할 수 있는 환경을 제공합니다. 이렇게 동작하는 서버를 Bare metal compute instances라고 합니다. OCI 사용자가 직접 물리적 CPU, 메모리, NIC(Network Interface Card)를 관리 할 수 있습니다. 이렇게 관리하는 자원은 다른 테넌트와 어떠한 자원도 공유하지 않습니다. 물리적인 서버의 자원을 직접사용하고, 전용으로 사용하기 때문에 서버자원을 성능을 100% 활용하여 높은 성능을 제공합니다.\nInstance(인스턴스) OCI에서 동작하는 VM을 인스턴스라고 합니다. Virtual Machine은 물리적인 서버 위의 가상화를 통해 제공하는 컴퓨팅 환경입니다. Hypervisor에 의해 가상화된 레이어를 거치기 때문에 Bare Metal 보다는 상대적으로 낮은 성능을 제공합니다.\nImage(이미지) Image는 인스턴스를 위해서 운영체제와 여러 소프트웨어를 정의하는 가상 하드웨어 드라이브 템플릿입니다. OCI에서 인스턴스를 구동시킬 때, 이미지를 선택합니다. OCI는 다양한 이미지를 제공하며, OCI 사용자는 추가로 사용자 정의 이미지를 등록하고 사용할 수 있습니다.\nShape Shape은 인스턴스에 할당하는 컴퓨팅 자원(CPU, Memory 등) 템플릿입니다. 다음은 OCI가 제공하는 여러 Shape 중에서 Standard Shape 목록입니다.\nKey Pair Key Pair(키 페어)는 OCI가 사용하는 인증 방식입니다. Key Pair(키 페어)는 개인 키(private key) 파일과 공개 키(public key) 파일로 구성됩니다. 공개 키는 OCI에 업로드됩니다. OCI 사용자는 개인 키를 패스워드처럼 비공개로 관리합니다.\n여러 스펙으로 Key Pair(키 페어)를 만들 수 있습니다. OCI는 목적에 따라 두 가지 유형의 Key Pair(키 페어)를 사용합니다.\n 인스턴스 SSH Key Pair(키 페어)  인스턴스 SSH Key Pair(키 페어)는 VM 인스턴스에 SSH 접속에 사용됨. 인스턴스를 프로비저닝할 때, 공개 키(public key)를 등록. 등록된 공개 키(public key)는 인스턴스의 기본 OS 계정의 authorized key 파일에 저장  인스턴스의 기본 OS 계정: 오라클 리눅스(oci), 우분투(ubuntu)  ssh 접속 시, 사용자의 개인 키(Private Key)를 authorized key 파일에 저장된 공개 키로 검증.  API signing key pair(API 서명 키 페어)  API signing key pair는 PEM 포멧을 사용. API 요청을 제출할 때 사용자 인증에 사용. REST API로 OCI를 접속하는 사용자가 사용.   다음 그림은 OCI 사용자에 API 서명 키 페어를 등록하는 화면입니다.\n블록 볼륨(BLOCK VOLUME) 블록 볼륨은 OCI 인스턴스에 영구적인 저장 공간을 제공하는 가상 디스크입니다. 기존에 물리적 하드 디스크 드라이브를 사용했던 것 처럼, 클라우드 인스턴스에서는 블록 볼륨을 사용합니다. OCI 사용자는 데이터 유시 없이 인스턴스에 볼륨을 분리해서 다른 인스턴스에 붙일수 있습니다.\nObject Storage 오브젝트 스토리지(Object Storage)는 객체로 데이터를 저장하고 관리하는 스토리지 아키텍처입니다. 모든 데이터 타입을 저장할 수 있습니다. 최대 객체 사이즈는 10TB입니다. Object Storage에 저장되는 최대 파일 사이즈는 50GB입니다. 50GB보다 큰 객체는 여러 파일로 분할되어 저장됩니다. 오브젝트 스토리지에는 변경 빈도가 낮은 데이터가 저장됩니다. 다음과 같은 용도로 사용됩니다.\n 데이터 백업 파일 공유 로그나 센서 데이터와 같은 비정형 데이터 저장  버킷(BUCKET) 버킷은 오브젝트 스토리지(Object Storage)에 저장되는 데이터와 파일을 묶는 논리적인 그룹입니다. 버킷에 저장되는 객체 수는 제한이 없습니다.\nOCID(ORACLE CLOUD IDENTIFIER) 모든 OCI 자원은 유일한 ID를 갖습니다. 이 ID가 Oracle Cloud Identifier(OCID)입니다. 이 ID에는 자원 정보가 포함됩니다.\n참고 문서  [OCI Official Documentation 사이트] Key Concepts and Terminology    [k21academy] Oracle Cloud Infrastructure (OCI) : Region, AD, FD, Tenancy, Compartment, VCN, IAM, Storage Service    [OCI 100 Training] Virtual Cloud Network   https://www.oracle.com/a/ocom/docs/cloud/virtual-cloud-network-100.pdf  "
},
{
	"uri": "http://cloud-docs.taewan.me/010.oci_intro/basic_concept/oci_classic_and_oci_gen2/",
	"title": "OCI Classic과 OCI Gen2",
	"tags": [],
	"description": "오라클 클라우드의 시작점에서 현재 OCI로 발전한 단계를 가볍게 소개합니다.",
	"content": " 이 문서는 2018년 3월에 작성된 글을 일부 수정하여 올렸습니다. 이 글의 시점은 2018년 4월 시점입니다. 오라클 클라우드가 OPC에서 OCI Classic으로 그리고 OCI로 전환되는 흐름을 파악하는 입장에서 봐주셨으면 합니다.\n- 원본: [2018-03-03]Oracle Cloud IaaS: OCI vs OCI Classic  \n 오라클 클라우드의 핵심 인프라스터럭처는 OCI Classic(Oracle Cloud Infrastructure Classic) 서비스로 시작하여 현재 OCI(Oracle Cloud Infrastructure)로 발전했습니다. OCI Classic의 흔적은 대부분 사라진 상태입니다. 그러나 여전히 여러 서비스에서 그 흔적이 남아 있습니다. 현재(2020년 3월 기준) 오라클 클라우드 사용자를 관리하는 방식은 Oracle IDCS 사용자와 OCI 사용자 두 관리 방식으로 관리됩니다. 오라클 클라우드를 처음 접할 때, 왜 두 가지 관리 체계가 존재하는지 혼란스러운 것이 사실입니다. 이 부분을 이해하기 위해서는 오라클 클라우드의 발전 과정을 알아야합니다. 이와 관련하여 OCI Classic과 OCI가 무엇이고 어떻게 발전해 왔는지 간략하게 살펴 보겠습니다.\n이 문서에서 다루는 내용은 전적으로 작성자 개인 의견입니다. 오라클의 공식적인 입장과 다를 수 있습니다. 오라클 클라우드를 이해하는 배경 지식으로만 활용해 주시기 바랍니다.\n 이번 문서는 다음과 같은 목차로 구성됩니다.\n 오라클 클라우드 IaaS 서비스 OCI와 OCI-Classic 무엇이 다른가?  OCI Classic OCI(Oracle Cloud Infrastructure) OCI \u0026amp; OCI Classic 비교 OCI Classic vs C@C(Cloud at Customer)  요약 참고 문서    오라클 클라우드 IaaS 서비스 오라클은 2013년 3월에 Nimbula를 인수했습니다. Nimbula는 Private과 Hybrid 클라우드 인프라 관리 기술로 유명한 회사였습니다. 오라클은 Nimbula 기술을 근간으로 오라클 클라우드 IaaS 서비스를 개발했고, 2014년 OOW(Oracle Open World)에서 OPC(Oracle Public Cloud)라는 브랜드로 클라우드 서비스를 런칭했습니다.\n오라클은 2014년부터 OPC로 IaaS 서비스를 시작했습니다. 그와 동시에 Region, Availability Domain, Flat Network, 서버 및 랙 디자인을 클라우드 환경에 맞춘 클라우드 전용 데이터 센터 구축을 진행하였습니다. 이 클라우드 데이터 센터 구축 프로젝트를 2세대란 의미(Generation 2)에서 Gen2라고 불렀습니다. 이 Gen2에 올라간 IaaS 서비스를 BMCS(Bare Metal Cloud Service)라고 명명했습니다. 2017년 OOW에 맞춰서, 오라클은 오라클 클라우드 주요 서비스의 브랜드명을 조정하였습니다. 이 과정에서 BMCS는 OCI로 변경되었고, OPC는 OCI Classic으로 서비스명이 바꿨습니다.\n2017년과 2018년에 오라클 클라우드 서비스는 1세대 클라우드 서비스와 2세대 클라우드 서비스가 공존했습니다. 서비스 이름이 classic으로 끝나는 서비스는 Nimbula를 기반으로 개발된 서비스라고 분류했습니다. 예를 들어서 이 당시에 Storage 서비스와 Storage Classic 서비스가 함께 서비스되었습니다. Storage 서비스는 Gen2 기반의 스토리지 서비스였고, Storage Classic 서비스는 Nimbula 기반의 서비스였습니다.\nOCI가 등장하기 전까지 모든 오라클 PaaS는 OPC 즉 OCI Classic에서 서비스되었습니다. 2017년 OCI를 발표한 후, OCI Classic에서 동작하던 모든 PaaS를 OCI로 포팅하고 있습니다. 2020년 현재 거의 대부분의 서비스가 OCI로 전환된 상태입니다.\nOCI와 OCI-Classic 무엇이 다른가? OCI와 OCI Classic에 대하여 간략히 정리해 보겠습니다.\nOCI Classic OCI Classic은 Nimbula를 기반으로 개발된 IaaS 서비스입니다. Nimbula Director를 기반으로하며 하이퍼바이저로 Xen을 사용합니다. OCI Classic은 VM만을 서비스하고 Bare Metal1은 제공하지 않습니다. 앞에서 소개한 것처럼, 2014년 OOW에서 OPC라는 이름으로 공개되었고, 2017년 OOW에서 OCI Classic으로 이름이 변경되었습니다.\nOCI Classic은 네트워크로는 Shared Network과 IP Networks를 지원합니다. Shard Network은 클라우드 계정 단위로 네트웍을 관리합니다. 방화벽 개념인 Security List로 VM 그룹을 만들고 보안 룰을 적용하여 VM들을 격리하는 방식을 사용합니다. 그리고 VM에 할당되는 Private IP는 클라우드 계정 단위로 관리 됩니다.\nIP Network를 이용하면 클라우드 계정 단위로 IP Address를 관리할 수 있고 서브넷(Subnet)을 구성하여 여러개의 네트워크 망을 관리할 수 있습니다. IP Network을 사용하면 여러개의 네트워크 망을 구성하여 VM을 격리할 수 있습니다. IP Network을 사용하면 Shared Network 보다 향상된 네트워크 구성 및 안전한 환경을 만들 수 있습니다.\nOCI Classic이 오라클 최초의 IaaS 서비스인 만큼 오라클의 모든 PaaS는 OCI Classic을 지원합니다.\nOCI(Oracle Cloud Infrastructure) 이름에서 알 수 있는 것처럼, 현재 오라클 클라우드 인프라스트럭처는 OCI입니다. 데이터 센터, 서버 및 랙 및 네트워크 디자인이 적용된 클라우드 최적화한 데이터센터에서 운영됩니다. 데이터 센터 디자인에 Region, Availability Domain이 적용되어 있으며 네트워크가 Flat Network 기반으로 구성되어 있어 뛰어난 가용성과 확장성을 제공합니다. VCN(Virtual Cloud Network)2를 지원하며 private network를 구성하고 설정할 수 있습니다. VCN은 서브넷, 라우트 테이블, 게이트웨이를 갖는 네트워크의 Software-defined Network 버전입니다.\nOCI는 VM과 Bare metal 서비스를 모두 제공합니다. 하이퍼바이저로 KVM을 사용합니다. Edge Service로 Email, DNS, Load Balancer를 제공합니다. 현재 HPC, AI 및 Machine Learning은 OCI에서만 이용 가능합니다.\nOCI의 주요 구성 컴포넌트는 다음과 같습니다.\n Region Availability Domain Compartments IAM Virtual Cloud Network Edge Service  OCI \u0026amp; OCI Classic 비교    항목 OCI OCI Classic     Type Virtual Machine, Bare Metal Virtual Machine   Network Virtual Cloud Network Shared Network, IP Network   Hypervisor KVM Xen (Nimbula Director)   서비스 시작 2017년 2014년    OCI Classic vs C@C(Cloud at Customer) 오라클은 Public Cloud 이외에도 Private Cloud로 C@C(Cloud at customer)를 제공합니다. 오라클이 클라우드에서 제공하는 서버와 소프트웨어 구성을 고객사에 제공하고 해당 서비스를 오라클이 관리하는 서비스입니다. 위치를 기준으로 볼때 C@C는 고객사의 데이터 센터에 위치하기 때문에 Private Cloud입니다. 그러나 운영 형태로 보면 오라클이 직접 운영하는 Public Cloud 서비스입니다. 이 C@C 서비스는 OCI Classic과 같은 체계를 갖고 있습니다.\nOCI Classic의 토대가 되는 Nimbula는 볼래 Private Cloud와 Hybrid Cloud를 지양하는 클라우드 기술이었습니다. 이 기술은 이제 C@C 형태로 오라클의 Public Cloud와 고객사의 Private Cloud(C@C)를 연결하는 Hybrid Cloud 기술로 중요한 의미를 갖습니다. 현재 OCI Classic에 배포되는 모든 PaaS는 Oracle C@C에 배포될 수 있습니다.\n요약 오라클 클라우드는 2017년과 2018년에 IaaS로 OCI Classic과 OCI를 동시에 제공했습니다. OCI Classic은 Nimbula를 기반으로 개발되었으며, 오라클 클라우드의 첫 번째 IaaS 서비스입니다. 초기에 모든 Oracle PaaS는 OCI Classic으로 개발되었습니다.\nOCI는 클라우드 전용 데이터 센터 아키텍처를 기반으로 디자인된 차세대 오라클 클라우드 인프라입니다. 현재 오라클의 주력 IaaS 서비스는 OCI입니다. OCI는 VM과 Bare Metal 서비스를 모두 지원하며, 고성능 컴퓨팅(AI, ML, HPC) 서비스를 제공합니다. 2017년과 2018년에 오라클 PaaS는 현재 대부분 OCI Classic과 OCI를 모두 지원했습니다. 현재 오라클 클라우드의 대부분 PaaS는 OCI로 포팅되었습니다.\nOracle C@C(Cloud at Customer)는 고객사의 데이터센터에서 배포되어 운영되는 클라우드 서비스로 OCI Classic을 기반 기술로 개발되었습니다. 서버의 위치는 고객사 데이터 센터이며, 클라우드 시스템의 운영은 오라클이 담당합니다. 위치를 기준으로 Private Cloud이지만, 기반 기술 및 운영 주체를 기준으로 볼 때 Public Cloud입니다. OCI Classic에 배포 가능한 모든 PaaS는 현재 Oracle C@C에도 배포될 수 있습니다.\n참고 문서  Oracle Cloud IaaS: OCI vs OCI Classic      Bare Metal이란 물리적인 호스트 컴퓨터를 제공하는 것을 의미합니다. 고객에게 가상화 컴퓨팅 자원이 아닌 물리적인 서버를 직접 제공하는 서비스를 의미합니다. [return] VCN(Virtual Cloud Network)은 클라우드 내에서 사용자가 정의하는 가상 네트워크 망을 의미합니다. Private IP를 관리하는 단위가 됩니다. VCN 아래 Subnet을 구성할 수있습니다. VCN을 아마존에서는 VPC(Virtual Private Cloud)라고 표현합니다. [return]   "
},
{
	"uri": "http://cloud-docs.taewan.me/010.oci_intro/basic_concept/oci_resion_info/",
	"title": "OCI 리전 정보",
	"tags": [],
	"description": "오라클 클라우드(OCI Cloud Infrastructure)의 리전 정보를 정리합니다.",
	"content": " OCI 리전의 기본 정보를 정리합니다.\n   리전 이름 리전 ID 리전 위치 리전 Key Availability Domain 수     Amsterdam eu-amsterdam-1 네덜란드, 암스테르담 AMS 1   Ashburn us-ashburn-1 미국 버지니아, 애슈번 IAD 3   Sao Paulo sa-saopaulo-1 브라질, 상파올로 GRU 1   Frankfurt eu-frankfurt-1 독일, 프랑크푸르트 FRA 3   Jeddah me-jeddah-1 사우디 아라비아, 제다 JED 1   London uk-london-1 영국, 런던 LHR 3   Melbourne ap-melbourne-1 호주, 멜버른 MEL 1   Montreal ca-montreal-1 캐나다, 몬트리올 YUL 1   Mumbai ap-mumbai-1 인도, 뭄바이 BOM 1   Osaka ap-osaka-1 일본, 오사카 KIX 1   Phoenix us-phoenix-1 미국 애리조나, 피닉스 PHX 3   Tokyo ap-tokyo-1 일본, 도쿄 NRT 1   Toronto ca-toronto-1 캐나다, 토론토 YYZ 1   Seoul ap-seoul-1 대한민국, 서울 ICN 1   Sydney ap-sydney-1 호주, 시드니 SYD 1   Zurich eu-zurich-1 스위스, 취리히 ZRH 1    참고 문서  [Official OCI Docs]Regions and Availability Domains     "
},
{
	"uri": "http://cloud-docs.taewan.me/010.oci_intro/basic_concept/oci_services_in_regions/",
	"title": "OCI 리전별 서비스 현황 ",
	"tags": [],
	"description": "오라클 클라우드, OCI를 구성하는 서비스를 정리합니다. ",
	"content": "각 리전에서 제공하는 서비스는 다음 페이지에서 찾을 수 있습니다. 다음 페이지에서는 OCI 리전과 OCI Classic 리전의 지원 서비스 목록을 찾을 수 있습니다.\n Data Regions for Platform and Infrastructure Services     위 페이지에서 다음과 같은 형식으로 리전 지원 서비스를 제공합니다.\n"
},
{
	"uri": "http://cloud-docs.taewan.me/010.oci_intro/basic_concept/oci_free_trial/",
	"title": "OCI Free Tier",
	"tags": [],
	"description": "OCI(Oracle Cloud Infrastructure) Oracle Cloud를 사용하기 위해서는 OCI 계정이 필요합니다. 오라클이 무료로 제공하는 프로모션 프로그램인 OCI Free Tiral 계정을 만드는 과정을 소개합니다.",
	"content": " Oracle Cloud Free Tier는 OCI(Oracle Cloud Infrastructure)를 무료로 경험할 수 있도록 제공하는 프로그램입니다. Oracle Cloud Free Tier 계정을 신청하면 한 달 동안 사용할 수 있는 300달러 크래딧이 지급됩니다. 이 크래딧을 이용하여 OCI(Oracle Cloud Infrastructure)의 모든 서비스를 자유롭게 사용할 수 있습니다. 이 문서에서는 Oracle Cloud Free Tier에 대하여 소개하고 계정을 신청하는 절차에 대하여 알아보겠습니다.\n이번 문서는 다음과 같은 목차로 구성됩니다.\n OCI Free Tier 구성  1. Oracle Cloud Free Trial 2. Oracle Cloud Always Free  OCI Free Tier 등록 참고문서    Oracle Cloud Free Tier 계정을 신청하기 위해서는 다음과 같은 정보가 필요합니다.\n E-메일 (gmail, naver, daum 메일 가능) 전화 번호 신용 카드 번호  Oracle Cloud Free Tier 프로그램을 프로모션 사용자를 E-Mail, 전화번호, 신용 카드 번호 조합으로 사용자로 구분합니다. 계정을 등록할 때 입력한 개인 메일과 전화번호는 기존에 Oracle Cloud Free Tier(혹은 이전 Free Trial) 등록에 사용된 이력이 있는지 검증합니다. 따라서 이전에 사용 이력이 없는 메일과 전화 번호를 사용해야 합니다. 신용카드는 일정 횟수 중복 사용을 허용합니다. 그러나 가능한 기존에 사용하지 않는 새로운 카드 사용을 권장합니다. 새로 발급한 은행 직불카드(비자, 마스터)를 사용하는 것이 편리합니다.\n Oracle Cloud Free Tier 계정 등록에 사용되는 신용 카드 정보는 Oracle Cloud Free Tier 프로그램 사용 이력 파악과 일회 사용자 인증 용도로만 사용됩니다. 사용자 인증을 위하여 Oracle Cloud Free Tier 계정 등록에 사용된 카드에 1불을 결재합니다. 결재가 정상적으로 처리되면 정상적인 사용자로 분류하고, 앞서 발생한 결재를 바로 취소합니다.\nOracle Cloud Free Tier 등록에 사용된 신용 카드로 어떠한 과금도 발생하지 않습니다. Oracle Cloud Free Tier를 등록하고 Oracle Cloud Free Tier 계정에서 여러 서비스를 생성한 후, 클라우드 자원을 정지하거나 지우는 작업을 잊어버렸을 경우에 추가 비용이 발생/청구를 걱정하시는 분들이 많습니다. Oracle Cloud Free Tier 계정에서는 어떤 비용 청구도 발생하지 않습니다.\n OCI Free Tier 구성 Oracle Cloud Free Tier는 오라클 클라우드 경험 기회를 무료로 여러 사용자에게 제공하기 위한 프로그램입니다. Oracle Cloud Free Tier는 다음과 같은 2개 프로모션으로 구성됩니다.\n Oracle Cloud Free Trial Oracle Cloud Always Free  \u0026ldquo;Oracle Cloud Free Trial\u0026ldquo;은 오라클 클라우드 계정을 만들면 누구나 30일 동안 300달러에 해당하는 클라우드 자원을 자유롭게 사용할 수 있는 프로그램입니다. \u0026ldquo;Oracle Cloud Always Free\u0026ldquo;는 특정 클라우드 서비스를 기간과 비용에 제약 없이 사용할 수 있는 프로그램입니다.\n오라클은 Oracle Cloud Free Trial 프로그램을 2016년 부터 운영해 왔습니다. Oracle Cloud Free Tier는 기존 Oracle Cloud Free Trial에 Oracle Cloud Always Free를 추가한 모델입니다.\nOracle Cloud Always Free는 Oracle OpenWorld 2019에서 발표한 새로운 프로모션입니다. Oracle Cloud Free Tier 계정을 등록한 사용자는 계정을 등록한 시점 부터 Oracle Cloud Always Free 프로그램에서 지정한 자원을 영구적으로 사용할 수 있습니다.\n2019년 9월 16일부터 Oracle Cloud Free Tier 계정으로 Oracle Cloud Free Trial과 Oracle Cloud Always Free를 모두 이용할 수 있습니다.\n1. Oracle Cloud Free Trial Oracle Cloud Free Trial 프로그램은 오라클 클라우드를 30일 동안 300달러 규모로 클라우드 서비스를 사용하는 프로모션입니다. 오라클 클라우드 서비스 사용 시간 만큼 이용 금액이 차감됩니다. 일반적으로 PaaS 서비스(Autonomous Service 등) 사용 비용은 IaaS 서비스 보다 높습니다. \u0026ldquo;Oracle Cloud Free Trial\u0026rdquo; 사용 기간 동안에 모든 Oracle Cloud PaaS 서비스는 IaaS 컴퓨팅 가격으로 계산됩니다. 따라서 300달러로 상당히 많은 서비스를 이용할 수 있습니다.\n\u0026ldquo;Oracle Cloud Free Trial\u0026ldquo;이 지원하는 주요 서비스와 사용 규모는 다음과 같습니다.\n Infrasturcture  Compute: 3,500시간, 1.5TB 스토리지, VM과 베어메탈(Bare Metal) 서버 Storage: 5TB Object Storage Container: 관리형 쿠버네티스 (컴퓨트 기준 3,500시간)\u001d, 2TB 규모의 Docker Registry Function: 서버리스 서비스로 1억 1천 2백만번 실행 Load Balancer: 3500시간  Database  Autonomous Transaction Processing(ATP) Autonomous Data Warehouse(ADW) NoSQL Database: 10억번 쓰기(1.25 billion writes), 25억번 읽기(2.5 billion reads), 저장공강 100GB Oracle Database Cluod Service: 3,200 시간  Application Development  Java: 관리형 Weblogic 서비스 1,700 시간 Digital Assistant: 챗봇 서비스, 110,000 요청 처리 Mobile Hub: 110,000 요청 처리 Messaging: 8억개 메시지 처리  Analytics  Oracle Analytics: 4,700 시간   위 목록에서 제시된 시간은 각 서비스를 구성하는 전체 VM 서버 실행 시간을 합친 값입니다. 예를 들어서 관리형 Kubernetes 서비스(OKE)의 클러스터 인스턴스를 3개 VM으로 구성하고 10시간 사용하면, 이 서비스의 총 사용 시간은 30시간으로 계산됩니다.\n2. Oracle Cloud Always Free Oracle Cloud Free Tier 계정을 등록한 사용자는 Oracle Cloud Always Free 프로그램을 통해서 다음과 같은 서비스를 기간 제약없이 영구적으로 이용할 수 있습니다.\n   서비스 지원 규모 비고     Autonomous Data Warehouse(ADW) 1개 인스턴스 CPU: 1 OCPU, Storage: 20GB   Autonomous Transaction Processing(ATP) 1개 인스턴스 CPU: 1 OCPU, Storage: 20GB)   컴퓨트 2VM VM 사양: 1/8 OCPU, 1GB 메모리   블록스토리지 2개 블록 볼륨 전체 크기 100GB   오브젝트 스토리지 Standard Mode: 10GBArchive Mode: 10GB 매월 50,000 API 요청   로드 밸런서(Load Balancer) 1개 Bandwith: 10Mbps   아웃바운드 데이터 전송(Outbound Data Transfer) 매월 10TB    모니터링 서비스 매월 5억 건의 데이터 수집, 10억 건 데이터 조회    알림 서비스 매월 1백만 건 알림 서비스    메일 매월 1000개 메일     OCI Free Tier 등록 Oracle Cloud Free Tier 등록 페이지는 https://oracle.com   에서 찾을 수 있습니다. 다음 이미지와 같이 oracle.com 홈페이지에서 Oracle Cloud Free Tier 메뉴로 Free Tier 메인 페이지에 이동할 수 있습니다.\nOracle Cloud Free Tier 메인 페이지에서 \u0026ldquo;Start for free\u0026rdquo; 버튼을 클릭하면 계정 등록 페이지로 이동합니다.\n현재 사용하는 브라우저로 오라클 클라우드에 처음 접속할 경우에 쿠키 정보 수집과 관련한 사용자 동의 페이지가 출력될 수 있습니다. 쿠키 정보 수집을 동의하면 계정 등록 페이지로 이동합니다.\n이제 계정 등록 절차가 시작됩니다. 계정 등록에 사용할 E-mail 주소와 현재 위치 및 사용자 정보 사용에 대한 동의를 체크하고 \u0026ldquo;Next\u0026rdquo; 버튼을 클릭하여 다음으로 이동합니다. 아래 페이지에서 사용 가능한 E-mail인지 검증이 진행됩니다.\n다음 페이지에서 사용 목적, 홈 리전 위치, 등록자 이름, 주소, 소속 국가 및 전화번호 입력이 진행됩니다. 주소를 입력할 때, 다섯 자리 우편 번호를 사용하는 신주소 체계를 사용합니다. 전화번호를 입력할 경우에 첫 번째 번호는 생략해야 합니다. 예를 들어서 010-1234-1234일 경우에 국가 코드를 제외하고 10-1234-1234로 입력해야 합니다. \u0026ldquo;Next:Verify Mobile Number\u0026rdquo; 버튼을 클릭하면 주소 및 전화번호 확인 절차로 넘어갑니다.\n앞에서 입력한 주소 확인 팝업 창이 오픈됩니다. 잘 못 입력되었으면 \u0026ldquo;Edit\u0026ldquo;으로 수정하고 맞으면 \u0026ldquo;Use Original\u0026ldquo;를 클릭합니다.\n위 이미지에서 주소를 확인하면, 앞에서 입력한 전화번호로 다음과 같은 SMS 문자가 전송됩니다. SMS 문자에는 여섯 자리 인증 코드가 포함됩니다.\nSMS 포함된 인증 코드를 다음 팝업 창에 입력하고 \u0026ldquo;Verify Code\u0026rdquo; 버튼을 클릭합니다. 인승 번호가 맞으면 패스워드 설정 페이지로 이동합니다.\n다음과 같은 규칙으로 패스워드를 입력하고 \u0026ldquo;Next: Payment Information\u0026rdquo; 버튼을 클릭하고 신용카드 등록 페이지로 이동합니다.\n다음 이미지와 같이 \u0026ldquo;Add Credit Card Details\u0026rdquo; 버튼을 클릭하면 신용 카드 상세 정보 입력 폼이 출력됩니다.\n아래 이미지와 같은 신용 카드 정보를 입력합니다. 여기서 입력한 신용카드 정보는 사용자 인증 용도로만 이용됩니다. Free Tier 사용과 관련된 어떠한 결재도 발생하지 않습니다.\n신용 카드가 등록되면 다음과 같이 1달러 결재와 1달러 취소 트랜잭션이 실행됩니다. 이 결재와 취소 과정을 통해서 신용 카드 인증이 완료됩니다. Free Tier에 등록된 신용카드 정보는 사용자를 인증한 다음에는 어떤 결제에도 이용되지 않습니다.\n신용 카드 등록이 완료한 후, 다음 그림과 같이 오라클 클라우드 사용 동의 체크 박스를 체크하고 \u0026ldquo;Complete Sign-up\u0026rdquo; 버튼을 클릭하면 모든 사용자 등록 절차는 완료됩니다.\n사용자 등록 절차가 완료되면 다음 이미지와 같이 사용자 생성 중 페이지가 출력됩니다. 이 사용자 생성 페이지는 약 1분 정도 후에 오라클 클라우드 로그인 페이지로 자동 이동됩니다.\n앞에서 입력한 로그인 E-mail과 패스워드를 입력하고 \u0026ldquo;Sign-in\u0026rdquo; 버튼을 클릭하면 Oracle Cloud에 로그인합니다.\n사용자 정보를 확인하고 로그인이 완료되면, Oracle Cloud 메인 페이지에서 Free Trial과 Always Free가 활성화된 것을 확인할 수 있습니다.\n참고문서  새로운 Oracle Cloud 프로모션: \u0008Free Tier    Oracle Offers Always Free Autonomous Database and Cloud Infrastructure    What can I try with my Oracle Cloud Free Trial credits?     "
},
{
	"uri": "http://cloud-docs.taewan.me/010.oci_intro/basic_concept/oracle_cloud_identity_management_services/",
	"title": "OCI 사용자 ID 관리 서비스",
	"tags": [],
	"description": "OCI 사용자의 ID 관리 체계인 Oracle IDCS(Identity Cloud Service)와 OCI IAM(Identity &amp; Access Management)에 대하여 소개합니다.",
	"content": " 오라클 클라우드에는 사용자 ID를 관리하는 Oracle IDCS(Identity Cloud Service)와 OCI IAM(Identity \u0026amp; Access Management) 두 개 서비스가 있습니다. OCI 계정(Tenante)을 등록하면 두 서비스는 각각 동일한 ID와 패스워드를 갖는 Admin 사용자가 만들어집니다. 두 ID 관리 서비스는 각각 ID 만들고, 이 ID가 로그인하는 방법을 제공합니다. 이 문서에서는 Oracle IDCS와 OCI IAM에 대하여 비교하고 두 서비스가 제공하는 로그인 방식에 대하여 정리합니다.\n이번 문서는 다음과 같은 목차로 구성됩니다.\n Oracle IDCS와 OCI IAM  OCI가 갖는 두 가지 의미 OCI IAM Oracle IDCS Oracle IDCS \u0026amp; OCI IAM 비교 오라클 클라우드 로그인 옵션  오라클 클라우드 기본 로그인 OCI 홈 리전 로그인   인증 체계 선택 참고문서    Oracle IDCS와 OCI IAM 오라클 클라우드에서 ID를 관리하는 Oracle IDCS와 OCI IAM 서비스에 대하여 간략히 알아보겠습니다.\nOCI가 갖는 두 가지 의미 \u0026ldquo;OCI Classic과 OCI Gen2   \u0026rdquo; 문서에서 소개한 것처럼, 초기에 오라클 클라우드는 OPC(Oracle Public Cloud)라는 이름으로 시작했습니다. OPC 브랜드명은 OCI Classic으로 변경되었습니다. 그리고 2017년에 오라클 2세대 클라우드 인프라스트럭처인 OCI(Oracle Cloud Infrastructure)를 개발하고 새롭게 서비스를 시작했습니다.\n2020년 현재 1세대 오라클 클라우드 서비스인 OCI Classic은 대부분 2세대 클라우드 인프라인 OCI로 전환되었고, OPC 초기에 개발된 PaaS 서비스에서 부분적으로 사용되는 상황입니다. 그리고 2018년 하반기에 오라클 클라우드의 공식 브랜드 이름이 OCI로 전환되었습니다.\n요약하면 OCI라는 단어는 현재 두 가지 의미로 사용됩니다.\n Oracle Cloud의 공식 브랜드명 Oracle Cloud의 Gen2 인프라스트럭처  OCI와 OCI Classic을 모두 포함하는 Oracle Cloud를 공식적으로 OCI라고 부릅니다. 2020년 03월 현재 OCI Classic이 서비스되고 있는 상황입니다. 따라서 오라클 클라우드 Gen2 인프라스트럭처도 OCI라고 합니다.\nOCI IAM Oracle Cloud의 Gen2 인프라스트럭처가 새로 개발될 때, Gen2 OCI 사용자를 관리하는 자체 서비스를 새로 개발했습니다. 이것이 OCI IAM(Identity \u0026amp; Access Management)입니다. OCI IAM은 자체적인 인증 방법도 제공합니다. OCI IAM이 제공하는 인증 방식은 OCI 계정(Tenante)의 홈 리전에 접속하여 인증을 수행합니다. 이 인증 절차는 OCI IAM에서 만든 ID와 패스워드로 인증됩니다. OCI IAM으로부터 관리자 권한이 부여된 OCI 사용자는 OCI의 모든 자원을 사용할 수 있습니다.\nOCI IAM이 지원하는 범위는 OCI 인프라스트럭처와 OCI를 기반으로 하는 PaaS 서비스에 한정됩니다. Oracle Cloud 계정을 등록할 때, 입력한 사용자 이름과 비밀번호를 사용하여 Oracle IAM은 자체 OCI 로컬 사용자를 만듭니다. 계정 등록 단계에서 이렇게 만들어진 OCI 로컬 사용자에게는 관리자 권한이 부여됩니다.\nOCI IAM 구성 컴포넌트는 다음과 같습니다.\n OCI Local User: OCI IAM으로 생성한 사용자 ID입니다. User Group: OCI Local User의 묶음입니다. OCI IAM은 User Group 단위로 권한을 설정합니다. Policy: OCI IAM의 권한 설정 방식입닏. Policy는 User Group 단위로 설정됩니다. Compartment: 컴파트먼트는 클라우드 자원을 구성하고 접근 제어하기 위한 논리적인 단위입니다. 컴파트먼트는 자원을 쉽게 관리할 수 있는 폴더 구조로 이해할 수 있습니다. OCI에서 만들어지는 대부분 자원은 특정 컴파트먼트에 할당됩니다.  Oracle IDCS 오라클 클라우드의 인프라스트럭처는 현재 1세대 클라우드 서비스인 OCI Classic과 2세대 OCI로 구성됩니다. 오라클 클라우드가 제공하는 PaaS 서비스도 OCI Classic을 기반으로 하는 PaaS와 OCI를 기반으로 하는 PaaS로 구성됩니다. Oracle IDCS는 1세대 클라우드 서비스인 OCI Classic과 ID 관리 서비스입니다. Oracle IDCS가 OCI Classic와 OCI 모두를 지원하는 범위로 합니다. Oracle IDCS는 싱글사인온(SSO, Single Sign-On) 기능을 제공합니다. Oracle IDCS로 OCI에 로그인하면 다시 인증하지 않고 다른 오라클 클라우드 서비스를 이동할 수 있습니다. Oracle Cloud의 모든 서비스는 Oracle IDCS에 통합되어 있습니다.\nOracle Cloud 계정을 등록할 때, 입력한 사용자 이름과 비밀번호를 사용하여 Oracle Identity Cloud Service에 사용자가 생성됩니다. 이렇게 등록된 이 사용자에게는 Oracle IDCS를 포함한 Oracle Cloud 서비스 모두에 대한 관리자 권한이 부여됩니다.\nOracle IDCS \u0026amp; OCI IAM 비교 다음은 Oracle IDCS와 OCI IAM을 비교한 요약표입니다.\n   항목 Oracle IDCS OCI IAM     Console 접근 IP 제한 지원 지원하지 않음   MFA 지원 지원   MFA 지원 유형 SMS, 모바일 앱 Passcode, 모바일 앱 알림, 보안 질문, E 메일 모바일 앱 Passcode   암호 정책 변경 가능 변경 가능   대상 서비스 OCI, Blockchain, Java Cloud, Developer Cloud, NoSQL Cloud 등 OCI Classic 기반 PaaS OCI   다른 클라우드 서비스와의 연계 Oracle Cloud, SAML, OAuth 등 Azure Directory, Okta, SAML   API IDCS 고유 (SCIM 준수) OCI API    오라클 클라우드 로그인 옵션 오라클 클라우드는 Oracle IDCS와 OCI IAM을 이용한 2가지 로그인 방식을 제공합니다.\n오라클 클라우드 기본 로그인 https://oracle.com   이 제공하는 기본 로그인 방식은 Oracle IDCS를 이용한 방식입니다. 다음은 Oracle IDCS를 이용한 로그인 절차입니다. 인증 정보를 입력하면 Oracle IDCS가 SSO(Single Sign-On)을 처리한 다음에 OCI 페이지로 이동합니다.\nOCI 홈 리전 로그인 오라클 클라우드 계정을 생성할 때, 홈 리전을 설정합니다. 오라클 클라우드는 홈 리전 로그인 페이지를 제공합니다. 홈 리전 로그인 페이지 URL 패턴은 다음과 같습니다.\nhttps://console.\u0026lt;REGION-ID\u0026gt;.oraclecloud.com/  는 다음에서 확인할 수 있습니다.\n OCI 리전 정보     아래 [접기/펼치기]를 클릭하여 2020년 3월까지 오픈한 리전 로그인 페이지 링크를 확인할 수 있습니다.\n  [접기/펼치기] OCI 리전 로그인 페이지 목록    Amsterdam: https://console.eu-amsterdam-1.oraclecloud.com  \n Ashburn: https://console.us-ashburn-1.oraclecloud.com  \n Sao Paulo: https://console.sa-saopaulo-1.oraclecloud.com  \n Frankfurt: https://console.eu-frankfurt-1.oraclecloud.com  \n Jeddah: https://console.me-jeddah-1.oraclecloud.com  \n London: https://console.uk-london-1.oraclecloud.com  \n Melbourne: https://console.ap-melbourne-1.oraclecloud.com  \n Montreal: https://console.ca-montreal-1.oraclecloud.com  \n Mumbai: https://console.ap-mumbai-1.oraclecloud.com  \n Osaka: https://console.ap-osaka-1.oraclecloud.com  \n Phoenix: https://console.us-phoenix-1.oraclecloud.com  \n Tokyo: https://console.ap-tokyo-1.oraclecloud.com  \n Toronto: https://console.ca-toronto-1.oraclecloud.com  \n Seoul: https://console.ap-seoul-1.oraclecloud.com  \n Sydney: https://console.ap-sydney-1.oraclecloud.com  \n Zurich: https://console.eu-zurich-1.oraclecloud.com  \n    오라클 클라우드의 각 홈 리전 로그인 페이지는 Oracle IDCS와 OCI IAM으로 로그인하는 방법을 제공합니다. Oracle IAM으로 로그인하면 OCI 자원만 접근 가능할 수 있기 때문에 다음 이미지와 같이 다른 PaaS 서비스는 메뉴에 출력되지 않습니다.\n오라클 클라우드의 각 홈 리전 로그인 페이지에서 Oracle IDCS로 로그인하면 Oracle IDCS가 SSO 처리를 합니다. 따라서 다음 이미지와 같이 오라클 클라우드에서 OCI Classic 기반으로 개발된 모든 PaaS에 접근이 가능해집니다.\n인증 체계 선택 Oracle IDCS와 OCI IAM 중에서 어떤 ID 관리 방식을 사용할지 혼동될 수 있습니다. ID 관리 방식 선택에 다음과 같은 선택 기준을 사용할 수 있습니다.\n OCI 자원만을 사용할 경우: OCI IAM 체계를 선택할 수 있음 OCI 자원과 Oracle PaaS와 Oracle SaaS를 사용할 경우: Oracle IDCS 권장 정밀한 ID 관리 체계를 원할 경우: Oracle IDCS권장 자동화에 사용하는 API 방식에 따라 선택 가능  참고문서  Identity and Access Management Level 200    Cloud Account(Tenancy) 구조     "
},
{
	"uri": "http://cloud-docs.taewan.me/010.oci_intro/basic_concept/initial_oci_tenancy/",
	"title": "OCI Tenancy 생성",
	"tags": [],
	"description": "OCI 사용자의 ID 관리 체계인 Oracle IDCS(Identity Cloud Service)와 OCI IAM(Identity &amp; Access Management)에 대하여 소개합니다.",
	"content": " 오라클 클라우드 계정을 등록하면 OCI Tenancy가 위 그림과 같이 만들어집니다. 오라클 클라우드 계정이 생성될 때, Oracle IDCS와 OCI IAM이 관리자를 만들고 관리자 권한을 부여하는 과정을 소개합니다.\n중심으로 사용자 계정과 권한이 설정되는 과정을 살펴보겠습니다.\n이번 문서는 다음과 같은 목차로 구성됩니다.\n 오라클 클라우드 Tenancy 생성  Step 01: 오라클 클라우드 계정 등록 Step 02: 클라우드 사용자 생성  Oracle IDCS 권한 설정 OCI IAM 권한 설정  Step 03: IAM 관리자 권한 설정 Step 04: Oracle IDCS 계정 Federation  요약    오라클 클라우드 Tenancy 생성 오라클 클라우드 계정을 등록하면 해당 계정(Account)을 위한 Tenancy가 생성됩니다. OCI에서 테넌시는 완전히 독립되고 격리된 사용자 기준의 최상위 단위입니다. OCI에 생성된 계정이 바로 Tenancy라고 말할 수 있습니다. Tenancy가 만들어지는 과정을 살펴보겠습니다.\n오라클 클라우드의 공식 브랜드명은 OCI입니다. 오라클 클라우드는 OCI 인프라스트럭처를 기반으로 하는 서비스와 OCI Classic 기반 PaaS로 구성됩니다. 여기서 OCI 인프라스트럭처도 OCI라고 합니다. 이 문서에서는 오라클 클라우드를 의미하는 OCI와 OCI 인프라스트럭처를 동시에 다룹니다. 그렇다 보니 단어 사용이 혼동될 수 있습니다. 따라서 오라클 클라우드 전체를 나타낼 때는 Oracle Cloud로 표기하고 OCI 인프라스트럭처 나타낼 때는 OCI로 표기하겠습니다.\n Step 01: 오라클 클라우드 계정 등록    항목 설정값     Email tony.stark@avengers.io   Cloud Account avengers   Home Region Seoul    위 설정으로 Oracle Cloud 계정을 등록하면 OCI와 Oracle Cloud에 다음과 같은 작업이 진행됩니다. Tenancy와 인스턴스를 생성할 때 Cloud Account 항목에 입력한 설정을 사용합니다.\n OCI의 Seoul 리전에 Tenancy 생성  avengers 테넌시 생성  Oracle Cloud의 Oracle IDCS에 인스턴스 생성  avengers 인스턴스 생성   Step 02: 클라우드 사용자 생성 Oracle Cloud 계정 등록에서 입력한 Email과 패스워드 설정을 이용하여 Oracle IDCS와 OCI IAM은 각각 관리자(Administrator User)를 생성합니다. 위 설정에 따르면 Oracle IDCS와 OCI IAM은 tony.stark@avengers.in이라는 사용자를 만들고 동일한 패스워드를 설정합니다.\nOracle IDCS 권한 설정 Oracle IDCS는 tony.stark@avengers.in 사용자에게 다음과 같은 두 Role을 설정합니다.\n   Role 이름 권한     Cloud Account Administrator Oracle Cloud의 모든 서비스에 대한 관리자 권한 취득, 모든 자원의 모든 제어권 획득   Identity Domain Administrator Oracle Cloud IDCS의 관리자 권한 획득, Oracle IDCS에서 계정 관리 권한 획득    Oracle IDCS은 tony.stark@avengers.in에게 Oracle Cloud의 avengers 인스턴스에서 모든 자원을 사용하고 계정을 관리할 수 있는 권한을 할당합니다.\nOCI IAM 권한 설정 OCI IAM은 tony.stark@avengers.in 사용자 만들고, 이 사용자를 Administrator 그룹에 포함합니다. Administrator 그룹은 다음에 관리자 권한이 부여되는 그룹입니다.\nStep 03: IAM 관리자 권한 설정 OCI에서는 avengers 테넌시에 Root 컴파트먼트를 만듭니다. Root 컴파트먼트는 OCI에서 자원을 묶는 논리적 단위입니다. OCID는 모든 자원을 구분하는 구분자로 OCID를 사용합니다. Root 컴파트먼트의 OCID를 확인해보면 Tenancy OCID와 같은 것을 확인할 수 있습니다. 즉 avengers 테넌시의 Root 컴파트먼트의 실체는 avengers 테넌시입니다. OCI 자원을 논리적으로 묶는 최상위 그룹은 Tenancy가 되는 것은 당연해 보입니다. 다음 이미지는 Root 컴파트먼트와 Tenancy의 OCID를 확인하는 이미지입니다.\nRoot 컴파트먼트가 만들어진 다음에 OCI IAM은 Administrator 그룹에 Tenancy의 모든 자원에 대한 관리자 권한을 부여하는 Tenant Admin Policy를 적용합니다. 이제 Administrator 그룹에 포함된 tony.stark@avengers.in 사용자는 OCI의 Root 컴파트먼트 즉 Tenancy의 모든 자원에 대한 관리자 권한을 갖게 됩니다.\nStep 04: Oracle IDCS 계정 Federation Oracle IDCS는 avengers 인스턴스의 관리자인 tony.stark@avengers.in을 OCI에 동기화하여 OCI Synched User를 만듭니다. 이렇게 만들어지는 동기화 사용자는 접미사로 oracleidentitycloudservice/가 붙습니다. 따라서 OCI avengers 테넌시에는 oracleidentitycloudservice/tony.stark@avengers.io 사용자가 만들어집니다.\n그리고 Oracle IDCS는 avengers 인스턴스의 OCI_Administrator 그룹을 OCI avengers 테넌시의 Administrator그룹에 매핑합니다. Oracle IDCS가 관리자 권한을 부여한 tony.stark@avengers.in는 OCI에 로그인 할 수 있고, OCI의 Administrator 그룹에 매핑된 Oracle IDCS의 OCI_Administrator 그룹에 소속되기 때문에 OCI avengers 테넌시에서 관리자 권한을 획득하게 됩니다.\n요약 Oracle Cloud 계정을 등록하면 Oracle Cloud는 OCI Tenancy와 Oracle Cloud의 인스턴스를 설정한 Account 명으로 만듭니다. 그리고 OCI IAM과 Oracle IDCS로 각각 관리자 계정을 생성합니다.\nOCI IAM과 Oracle IDCS는 Oracle Cloud 계정을 등록과정에서 설정한 E-mail과 패스워드로 계정을 생성합니다. 그리고 Oracle IDCS는 생성한 계정에 Cloud Account Administrator와 Identity Domain Administrator 롤을 설정하여 관리자 권한을 부여합니다. OCI IAM은 생성한 계정을 Administrator 그룹에 할당하고 이 그룹에 Tenancy의 모든 자원을 관리하는 Policy를 적용하여 관리자 권한을 부여합니다.\n마지막으로 Oracle IDCS는 앞에서 생성한 관리자를 OCI_Administrator 그룹에 할당하고 이 그룹을 OCI Administrator 그룹에 매핑합니다. 그리고 Oracle IDCS가 생성한 관리자를 OCI에 동기화하는 Federation User를 만들어 로그인할 수 있도록 합니다.\nOracle Cloud 계정 생성 과정에서 만들어진 Oracle IDCS 관리자와 OCI IAM 관리자는 이러한 생성 과정을 통해서 Oracle Cloud의 모든 자원에 접근하고 관리할 수 있는 권한을 획득하게 됩니다.\n"
},
{
	"uri": "http://cloud-docs.taewan.me/010.oci_intro/basic_concept/cloud_terminologie_mapping_between_vendors/",
	"title": "클라우드 서비스 용어 비교",
	"tags": [],
	"description": "주요 클라우드 서비스 프로바이더들이 사용하는 용어를 비교합니다.",
	"content": " Oracle Cloud Infrastructure, AWS (Amazon Web Services), Microsoft Azure 및 Google Cloud Platform에서 유사한 클라우드 서비스를 제공합니다. 다음 표는 4 개의 클라우드 공급 업체에서 서비스를 매핑합니다.\n   분류 Oracle Cloud Infrastructure AWS Azure Google     Regions Availability Domain (AD) Availability Zone (AZ) Availability Zone (AZ) Zones   Networking \u0026amp; Content Delivery Oracle Cloud Infrastructure Virtual Cloud Network (VCN) Amazon Virtual Private Cloud (VPC) Virtual Network Virtual Private Cloud   Networking \u0026amp; Content Delivery Oracle Cloud Infrastructure Load Balancing Elastic Load Balancing Load Balancer; Application Gateway Cloud Load Balancing   Networking \u0026amp; Content Delivery Oracle Cloud Infrastructure FastConnect AWS Direct Connect Azure ExpressRoute Cloud Interconnect   Compute Oracle Cloud Infrastructure Compute - Virtual Machines Amazon EC2 Azure Virtual Machines Compute Engine   Compute Oracle Cloud Infrastructure Compute - Bare Metal Amazon EC2 - I3.metal     Compute Oracle Cloud Infrastructure Compute - GPU Amazon EC2 - P2, P3, G3 instances Azure N-Series Google GPU   Compute Oracle Cloud Infrastructure Container Engine for Kubernetes Amazon Elastic Compute Cloud Container Service Azure Kubernetes Service Kubernetes Engine   Compute Oracle Cloud Infrastructure Container Registry EC2 Container Registry Azure Container Registry Container Registry   Compute Oracle Functions AWS Lambda Azure Functions; Azure Event Grid Cloud Functions   Storage Oracle Cloud Infrastructure Block Volumes Amazon Elastic Block Store (EBS) Azure Storage Disk Compute Engine Persistent Disks   Storage Oracle Cloud Infrastructure File Storage Amazon Elastic File System Azure Files ZFS/Avere; Cloud Filestore (beta)   Storage Oracle Cloud Infrastructure Object Storage Amazon Simple Storage Service (S3) Azure Storage Cloud Storage; Cloud Storage Nearline   Storage Oracle Cloud Infrastructure Archive Storage Amazon Glacier Azure Storage - Standard Cloud Storage Coldline   Storage Oracle Cloud Infrastructure Data Transfer Service Import/Export Disk; Import/Export Snowball; Import/Export Snowmobile Import/Export; Azure Data Box Transfer Appliance; Transfer Service   Storage Oracle Cloud Infrastructure Storage Gateway Storage Gateway StorSimple ZFS/Avere   Security, Identity \u0026amp; Compliance Oracle Cloud Infrastructure Identity and Access Management AWS Identity and Access Management (IAM); AWS Organizations Azure Active Directory ; Azure Subscription and Service Management + Azure RBAC Cloud Identity \u0026amp; Access Management   Security, Identity \u0026amp; Compliance Oracle Cloud Infrastructure Key Management Service Key Management Service Key Vault Cloud Key Management Service   Security, Identity \u0026amp; Compliance Oracle Cloud Infrastructure Audit AWS CloudTrail Activity Logging Cloud Audit Logging   Database Oracle Database Cloud Service Amazon Relational Database Service (RDS) Azure SQL Database Cloud SQL(MySQL, Postgres); Cloud Spanner   Database Oracle Autonomous Transaction Processing Amazon Aurora Azure SQL Database; Azure Cosmos DB Cloud SQL; Cloud Spanner   Database Oracle Autonomous Data Warehouse Amazon Redshift Azure SQL Data Warehouse BigQuery   Database Oracle NoSQL Amazon DynamoDB Azure Cosmos DB Cloud Datastore, Cloud Bigtable   Edge Oracle Cloud Infrastructure DNS Amazon Route53 Azure DNS; Azure Traffic Manager Cloud DNS   Edge Oracle Cloud Infrastructure Email Delivery Amazon SES Marketplace - Email Partners   Edge Oracle Cloud Infrastructure Web Application Firewall Web Application Firewall Application Gateway Web Application Firewall Partners   Edge Oracle Cloud Infrastructure DDoS Protection AWS Shield Azure DDoS Protection Service Cloud Armor    참고 문서  [Oracle Cloud Home]Cloud Service Mapping     "
},
{
	"uri": "http://cloud-docs.taewan.me/300.data_and_ai/",
	"title": "Data and AI ",
	"tags": [],
	"description": "OCI의 Platform 서비스 중에서 &#39;Data and AI&#39;에 포함되는 서비스를 정리합니다.",
	"content": "오라클 클라우드에서 플랫폼 서비스 그룹인 Data and AI에는 OCI 데이터 분석과 인공지능 서비스의 묶음입니다. Data and AI 플랫폼 서비스 그룹은 다음 서비스로 구성됩니다.\n   서비스 이름(영문) 서비스 이름(한글) 설명     Big Data Service 빅데이터 서비스 - 빅데이타 하둡 클러스터를 제공하는 서비스   Digital Assistenct 디지털 어시스턴트 - 챗봇 서비스   Data Catalog 데이터 카탈로그 - 데이터 자산화 서비스   Data Flow 데이터 플로우 - 서버리스 Spark 서비스   Data Science 데이터 과학 - Data Science는 데이터 분석가를 위해 OCI에서 머신러닝 모델 구축, 학습 및 관리하는 플랫폼 - 파이썬 및 오픈소스 머신러닝 라이브러리 기반 플랫폼 서비스입    Oracle Data Science는 데이터 과학자가 Python 및 오픈 소스 머신 러닝 라이브러리를 사용하여 Oracle Cloud Infrastructure에서 모델을 구축, 교육 및 관리 할 수있는 플랫폼입니다.\n"
},
{
	"uri": "http://cloud-docs.taewan.me/700.oci_tools/",
	"title": "OCI 지원 도구",
	"tags": [],
	"description": "OCI 사용 편의성을 돕는 툴을 소개합니다. OCI Cloud Shell, OCI Rest API, Terraform, Ansible를 다룹니다.",
	"content": " OCI(Oracle Cloud Infrastructure(OCI)는 오라클 클라우드가 제공하는 모든 자원 관리 기능을 REST API로 제공합니다. 이 REST API를 기반으로 CLI 툴, IaC(Infrastructure as Code) 툴, IDE 플러그인, OCI 모니터링 플러그인 등이 개발되었습니다.\n다음과 같은 OCI 툴을 DevOps 및 OCI 관리 툴로 활용할 수 있습니다. 2020.02년 현재 대표적인 OCI 지원 툴로는 다음과 같은 것들이 있습니다.\n   도구 이름 역할 개발조직 코드 레파지토리/문서 사이트     OCI REST API OCI 자원 관리 기능을 공개하는 REST 인터페이스 Oracle 비공개   OCI Python SDK OCI REST API의 Python 랩퍼 Oracle Github: OCI Python SDK      OCI Java SDK OCI REST API의 Java 랩퍼 Oracle Github: OCI Java SDK      OCI Ruby SDK OCI REST API의 Ruby 랩퍼 Oracle Github: OCI Ruby SDK      OCI Go SDK OCI REST API의 Go 랩퍼 Oracle Github: OCI Go SDK      OCI CLI OCI Python SDK 기반으로 개발된 CLI 툴 Oracle 주도 Open Source Github: OCI CLI      OCI Ansible Module Ansible에서 OCI 자언 프로비저닝을 지원하는 모듈 Oracle 주도 Open Source Github: oci-ansible-modules      OCI Terraform Provider Terraform에서 OCI 자원을 제어할 수있도록 지원하는 Provider Oracle 주도 Open Source Terraform OCI Docs      OCI Grafana Plug-in Grafana에서 OCI 모니터링 정보를 쿼리하고 Grafana에 출력하는 것을 지원하는 Plug-in Oracle Grafana Docs      Jenkins OCI Plug-in Jenkin의 OCI 자원 접근 및 관리를 돕는 Plug-in Oracle github:oci-compute-jenkins-plugin      Eclipse OCI Plug-in: Oracle Cloud Tools Eclipse OCI Plug-in Oracle Eclipse Marketplace:Oracle Cloud Tools   github:oci-toolkit-eclipse       다음과 같은 OCI 지원 툴을 설치 및 사용법에 대하여 정리하겠습니다.\n OCI REST API 사용법 OCI SDK 사용법 [Java, Python, Ruby, Go] OCI CLI 설치 및 사용법 OCI Cloud Shell OCI Anaisible 모듈 OCI Terraform Eclipse Plugin - OCI Jenkins OCI Plugin Grafana Packer  참고 문서  [Official OCI Docs]Other Tools and Plug-ins     "
},
{
	"uri": "http://cloud-docs.taewan.me/980.oci-related-sites/",
	"title": "OCI 관련 사이트 모음",
	"tags": [],
	"description": "OCI 관련 사이트 모음입니다.",
	"content": "Oracle Cloud 관련 사이트, 블로그 및 문서를 다음과 같은 분류로 정리합니다.\n Oracle Cloud 관련 사이트 및 블로그  한글 사이트 해외 사이트  Oracle Cloud 관련 문서  Computing 관련 문서 Networking 관련 문서 DevOps 관련 문서  Github 레파지토리 Oracle Developer Meetup  이번 절은 다음과 같은 문서로 구성됩니다.\n OCI 관련 사이트 모음     OCI 관련 유용한 서비스  \n OCI 비용 시뮬레이터   \n OCI 상태 알림 서비스   \n CloudHarmondy: 네트웍 테스트   \n OCI 비쥬얼 다이어그램     \n "
},
{
	"uri": "http://cloud-docs.taewan.me/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "http://cloud-docs.taewan.me/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]